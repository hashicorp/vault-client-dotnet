/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.13.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Vault.Client;
using Vault.Api;
// uncomment below to import models
//using Vault.Model;

namespace Vault.Test.Api
{
    /// <summary>
    ///  Class for testing System
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SystemTests : IDisposable
    {
        private Vault.Api.System instance;

        public SystemTests()
        {
            // instance = new Vault.Api.System();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of System
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' System
            //Assert.IsType<System>(instance);
        }

        /// <summary>
        /// Test DeleteSystemAuditPath
        /// </summary>
        [Fact]
        public void DeleteSystemAuditPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSystemAuditPath(path);
        }

        /// <summary>
        /// Test DeleteSystemAuthPath
        /// </summary>
        [Fact]
        public void DeleteSystemAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSystemAuthPath(path);
        }

        /// <summary>
        /// Test DeleteSystemConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void DeleteSystemConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.DeleteSystemConfigAuditingRequestHeadersHeader(header);
        }

        /// <summary>
        /// Test DeleteSystemConfigCors
        /// </summary>
        [Fact]
        public void DeleteSystemConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemConfigCors();
        }

        /// <summary>
        /// Test DeleteSystemConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void DeleteSystemConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.DeleteSystemConfigUiHeadersHeader(header);
        }

        /// <summary>
        /// Test DeleteSystemGenerateRoot
        /// </summary>
        [Fact]
        public void DeleteSystemGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemGenerateRoot();
        }

        /// <summary>
        /// Test DeleteSystemGenerateRootAttempt
        /// </summary>
        [Fact]
        public void DeleteSystemGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemGenerateRootAttempt();
        }

        /// <summary>
        /// Test DeleteSystemLoggers
        /// </summary>
        [Fact]
        public void DeleteSystemLoggersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemLoggers();
        }

        /// <summary>
        /// Test DeleteSystemLoggersName
        /// </summary>
        [Fact]
        public void DeleteSystemLoggersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemLoggersName(name);
        }

        /// <summary>
        /// Test DeleteSystemMountsPath
        /// </summary>
        [Fact]
        public void DeleteSystemMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSystemMountsPath(path);
        }

        /// <summary>
        /// Test DeleteSystemPluginsCatalogName
        /// </summary>
        [Fact]
        public void DeleteSystemPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemPluginsCatalogName(name);
        }

        /// <summary>
        /// Test DeleteSystemPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void DeleteSystemPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //instance.DeleteSystemPluginsCatalogTypeName(name, type);
        }

        /// <summary>
        /// Test DeleteSystemPoliciesAclName
        /// </summary>
        [Fact]
        public void DeleteSystemPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemPoliciesAclName(name);
        }

        /// <summary>
        /// Test DeleteSystemPoliciesPasswordName
        /// </summary>
        [Fact]
        public void DeleteSystemPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemPoliciesPasswordName(name);
        }

        /// <summary>
        /// Test DeleteSystemPolicyName
        /// </summary>
        [Fact]
        public void DeleteSystemPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemPolicyName(name);
        }

        /// <summary>
        /// Test DeleteSystemQuotasRateLimitName
        /// </summary>
        [Fact]
        public void DeleteSystemQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSystemQuotasRateLimitName(name);
        }

        /// <summary>
        /// Test DeleteSystemRaw
        /// </summary>
        [Fact]
        public void DeleteSystemRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemRaw();
        }

        /// <summary>
        /// Test DeleteSystemRawPath
        /// </summary>
        [Fact]
        public void DeleteSystemRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSystemRawPath(path);
        }

        /// <summary>
        /// Test DeleteSystemRekeyBackup
        /// </summary>
        [Fact]
        public void DeleteSystemRekeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemRekeyBackup();
        }

        /// <summary>
        /// Test DeleteSystemRekeyInit
        /// </summary>
        [Fact]
        public void DeleteSystemRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemRekeyInit();
        }

        /// <summary>
        /// Test DeleteSystemRekeyRecoveryKeyBackup
        /// </summary>
        [Fact]
        public void DeleteSystemRekeyRecoveryKeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemRekeyRecoveryKeyBackup();
        }

        /// <summary>
        /// Test DeleteSystemRekeyVerify
        /// </summary>
        [Fact]
        public void DeleteSystemRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSystemRekeyVerify();
        }

        /// <summary>
        /// Test ListSystemConfigUiHeaders
        /// </summary>
        [Fact]
        public void ListSystemConfigUiHeadersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemConfigUiHeaders(list);
        }

        /// <summary>
        /// Test ListSystemLeasesLookup
        /// </summary>
        [Fact]
        public void ListSystemLeasesLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemLeasesLookup(list);
        }

        /// <summary>
        /// Test ListSystemLeasesLookupPrefix
        /// </summary>
        [Fact]
        public void ListSystemLeasesLookupPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //string list = null;
            //instance.ListSystemLeasesLookupPrefix(prefix, list);
        }

        /// <summary>
        /// Test ListSystemPluginsCatalogType
        /// </summary>
        [Fact]
        public void ListSystemPluginsCatalogTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //string list = null;
            //instance.ListSystemPluginsCatalogType(type, list);
        }

        /// <summary>
        /// Test ListSystemPoliciesAcl
        /// </summary>
        [Fact]
        public void ListSystemPoliciesAclTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemPoliciesAcl(list);
        }

        /// <summary>
        /// Test ListSystemPoliciesPassword
        /// </summary>
        [Fact]
        public void ListSystemPoliciesPasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemPoliciesPassword(list);
        }

        /// <summary>
        /// Test ListSystemQuotasRateLimit
        /// </summary>
        [Fact]
        public void ListSystemQuotasRateLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemQuotasRateLimit(list);
        }

        /// <summary>
        /// Test ListSystemVersionHistory
        /// </summary>
        [Fact]
        public void ListSystemVersionHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListSystemVersionHistory(list);
        }

        /// <summary>
        /// Test ReadSystemAudit
        /// </summary>
        [Fact]
        public void ReadSystemAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemAudit();
        }

        /// <summary>
        /// Test ReadSystemAuth
        /// </summary>
        [Fact]
        public void ReadSystemAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemAuth();
        }

        /// <summary>
        /// Test ReadSystemAuthPath
        /// </summary>
        [Fact]
        public void ReadSystemAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.ReadSystemAuthPath(path);
        }

        /// <summary>
        /// Test ReadSystemAuthPathTune
        /// </summary>
        [Fact]
        public void ReadSystemAuthPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.ReadSystemAuthPathTune(path);
        }

        /// <summary>
        /// Test ReadSystemConfigAuditingRequestHeaders
        /// </summary>
        [Fact]
        public void ReadSystemConfigAuditingRequestHeadersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemConfigAuditingRequestHeaders();
        }

        /// <summary>
        /// Test ReadSystemConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void ReadSystemConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.ReadSystemConfigAuditingRequestHeadersHeader(header);
        }

        /// <summary>
        /// Test ReadSystemConfigCors
        /// </summary>
        [Fact]
        public void ReadSystemConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemConfigCors();
        }

        /// <summary>
        /// Test ReadSystemConfigStateSanitized
        /// </summary>
        [Fact]
        public void ReadSystemConfigStateSanitizedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemConfigStateSanitized();
        }

        /// <summary>
        /// Test ReadSystemConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void ReadSystemConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.ReadSystemConfigUiHeadersHeader(header);
        }

        /// <summary>
        /// Test ReadSystemGenerateRoot
        /// </summary>
        [Fact]
        public void ReadSystemGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemGenerateRoot();
        }

        /// <summary>
        /// Test ReadSystemGenerateRootAttempt
        /// </summary>
        [Fact]
        public void ReadSystemGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemGenerateRootAttempt();
        }

        /// <summary>
        /// Test ReadSystemHaStatus
        /// </summary>
        [Fact]
        public void ReadSystemHaStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemHaStatus();
        }

        /// <summary>
        /// Test ReadSystemHealth
        /// </summary>
        [Fact]
        public void ReadSystemHealthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemHealth();
        }

        /// <summary>
        /// Test ReadSystemHostInfo
        /// </summary>
        [Fact]
        public void ReadSystemHostInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemHostInfo();
        }

        /// <summary>
        /// Test ReadSystemInFlightReq
        /// </summary>
        [Fact]
        public void ReadSystemInFlightReqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInFlightReq();
        }

        /// <summary>
        /// Test ReadSystemInit
        /// </summary>
        [Fact]
        public void ReadSystemInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInit();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersActivity
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersActivity();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersActivityExport
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersActivityExportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersActivityExport();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersActivityMonthly
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersActivityMonthlyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersActivityMonthly();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersConfig
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersConfig();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersEntities
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersEntitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersEntities();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersRequests
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersRequests();
        }

        /// <summary>
        /// Test ReadSystemInternalCountersTokens
        /// </summary>
        [Fact]
        public void ReadSystemInternalCountersTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalCountersTokens();
        }

        /// <summary>
        /// Test ReadSystemInternalInspectRouterTag
        /// </summary>
        [Fact]
        public void ReadSystemInternalInspectRouterTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tag = null;
            //instance.ReadSystemInternalInspectRouterTag(tag);
        }

        /// <summary>
        /// Test ReadSystemInternalSpecsOpenapi
        /// </summary>
        [Fact]
        public void ReadSystemInternalSpecsOpenapiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalSpecsOpenapi();
        }

        /// <summary>
        /// Test ReadSystemInternalUiFeatureFlags
        /// </summary>
        [Fact]
        public void ReadSystemInternalUiFeatureFlagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalUiFeatureFlags();
        }

        /// <summary>
        /// Test ReadSystemInternalUiMounts
        /// </summary>
        [Fact]
        public void ReadSystemInternalUiMountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalUiMounts();
        }

        /// <summary>
        /// Test ReadSystemInternalUiMountsPath
        /// </summary>
        [Fact]
        public void ReadSystemInternalUiMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.ReadSystemInternalUiMountsPath(path);
        }

        /// <summary>
        /// Test ReadSystemInternalUiNamespaces
        /// </summary>
        [Fact]
        public void ReadSystemInternalUiNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalUiNamespaces();
        }

        /// <summary>
        /// Test ReadSystemInternalUiResultantAcl
        /// </summary>
        [Fact]
        public void ReadSystemInternalUiResultantAclTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemInternalUiResultantAcl();
        }

        /// <summary>
        /// Test ReadSystemKeyStatus
        /// </summary>
        [Fact]
        public void ReadSystemKeyStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemKeyStatus();
        }

        /// <summary>
        /// Test ReadSystemLeader
        /// </summary>
        [Fact]
        public void ReadSystemLeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemLeader();
        }

        /// <summary>
        /// Test ReadSystemLeases
        /// </summary>
        [Fact]
        public void ReadSystemLeasesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemLeases();
        }

        /// <summary>
        /// Test ReadSystemLeasesCount
        /// </summary>
        [Fact]
        public void ReadSystemLeasesCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemLeasesCount();
        }

        /// <summary>
        /// Test ReadSystemMetrics
        /// </summary>
        [Fact]
        public void ReadSystemMetricsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string format = null;
            //instance.ReadSystemMetrics(format);
        }

        /// <summary>
        /// Test ReadSystemMonitor
        /// </summary>
        [Fact]
        public void ReadSystemMonitorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string logFormat = null;
            //string logLevel = null;
            //instance.ReadSystemMonitor(logFormat, logLevel);
        }

        /// <summary>
        /// Test ReadSystemMounts
        /// </summary>
        [Fact]
        public void ReadSystemMountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemMounts();
        }

        /// <summary>
        /// Test ReadSystemMountsPath
        /// </summary>
        [Fact]
        public void ReadSystemMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.ReadSystemMountsPath(path);
        }

        /// <summary>
        /// Test ReadSystemMountsPathTune
        /// </summary>
        [Fact]
        public void ReadSystemMountsPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.ReadSystemMountsPathTune(path);
        }

        /// <summary>
        /// Test ReadSystemPluginsCatalog
        /// </summary>
        [Fact]
        public void ReadSystemPluginsCatalogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPluginsCatalog();
        }

        /// <summary>
        /// Test ReadSystemPluginsCatalogName
        /// </summary>
        [Fact]
        public void ReadSystemPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemPluginsCatalogName(name);
        }

        /// <summary>
        /// Test ReadSystemPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void ReadSystemPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //instance.ReadSystemPluginsCatalogTypeName(name, type);
        }

        /// <summary>
        /// Test ReadSystemPoliciesAclName
        /// </summary>
        [Fact]
        public void ReadSystemPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemPoliciesAclName(name);
        }

        /// <summary>
        /// Test ReadSystemPoliciesPasswordName
        /// </summary>
        [Fact]
        public void ReadSystemPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemPoliciesPasswordName(name);
        }

        /// <summary>
        /// Test ReadSystemPoliciesPasswordNameGenerate
        /// </summary>
        [Fact]
        public void ReadSystemPoliciesPasswordNameGenerateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemPoliciesPasswordNameGenerate(name);
        }

        /// <summary>
        /// Test ReadSystemPolicy
        /// </summary>
        [Fact]
        public void ReadSystemPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ReadSystemPolicy(list);
        }

        /// <summary>
        /// Test ReadSystemPolicyName
        /// </summary>
        [Fact]
        public void ReadSystemPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemPolicyName(name);
        }

        /// <summary>
        /// Test ReadSystemPprof
        /// </summary>
        [Fact]
        public void ReadSystemPprofTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprof();
        }

        /// <summary>
        /// Test ReadSystemPprofAllocs
        /// </summary>
        [Fact]
        public void ReadSystemPprofAllocsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofAllocs();
        }

        /// <summary>
        /// Test ReadSystemPprofBlock
        /// </summary>
        [Fact]
        public void ReadSystemPprofBlockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofBlock();
        }

        /// <summary>
        /// Test ReadSystemPprofCmdline
        /// </summary>
        [Fact]
        public void ReadSystemPprofCmdlineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofCmdline();
        }

        /// <summary>
        /// Test ReadSystemPprofGoroutine
        /// </summary>
        [Fact]
        public void ReadSystemPprofGoroutineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofGoroutine();
        }

        /// <summary>
        /// Test ReadSystemPprofHeap
        /// </summary>
        [Fact]
        public void ReadSystemPprofHeapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofHeap();
        }

        /// <summary>
        /// Test ReadSystemPprofMutex
        /// </summary>
        [Fact]
        public void ReadSystemPprofMutexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofMutex();
        }

        /// <summary>
        /// Test ReadSystemPprofProfile
        /// </summary>
        [Fact]
        public void ReadSystemPprofProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofProfile();
        }

        /// <summary>
        /// Test ReadSystemPprofSymbol
        /// </summary>
        [Fact]
        public void ReadSystemPprofSymbolTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofSymbol();
        }

        /// <summary>
        /// Test ReadSystemPprofThreadcreate
        /// </summary>
        [Fact]
        public void ReadSystemPprofThreadcreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofThreadcreate();
        }

        /// <summary>
        /// Test ReadSystemPprofTrace
        /// </summary>
        [Fact]
        public void ReadSystemPprofTraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemPprofTrace();
        }

        /// <summary>
        /// Test ReadSystemQuotasConfig
        /// </summary>
        [Fact]
        public void ReadSystemQuotasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemQuotasConfig();
        }

        /// <summary>
        /// Test ReadSystemQuotasRateLimitName
        /// </summary>
        [Fact]
        public void ReadSystemQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadSystemQuotasRateLimitName(name);
        }

        /// <summary>
        /// Test ReadSystemRaw
        /// </summary>
        [Fact]
        public void ReadSystemRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ReadSystemRaw(list);
        }

        /// <summary>
        /// Test ReadSystemRawPath
        /// </summary>
        [Fact]
        public void ReadSystemRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string list = null;
            //instance.ReadSystemRawPath(path, list);
        }

        /// <summary>
        /// Test ReadSystemRekeyBackup
        /// </summary>
        [Fact]
        public void ReadSystemRekeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemRekeyBackup();
        }

        /// <summary>
        /// Test ReadSystemRekeyInit
        /// </summary>
        [Fact]
        public void ReadSystemRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemRekeyInit();
        }

        /// <summary>
        /// Test ReadSystemRekeyRecoveryKeyBackup
        /// </summary>
        [Fact]
        public void ReadSystemRekeyRecoveryKeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemRekeyRecoveryKeyBackup();
        }

        /// <summary>
        /// Test ReadSystemRekeyVerify
        /// </summary>
        [Fact]
        public void ReadSystemRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemRekeyVerify();
        }

        /// <summary>
        /// Test ReadSystemRemountStatusMigrationId
        /// </summary>
        [Fact]
        public void ReadSystemRemountStatusMigrationIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string migrationId = null;
            //instance.ReadSystemRemountStatusMigrationId(migrationId);
        }

        /// <summary>
        /// Test ReadSystemReplicationStatus
        /// </summary>
        [Fact]
        public void ReadSystemReplicationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemReplicationStatus();
        }

        /// <summary>
        /// Test ReadSystemRotateConfig
        /// </summary>
        [Fact]
        public void ReadSystemRotateConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemRotateConfig();
        }

        /// <summary>
        /// Test ReadSystemSealStatus
        /// </summary>
        [Fact]
        public void ReadSystemSealStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemSealStatus();
        }

        /// <summary>
        /// Test ReadSystemWrappingLookup
        /// </summary>
        [Fact]
        public void ReadSystemWrappingLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadSystemWrappingLookup();
        }

        /// <summary>
        /// Test UpdateSystemAuditHashPath
        /// </summary>
        [Fact]
        public void UpdateSystemAuditHashPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuditHashRequest systemAuditHashRequest = null;
            //instance.UpdateSystemAuditHashPath(path, systemAuditHashRequest);
        }

        /// <summary>
        /// Test UpdateSystemAuditPath
        /// </summary>
        [Fact]
        public void UpdateSystemAuditPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuditRequest systemAuditRequest = null;
            //instance.UpdateSystemAuditPath(path, systemAuditRequest);
        }

        /// <summary>
        /// Test UpdateSystemAuthPath
        /// </summary>
        [Fact]
        public void UpdateSystemAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuthRequest systemAuthRequest = null;
            //instance.UpdateSystemAuthPath(path, systemAuthRequest);
        }

        /// <summary>
        /// Test UpdateSystemAuthPathTune
        /// </summary>
        [Fact]
        public void UpdateSystemAuthPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuthTuneRequest systemAuthTuneRequest = null;
            //instance.UpdateSystemAuthPathTune(path, systemAuthTuneRequest);
        }

        /// <summary>
        /// Test UpdateSystemCapabilities
        /// </summary>
        [Fact]
        public void UpdateSystemCapabilitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesRequest systemCapabilitiesRequest = null;
            //instance.UpdateSystemCapabilities(systemCapabilitiesRequest);
        }

        /// <summary>
        /// Test UpdateSystemCapabilitiesAccessor
        /// </summary>
        [Fact]
        public void UpdateSystemCapabilitiesAccessorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesAccessorRequest systemCapabilitiesAccessorRequest = null;
            //instance.UpdateSystemCapabilitiesAccessor(systemCapabilitiesAccessorRequest);
        }

        /// <summary>
        /// Test UpdateSystemCapabilitiesSelf
        /// </summary>
        [Fact]
        public void UpdateSystemCapabilitiesSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesSelfRequest systemCapabilitiesSelfRequest = null;
            //instance.UpdateSystemCapabilitiesSelf(systemCapabilitiesSelfRequest);
        }

        /// <summary>
        /// Test UpdateSystemConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void UpdateSystemConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //SystemConfigAuditingRequestHeadersRequest systemConfigAuditingRequestHeadersRequest = null;
            //instance.UpdateSystemConfigAuditingRequestHeadersHeader(header, systemConfigAuditingRequestHeadersRequest);
        }

        /// <summary>
        /// Test UpdateSystemConfigCors
        /// </summary>
        [Fact]
        public void UpdateSystemConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemConfigCorsRequest systemConfigCorsRequest = null;
            //instance.UpdateSystemConfigCors(systemConfigCorsRequest);
        }

        /// <summary>
        /// Test UpdateSystemConfigReloadSubsystem
        /// </summary>
        [Fact]
        public void UpdateSystemConfigReloadSubsystemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string subsystem = null;
            //instance.UpdateSystemConfigReloadSubsystem(subsystem);
        }

        /// <summary>
        /// Test UpdateSystemConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void UpdateSystemConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //SystemConfigUiHeadersRequest systemConfigUiHeadersRequest = null;
            //instance.UpdateSystemConfigUiHeadersHeader(header, systemConfigUiHeadersRequest);
        }

        /// <summary>
        /// Test UpdateSystemGenerateRoot
        /// </summary>
        [Fact]
        public void UpdateSystemGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootRequest systemGenerateRootRequest = null;
            //instance.UpdateSystemGenerateRoot(systemGenerateRootRequest);
        }

        /// <summary>
        /// Test UpdateSystemGenerateRootAttempt
        /// </summary>
        [Fact]
        public void UpdateSystemGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootAttemptRequest systemGenerateRootAttemptRequest = null;
            //instance.UpdateSystemGenerateRootAttempt(systemGenerateRootAttemptRequest);
        }

        /// <summary>
        /// Test UpdateSystemGenerateRootUpdate
        /// </summary>
        [Fact]
        public void UpdateSystemGenerateRootUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootUpdateRequest systemGenerateRootUpdateRequest = null;
            //instance.UpdateSystemGenerateRootUpdate(systemGenerateRootUpdateRequest);
        }

        /// <summary>
        /// Test UpdateSystemInit
        /// </summary>
        [Fact]
        public void UpdateSystemInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemInitRequest systemInitRequest = null;
            //instance.UpdateSystemInit(systemInitRequest);
        }

        /// <summary>
        /// Test UpdateSystemInternalCountersConfig
        /// </summary>
        [Fact]
        public void UpdateSystemInternalCountersConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemInternalCountersConfigRequest systemInternalCountersConfigRequest = null;
            //instance.UpdateSystemInternalCountersConfig(systemInternalCountersConfigRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesLookup
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesLookupRequest systemLeasesLookupRequest = null;
            //instance.UpdateSystemLeasesLookup(systemLeasesLookupRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRenew
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRenewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesRenewRequest systemLeasesRenewRequest = null;
            //instance.UpdateSystemLeasesRenew(systemLeasesRenewRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRenewUrlLeaseId
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRenewUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemLeasesRenewLeaseRequest systemLeasesRenewLeaseRequest = null;
            //instance.UpdateSystemLeasesRenewUrlLeaseId(urlLeaseId, systemLeasesRenewLeaseRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRevoke
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesRevokeRequest systemLeasesRevokeRequest = null;
            //instance.UpdateSystemLeasesRevoke(systemLeasesRevokeRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRevokeForcePrefix
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRevokeForcePrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //instance.UpdateSystemLeasesRevokeForcePrefix(prefix);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRevokePrefixPrefix
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRevokePrefixPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //SystemLeasesRevokePrefixRequest systemLeasesRevokePrefixRequest = null;
            //instance.UpdateSystemLeasesRevokePrefixPrefix(prefix, systemLeasesRevokePrefixRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesRevokeUrlLeaseId
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesRevokeUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemLeasesRevokeLeaseRequest systemLeasesRevokeLeaseRequest = null;
            //instance.UpdateSystemLeasesRevokeUrlLeaseId(urlLeaseId, systemLeasesRevokeLeaseRequest);
        }

        /// <summary>
        /// Test UpdateSystemLeasesTidy
        /// </summary>
        [Fact]
        public void UpdateSystemLeasesTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UpdateSystemLeasesTidy();
        }

        /// <summary>
        /// Test UpdateSystemLoggers
        /// </summary>
        [Fact]
        public void UpdateSystemLoggersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLoggersRequest systemLoggersRequest = null;
            //instance.UpdateSystemLoggers(systemLoggersRequest);
        }

        /// <summary>
        /// Test UpdateSystemLoggersName
        /// </summary>
        [Fact]
        public void UpdateSystemLoggersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemLoggersRequest systemLoggersRequest = null;
            //instance.UpdateSystemLoggersName(name, systemLoggersRequest);
        }

        /// <summary>
        /// Test UpdateSystemMfaValidate
        /// </summary>
        [Fact]
        public void UpdateSystemMfaValidateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemMfaValidateRequest systemMfaValidateRequest = null;
            //instance.UpdateSystemMfaValidate(systemMfaValidateRequest);
        }

        /// <summary>
        /// Test UpdateSystemMountsPath
        /// </summary>
        [Fact]
        public void UpdateSystemMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemMountsRequest systemMountsRequest = null;
            //instance.UpdateSystemMountsPath(path, systemMountsRequest);
        }

        /// <summary>
        /// Test UpdateSystemMountsPathTune
        /// </summary>
        [Fact]
        public void UpdateSystemMountsPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemMountsTuneRequest systemMountsTuneRequest = null;
            //instance.UpdateSystemMountsPathTune(path, systemMountsTuneRequest);
        }

        /// <summary>
        /// Test UpdateSystemPluginsCatalogName
        /// </summary>
        [Fact]
        public void UpdateSystemPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPluginsCatalogRequest systemPluginsCatalogRequest = null;
            //instance.UpdateSystemPluginsCatalogName(name, systemPluginsCatalogRequest);
        }

        /// <summary>
        /// Test UpdateSystemPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void UpdateSystemPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //SystemPluginsCatalogRequest systemPluginsCatalogRequest = null;
            //instance.UpdateSystemPluginsCatalogTypeName(name, type, systemPluginsCatalogRequest);
        }

        /// <summary>
        /// Test UpdateSystemPluginsReloadBackend
        /// </summary>
        [Fact]
        public void UpdateSystemPluginsReloadBackendTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemPluginsReloadBackendRequest systemPluginsReloadBackendRequest = null;
            //instance.UpdateSystemPluginsReloadBackend(systemPluginsReloadBackendRequest);
        }

        /// <summary>
        /// Test UpdateSystemPoliciesAclName
        /// </summary>
        [Fact]
        public void UpdateSystemPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPoliciesAclRequest systemPoliciesAclRequest = null;
            //instance.UpdateSystemPoliciesAclName(name, systemPoliciesAclRequest);
        }

        /// <summary>
        /// Test UpdateSystemPoliciesPasswordName
        /// </summary>
        [Fact]
        public void UpdateSystemPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPoliciesPasswordRequest systemPoliciesPasswordRequest = null;
            //instance.UpdateSystemPoliciesPasswordName(name, systemPoliciesPasswordRequest);
        }

        /// <summary>
        /// Test UpdateSystemPolicyName
        /// </summary>
        [Fact]
        public void UpdateSystemPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPolicyRequest systemPolicyRequest = null;
            //instance.UpdateSystemPolicyName(name, systemPolicyRequest);
        }

        /// <summary>
        /// Test UpdateSystemQuotasConfig
        /// </summary>
        [Fact]
        public void UpdateSystemQuotasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemQuotasConfigRequest systemQuotasConfigRequest = null;
            //instance.UpdateSystemQuotasConfig(systemQuotasConfigRequest);
        }

        /// <summary>
        /// Test UpdateSystemQuotasRateLimitName
        /// </summary>
        [Fact]
        public void UpdateSystemQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemQuotasRateLimitRequest systemQuotasRateLimitRequest = null;
            //instance.UpdateSystemQuotasRateLimitName(name, systemQuotasRateLimitRequest);
        }

        /// <summary>
        /// Test UpdateSystemRaw
        /// </summary>
        [Fact]
        public void UpdateSystemRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRawRequest systemRawRequest = null;
            //instance.UpdateSystemRaw(systemRawRequest);
        }

        /// <summary>
        /// Test UpdateSystemRawPath
        /// </summary>
        [Fact]
        public void UpdateSystemRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemRawRequest systemRawRequest = null;
            //instance.UpdateSystemRawPath(path, systemRawRequest);
        }

        /// <summary>
        /// Test UpdateSystemRekeyInit
        /// </summary>
        [Fact]
        public void UpdateSystemRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyInitRequest systemRekeyInitRequest = null;
            //instance.UpdateSystemRekeyInit(systemRekeyInitRequest);
        }

        /// <summary>
        /// Test UpdateSystemRekeyUpdate
        /// </summary>
        [Fact]
        public void UpdateSystemRekeyUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyUpdateRequest systemRekeyUpdateRequest = null;
            //instance.UpdateSystemRekeyUpdate(systemRekeyUpdateRequest);
        }

        /// <summary>
        /// Test UpdateSystemRekeyVerify
        /// </summary>
        [Fact]
        public void UpdateSystemRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyVerifyRequest systemRekeyVerifyRequest = null;
            //instance.UpdateSystemRekeyVerify(systemRekeyVerifyRequest);
        }

        /// <summary>
        /// Test UpdateSystemRemount
        /// </summary>
        [Fact]
        public void UpdateSystemRemountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRemountRequest systemRemountRequest = null;
            //instance.UpdateSystemRemount(systemRemountRequest);
        }

        /// <summary>
        /// Test UpdateSystemRenew
        /// </summary>
        [Fact]
        public void UpdateSystemRenewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRenewRequest systemRenewRequest = null;
            //instance.UpdateSystemRenew(systemRenewRequest);
        }

        /// <summary>
        /// Test UpdateSystemRenewUrlLeaseId
        /// </summary>
        [Fact]
        public void UpdateSystemRenewUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemRenewLeaseRequest systemRenewLeaseRequest = null;
            //instance.UpdateSystemRenewUrlLeaseId(urlLeaseId, systemRenewLeaseRequest);
        }

        /// <summary>
        /// Test UpdateSystemRevoke
        /// </summary>
        [Fact]
        public void UpdateSystemRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRevokeRequest systemRevokeRequest = null;
            //instance.UpdateSystemRevoke(systemRevokeRequest);
        }

        /// <summary>
        /// Test UpdateSystemRevokeForcePrefix
        /// </summary>
        [Fact]
        public void UpdateSystemRevokeForcePrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //instance.UpdateSystemRevokeForcePrefix(prefix);
        }

        /// <summary>
        /// Test UpdateSystemRevokePrefixPrefix
        /// </summary>
        [Fact]
        public void UpdateSystemRevokePrefixPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //SystemRevokePrefixRequest systemRevokePrefixRequest = null;
            //instance.UpdateSystemRevokePrefixPrefix(prefix, systemRevokePrefixRequest);
        }

        /// <summary>
        /// Test UpdateSystemRevokeUrlLeaseId
        /// </summary>
        [Fact]
        public void UpdateSystemRevokeUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemRevokeLeaseRequest systemRevokeLeaseRequest = null;
            //instance.UpdateSystemRevokeUrlLeaseId(urlLeaseId, systemRevokeLeaseRequest);
        }

        /// <summary>
        /// Test UpdateSystemRotate
        /// </summary>
        [Fact]
        public void UpdateSystemRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UpdateSystemRotate();
        }

        /// <summary>
        /// Test UpdateSystemRotateConfig
        /// </summary>
        [Fact]
        public void UpdateSystemRotateConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRotateConfigRequest systemRotateConfigRequest = null;
            //instance.UpdateSystemRotateConfig(systemRotateConfigRequest);
        }

        /// <summary>
        /// Test UpdateSystemSeal
        /// </summary>
        [Fact]
        public void UpdateSystemSealTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UpdateSystemSeal();
        }

        /// <summary>
        /// Test UpdateSystemStepDown
        /// </summary>
        [Fact]
        public void UpdateSystemStepDownTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UpdateSystemStepDown();
        }

        /// <summary>
        /// Test UpdateSystemToolsHash
        /// </summary>
        [Fact]
        public void UpdateSystemToolsHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemToolsHashRequest systemToolsHashRequest = null;
            //instance.UpdateSystemToolsHash(systemToolsHashRequest);
        }

        /// <summary>
        /// Test UpdateSystemToolsHashUrlalgorithm
        /// </summary>
        [Fact]
        public void UpdateSystemToolsHashUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlalgorithm = null;
            //SystemToolsHashRequest systemToolsHashRequest = null;
            //instance.UpdateSystemToolsHashUrlalgorithm(urlalgorithm, systemToolsHashRequest);
        }

        /// <summary>
        /// Test UpdateSystemToolsRandom
        /// </summary>
        [Fact]
        public void UpdateSystemToolsRandomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.UpdateSystemToolsRandom(systemToolsRandomRequest);
        }

        /// <summary>
        /// Test UpdateSystemToolsRandomSource
        /// </summary>
        [Fact]
        public void UpdateSystemToolsRandomSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.UpdateSystemToolsRandomSource(source, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test UpdateSystemToolsRandomSourceUrlbytes
        /// </summary>
        [Fact]
        public void UpdateSystemToolsRandomSourceUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //string urlbytes = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.UpdateSystemToolsRandomSourceUrlbytes(source, urlbytes, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test UpdateSystemToolsRandomUrlbytes
        /// </summary>
        [Fact]
        public void UpdateSystemToolsRandomUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlbytes = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.UpdateSystemToolsRandomUrlbytes(urlbytes, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test UpdateSystemUnseal
        /// </summary>
        [Fact]
        public void UpdateSystemUnsealTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemUnsealRequest systemUnsealRequest = null;
            //instance.UpdateSystemUnseal(systemUnsealRequest);
        }

        /// <summary>
        /// Test UpdateSystemWrappingLookup
        /// </summary>
        [Fact]
        public void UpdateSystemWrappingLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingLookupRequest systemWrappingLookupRequest = null;
            //instance.UpdateSystemWrappingLookup(systemWrappingLookupRequest);
        }

        /// <summary>
        /// Test UpdateSystemWrappingRewrap
        /// </summary>
        [Fact]
        public void UpdateSystemWrappingRewrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingRewrapRequest systemWrappingRewrapRequest = null;
            //instance.UpdateSystemWrappingRewrap(systemWrappingRewrapRequest);
        }

        /// <summary>
        /// Test UpdateSystemWrappingUnwrap
        /// </summary>
        [Fact]
        public void UpdateSystemWrappingUnwrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingUnwrapRequest systemWrappingUnwrapRequest = null;
            //instance.UpdateSystemWrappingUnwrap(systemWrappingUnwrapRequest);
        }

        /// <summary>
        /// Test UpdateSystemWrappingWrap
        /// </summary>
        [Fact]
        public void UpdateSystemWrappingWrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.UpdateSystemWrappingWrap();
        }
    }
}
