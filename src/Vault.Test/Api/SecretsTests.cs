/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.13.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Vault.Client;
using Vault.Api;
// uncomment below to import models
//using Vault.Model;

namespace Vault.Test.Api
{
    /// <summary>
    ///  Class for testing Secrets
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SecretsTests : IDisposable
    {
        private Vault.Api.Secrets instance;

        public SecretsTests()
        {
            // instance = new Vault.Api.Secrets();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Secrets
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' Secrets
            //Assert.IsType<Secrets>(instance);
        }

        /// <summary>
        /// Test DeleteAdConfig
        /// </summary>
        [Fact]
        public void DeleteAdConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adMountPath = null;
            //instance.DeleteAdConfig(adMountPath);
        }

        /// <summary>
        /// Test DeleteAdLibraryName
        /// </summary>
        [Fact]
        public void DeleteAdLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.DeleteAdLibraryName(name, adMountPath);
        }

        /// <summary>
        /// Test DeleteAdRolesName
        /// </summary>
        [Fact]
        public void DeleteAdRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.DeleteAdRolesName(name, adMountPath);
        }

        /// <summary>
        /// Test DeleteAlicloudConfig
        /// </summary>
        [Fact]
        public void DeleteAlicloudConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alicloudMountPath = null;
            //instance.DeleteAlicloudConfig(alicloudMountPath);
        }

        /// <summary>
        /// Test DeleteAlicloudRoleName
        /// </summary>
        [Fact]
        public void DeleteAlicloudRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string alicloudMountPath = null;
            //instance.DeleteAlicloudRoleName(name, alicloudMountPath);
        }

        /// <summary>
        /// Test DeleteAwsRolesName
        /// </summary>
        [Fact]
        public void DeleteAwsRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string awsMountPath = null;
            //instance.DeleteAwsRolesName(name, awsMountPath);
        }

        /// <summary>
        /// Test DeleteAzureConfig
        /// </summary>
        [Fact]
        public void DeleteAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string azureMountPath = null;
            //instance.DeleteAzureConfig(azureMountPath);
        }

        /// <summary>
        /// Test DeleteAzureRolesName
        /// </summary>
        [Fact]
        public void DeleteAzureRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string azureMountPath = null;
            //instance.DeleteAzureRolesName(name, azureMountPath);
        }

        /// <summary>
        /// Test DeleteConsulRolesName
        /// </summary>
        [Fact]
        public void DeleteConsulRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string consulMountPath = null;
            //instance.DeleteConsulRolesName(name, consulMountPath);
        }

        /// <summary>
        /// Test DeleteCubbyholePath
        /// </summary>
        [Fact]
        public void DeleteCubbyholePathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string cubbyholeMountPath = null;
            //instance.DeleteCubbyholePath(path, cubbyholeMountPath);
        }

        /// <summary>
        /// Test DeleteGcpRolesetName
        /// </summary>
        [Fact]
        public void DeleteGcpRolesetNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.DeleteGcpRolesetName(name, gcpMountPath);
        }

        /// <summary>
        /// Test DeleteGcpStaticAccountName
        /// </summary>
        [Fact]
        public void DeleteGcpStaticAccountNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.DeleteGcpStaticAccountName(name, gcpMountPath);
        }

        /// <summary>
        /// Test DeleteGcpkmsConfig
        /// </summary>
        [Fact]
        public void DeleteGcpkmsConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gcpkmsMountPath = null;
            //instance.DeleteGcpkmsConfig(gcpkmsMountPath);
        }

        /// <summary>
        /// Test DeleteGcpkmsKeysDeregisterKey
        /// </summary>
        [Fact]
        public void DeleteGcpkmsKeysDeregisterKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.DeleteGcpkmsKeysDeregisterKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test DeleteGcpkmsKeysKey
        /// </summary>
        [Fact]
        public void DeleteGcpkmsKeysKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.DeleteGcpkmsKeysKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test DeleteGcpkmsKeysTrimKey
        /// </summary>
        [Fact]
        public void DeleteGcpkmsKeysTrimKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.DeleteGcpkmsKeysTrimKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test DeleteKubernetesConfig
        /// </summary>
        [Fact]
        public void DeleteKubernetesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string kubernetesMountPath = null;
            //instance.DeleteKubernetesConfig(kubernetesMountPath);
        }

        /// <summary>
        /// Test DeleteKubernetesRolesName
        /// </summary>
        [Fact]
        public void DeleteKubernetesRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string kubernetesMountPath = null;
            //instance.DeleteKubernetesRolesName(name, kubernetesMountPath);
        }

        /// <summary>
        /// Test DeleteLdapConfig
        /// </summary>
        [Fact]
        public void DeleteLdapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ldapMountPath = null;
            //instance.DeleteLdapConfig(ldapMountPath);
        }

        /// <summary>
        /// Test DeleteLdapLibraryName
        /// </summary>
        [Fact]
        public void DeleteLdapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.DeleteLdapLibraryName(name, ldapMountPath);
        }

        /// <summary>
        /// Test DeleteLdapRoleName
        /// </summary>
        [Fact]
        public void DeleteLdapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.DeleteLdapRoleName(name, ldapMountPath);
        }

        /// <summary>
        /// Test DeleteLdapStaticRoleName
        /// </summary>
        [Fact]
        public void DeleteLdapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.DeleteLdapStaticRoleName(name, ldapMountPath);
        }

        /// <summary>
        /// Test DeleteMongodbatlasRolesName
        /// </summary>
        [Fact]
        public void DeleteMongodbatlasRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string mongodbatlasMountPath = null;
            //instance.DeleteMongodbatlasRolesName(name, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test DeleteNomadConfigAccess
        /// </summary>
        [Fact]
        public void DeleteNomadConfigAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nomadMountPath = null;
            //instance.DeleteNomadConfigAccess(nomadMountPath);
        }

        /// <summary>
        /// Test DeleteNomadConfigLease
        /// </summary>
        [Fact]
        public void DeleteNomadConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nomadMountPath = null;
            //instance.DeleteNomadConfigLease(nomadMountPath);
        }

        /// <summary>
        /// Test DeleteNomadRoleName
        /// </summary>
        [Fact]
        public void DeleteNomadRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string nomadMountPath = null;
            //instance.DeleteNomadRoleName(name, nomadMountPath);
        }

        /// <summary>
        /// Test DeleteOpenldapConfig
        /// </summary>
        [Fact]
        public void DeleteOpenldapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string openldapMountPath = null;
            //instance.DeleteOpenldapConfig(openldapMountPath);
        }

        /// <summary>
        /// Test DeleteOpenldapLibraryName
        /// </summary>
        [Fact]
        public void DeleteOpenldapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.DeleteOpenldapLibraryName(name, openldapMountPath);
        }

        /// <summary>
        /// Test DeleteOpenldapRoleName
        /// </summary>
        [Fact]
        public void DeleteOpenldapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.DeleteOpenldapRoleName(name, openldapMountPath);
        }

        /// <summary>
        /// Test DeleteOpenldapStaticRoleName
        /// </summary>
        [Fact]
        public void DeleteOpenldapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.DeleteOpenldapStaticRoleName(name, openldapMountPath);
        }

        /// <summary>
        /// Test DeletePkiIssuerRefDerPem
        /// </summary>
        [Fact]
        public void DeletePkiIssuerRefDerPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string pkiMountPath = null;
            //instance.DeletePkiIssuerRefDerPem(issuerRef, pkiMountPath);
        }

        /// <summary>
        /// Test DeletePkiJson
        /// </summary>
        [Fact]
        public void DeletePkiJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.DeletePkiJson(pkiMountPath);
        }

        /// <summary>
        /// Test DeletePkiKeyKeyRef
        /// </summary>
        [Fact]
        public void DeletePkiKeyKeyRefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string keyRef = null;
            //string pkiMountPath = null;
            //instance.DeletePkiKeyKeyRef(keyRef, pkiMountPath);
        }

        /// <summary>
        /// Test DeletePkiRolesName
        /// </summary>
        [Fact]
        public void DeletePkiRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string pkiMountPath = null;
            //instance.DeletePkiRolesName(name, pkiMountPath);
        }

        /// <summary>
        /// Test DeletePkiRoot
        /// </summary>
        [Fact]
        public void DeletePkiRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.DeletePkiRoot(pkiMountPath);
        }

        /// <summary>
        /// Test DeleteRabbitmqRolesName
        /// </summary>
        [Fact]
        public void DeleteRabbitmqRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string rabbitmqMountPath = null;
            //instance.DeleteRabbitmqRolesName(name, rabbitmqMountPath);
        }

        /// <summary>
        /// Test DeleteSecretDataPath
        /// </summary>
        [Fact]
        public void DeleteSecretDataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.DeleteSecretDataPath(path, secretMountPath);
        }

        /// <summary>
        /// Test DeleteSecretMetadataPath
        /// </summary>
        [Fact]
        public void DeleteSecretMetadataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.DeleteSecretMetadataPath(path, secretMountPath);
        }

        /// <summary>
        /// Test DeleteSecretPath
        /// </summary>
        [Fact]
        public void DeleteSecretPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.DeleteSecretPath(path, secretMountPath);
        }

        /// <summary>
        /// Test DeleteSshConfigCa
        /// </summary>
        [Fact]
        public void DeleteSshConfigCaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sshMountPath = null;
            //instance.DeleteSshConfigCa(sshMountPath);
        }

        /// <summary>
        /// Test DeleteSshConfigZeroaddress
        /// </summary>
        [Fact]
        public void DeleteSshConfigZeroaddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sshMountPath = null;
            //instance.DeleteSshConfigZeroaddress(sshMountPath);
        }

        /// <summary>
        /// Test DeleteSshKeysKeyName
        /// </summary>
        [Fact]
        public void DeleteSshKeysKeyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string keyName = null;
            //string sshMountPath = null;
            //instance.DeleteSshKeysKeyName(keyName, sshMountPath);
        }

        /// <summary>
        /// Test DeleteSshRolesRole
        /// </summary>
        [Fact]
        public void DeleteSshRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //string sshMountPath = null;
            //instance.DeleteSshRolesRole(role, sshMountPath);
        }

        /// <summary>
        /// Test DeleteTerraformConfig
        /// </summary>
        [Fact]
        public void DeleteTerraformConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string terraformMountPath = null;
            //instance.DeleteTerraformConfig(terraformMountPath);
        }

        /// <summary>
        /// Test DeleteTerraformRoleName
        /// </summary>
        [Fact]
        public void DeleteTerraformRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string terraformMountPath = null;
            //instance.DeleteTerraformRoleName(name, terraformMountPath);
        }

        /// <summary>
        /// Test DeleteTotpKeysName
        /// </summary>
        [Fact]
        public void DeleteTotpKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string totpMountPath = null;
            //instance.DeleteTotpKeysName(name, totpMountPath);
        }

        /// <summary>
        /// Test DeleteTransitKeysName
        /// </summary>
        [Fact]
        public void DeleteTransitKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string transitMountPath = null;
            //instance.DeleteTransitKeysName(name, transitMountPath);
        }

        /// <summary>
        /// Test GetAdConfig
        /// </summary>
        [Fact]
        public void GetAdConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adMountPath = null;
            //instance.GetAdConfig(adMountPath);
        }

        /// <summary>
        /// Test GetAdCredsName
        /// </summary>
        [Fact]
        public void GetAdCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.GetAdCredsName(name, adMountPath);
        }

        /// <summary>
        /// Test GetAdLibrary
        /// </summary>
        [Fact]
        public void GetAdLibraryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string adMountPath = null;
            //instance.GetAdLibrary(list, adMountPath);
        }

        /// <summary>
        /// Test GetAdLibraryName
        /// </summary>
        [Fact]
        public void GetAdLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.GetAdLibraryName(name, adMountPath);
        }

        /// <summary>
        /// Test GetAdLibraryNameStatus
        /// </summary>
        [Fact]
        public void GetAdLibraryNameStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.GetAdLibraryNameStatus(name, adMountPath);
        }

        /// <summary>
        /// Test GetAdRoles
        /// </summary>
        [Fact]
        public void GetAdRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string adMountPath = null;
            //instance.GetAdRoles(list, adMountPath);
        }

        /// <summary>
        /// Test GetAdRolesName
        /// </summary>
        [Fact]
        public void GetAdRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.GetAdRolesName(name, adMountPath);
        }

        /// <summary>
        /// Test GetAdRotateRoot
        /// </summary>
        [Fact]
        public void GetAdRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adMountPath = null;
            //instance.GetAdRotateRoot(adMountPath);
        }

        /// <summary>
        /// Test GetAlicloudConfig
        /// </summary>
        [Fact]
        public void GetAlicloudConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string alicloudMountPath = null;
            //instance.GetAlicloudConfig(alicloudMountPath);
        }

        /// <summary>
        /// Test GetAlicloudCredsName
        /// </summary>
        [Fact]
        public void GetAlicloudCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string alicloudMountPath = null;
            //instance.GetAlicloudCredsName(name, alicloudMountPath);
        }

        /// <summary>
        /// Test GetAlicloudRole
        /// </summary>
        [Fact]
        public void GetAlicloudRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string alicloudMountPath = null;
            //instance.GetAlicloudRole(list, alicloudMountPath);
        }

        /// <summary>
        /// Test GetAlicloudRoleName
        /// </summary>
        [Fact]
        public void GetAlicloudRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string alicloudMountPath = null;
            //instance.GetAlicloudRoleName(name, alicloudMountPath);
        }

        /// <summary>
        /// Test GetAwsConfigLease
        /// </summary>
        [Fact]
        public void GetAwsConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string awsMountPath = null;
            //instance.GetAwsConfigLease(awsMountPath);
        }

        /// <summary>
        /// Test GetAwsConfigRoot
        /// </summary>
        [Fact]
        public void GetAwsConfigRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string awsMountPath = null;
            //instance.GetAwsConfigRoot(awsMountPath);
        }

        /// <summary>
        /// Test GetAwsCreds
        /// </summary>
        [Fact]
        public void GetAwsCredsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string awsMountPath = null;
            //instance.GetAwsCreds(awsMountPath);
        }

        /// <summary>
        /// Test GetAwsRoles
        /// </summary>
        [Fact]
        public void GetAwsRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string awsMountPath = null;
            //instance.GetAwsRoles(list, awsMountPath);
        }

        /// <summary>
        /// Test GetAwsRolesName
        /// </summary>
        [Fact]
        public void GetAwsRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string awsMountPath = null;
            //instance.GetAwsRolesName(name, awsMountPath);
        }

        /// <summary>
        /// Test GetAwsStsName
        /// </summary>
        [Fact]
        public void GetAwsStsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string awsMountPath = null;
            //instance.GetAwsStsName(name, awsMountPath);
        }

        /// <summary>
        /// Test GetAzureConfig
        /// </summary>
        [Fact]
        public void GetAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string azureMountPath = null;
            //instance.GetAzureConfig(azureMountPath);
        }

        /// <summary>
        /// Test GetAzureCredsRole
        /// </summary>
        [Fact]
        public void GetAzureCredsRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //string azureMountPath = null;
            //instance.GetAzureCredsRole(role, azureMountPath);
        }

        /// <summary>
        /// Test GetAzureRoles
        /// </summary>
        [Fact]
        public void GetAzureRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string azureMountPath = null;
            //instance.GetAzureRoles(list, azureMountPath);
        }

        /// <summary>
        /// Test GetAzureRolesName
        /// </summary>
        [Fact]
        public void GetAzureRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string azureMountPath = null;
            //instance.GetAzureRolesName(name, azureMountPath);
        }

        /// <summary>
        /// Test GetConsulConfigAccess
        /// </summary>
        [Fact]
        public void GetConsulConfigAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string consulMountPath = null;
            //instance.GetConsulConfigAccess(consulMountPath);
        }

        /// <summary>
        /// Test GetConsulCredsRole
        /// </summary>
        [Fact]
        public void GetConsulCredsRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //string consulMountPath = null;
            //instance.GetConsulCredsRole(role, consulMountPath);
        }

        /// <summary>
        /// Test GetConsulRoles
        /// </summary>
        [Fact]
        public void GetConsulRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string consulMountPath = null;
            //instance.GetConsulRoles(list, consulMountPath);
        }

        /// <summary>
        /// Test GetConsulRolesName
        /// </summary>
        [Fact]
        public void GetConsulRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string consulMountPath = null;
            //instance.GetConsulRolesName(name, consulMountPath);
        }

        /// <summary>
        /// Test GetCubbyholePath
        /// </summary>
        [Fact]
        public void GetCubbyholePathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string cubbyholeMountPath = null;
            //string list = null;
            //instance.GetCubbyholePath(path, cubbyholeMountPath, list);
        }

        /// <summary>
        /// Test GetGcpConfig
        /// </summary>
        [Fact]
        public void GetGcpConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gcpMountPath = null;
            //instance.GetGcpConfig(gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpKeyRoleset
        /// </summary>
        [Fact]
        public void GetGcpKeyRolesetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.GetGcpKeyRoleset(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpRolesetName
        /// </summary>
        [Fact]
        public void GetGcpRolesetNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.GetGcpRolesetName(name, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpRolesetRolesetKey
        /// </summary>
        [Fact]
        public void GetGcpRolesetRolesetKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.GetGcpRolesetRolesetKey(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpRolesetRolesetToken
        /// </summary>
        [Fact]
        public void GetGcpRolesetRolesetTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.GetGcpRolesetRolesetToken(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpRolesets
        /// </summary>
        [Fact]
        public void GetGcpRolesetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string gcpMountPath = null;
            //instance.GetGcpRolesets(list, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpStaticAccountName
        /// </summary>
        [Fact]
        public void GetGcpStaticAccountNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.GetGcpStaticAccountName(name, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpStaticAccountNameKey
        /// </summary>
        [Fact]
        public void GetGcpStaticAccountNameKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.GetGcpStaticAccountNameKey(name, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpStaticAccountNameToken
        /// </summary>
        [Fact]
        public void GetGcpStaticAccountNameTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.GetGcpStaticAccountNameToken(name, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpStaticAccounts
        /// </summary>
        [Fact]
        public void GetGcpStaticAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string gcpMountPath = null;
            //instance.GetGcpStaticAccounts(list, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpTokenRoleset
        /// </summary>
        [Fact]
        public void GetGcpTokenRolesetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.GetGcpTokenRoleset(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test GetGcpkmsConfig
        /// </summary>
        [Fact]
        public void GetGcpkmsConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gcpkmsMountPath = null;
            //instance.GetGcpkmsConfig(gcpkmsMountPath);
        }

        /// <summary>
        /// Test GetGcpkmsKeys
        /// </summary>
        [Fact]
        public void GetGcpkmsKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string gcpkmsMountPath = null;
            //instance.GetGcpkmsKeys(list, gcpkmsMountPath);
        }

        /// <summary>
        /// Test GetGcpkmsKeysConfigKey
        /// </summary>
        [Fact]
        public void GetGcpkmsKeysConfigKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.GetGcpkmsKeysConfigKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test GetGcpkmsKeysKey
        /// </summary>
        [Fact]
        public void GetGcpkmsKeysKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.GetGcpkmsKeysKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test GetGcpkmsPubkeyKey
        /// </summary>
        [Fact]
        public void GetGcpkmsPubkeyKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.GetGcpkmsPubkeyKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test GetKubernetesConfig
        /// </summary>
        [Fact]
        public void GetKubernetesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string kubernetesMountPath = null;
            //instance.GetKubernetesConfig(kubernetesMountPath);
        }

        /// <summary>
        /// Test GetKubernetesRoles
        /// </summary>
        [Fact]
        public void GetKubernetesRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string kubernetesMountPath = null;
            //instance.GetKubernetesRoles(list, kubernetesMountPath);
        }

        /// <summary>
        /// Test GetKubernetesRolesName
        /// </summary>
        [Fact]
        public void GetKubernetesRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string kubernetesMountPath = null;
            //instance.GetKubernetesRolesName(name, kubernetesMountPath);
        }

        /// <summary>
        /// Test GetLdapConfig
        /// </summary>
        [Fact]
        public void GetLdapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ldapMountPath = null;
            //instance.GetLdapConfig(ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapCredsName
        /// </summary>
        [Fact]
        public void GetLdapCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapCredsName(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapLibrary
        /// </summary>
        [Fact]
        public void GetLdapLibraryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string ldapMountPath = null;
            //instance.GetLdapLibrary(list, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapLibraryName
        /// </summary>
        [Fact]
        public void GetLdapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapLibraryName(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapLibraryNameStatus
        /// </summary>
        [Fact]
        public void GetLdapLibraryNameStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapLibraryNameStatus(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapRole
        /// </summary>
        [Fact]
        public void GetLdapRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string ldapMountPath = null;
            //instance.GetLdapRole(list, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapRoleName
        /// </summary>
        [Fact]
        public void GetLdapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapRoleName(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapStaticCredName
        /// </summary>
        [Fact]
        public void GetLdapStaticCredNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapStaticCredName(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapStaticRole
        /// </summary>
        [Fact]
        public void GetLdapStaticRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string ldapMountPath = null;
            //instance.GetLdapStaticRole(list, ldapMountPath);
        }

        /// <summary>
        /// Test GetLdapStaticRoleName
        /// </summary>
        [Fact]
        public void GetLdapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.GetLdapStaticRoleName(name, ldapMountPath);
        }

        /// <summary>
        /// Test GetMongodbatlasConfig
        /// </summary>
        [Fact]
        public void GetMongodbatlasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mongodbatlasMountPath = null;
            //instance.GetMongodbatlasConfig(mongodbatlasMountPath);
        }

        /// <summary>
        /// Test GetMongodbatlasCredsName
        /// </summary>
        [Fact]
        public void GetMongodbatlasCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string mongodbatlasMountPath = null;
            //instance.GetMongodbatlasCredsName(name, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test GetMongodbatlasRoles
        /// </summary>
        [Fact]
        public void GetMongodbatlasRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string mongodbatlasMountPath = null;
            //instance.GetMongodbatlasRoles(list, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test GetMongodbatlasRolesName
        /// </summary>
        [Fact]
        public void GetMongodbatlasRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string mongodbatlasMountPath = null;
            //instance.GetMongodbatlasRolesName(name, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test GetNomadConfigAccess
        /// </summary>
        [Fact]
        public void GetNomadConfigAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nomadMountPath = null;
            //instance.GetNomadConfigAccess(nomadMountPath);
        }

        /// <summary>
        /// Test GetNomadConfigLease
        /// </summary>
        [Fact]
        public void GetNomadConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nomadMountPath = null;
            //instance.GetNomadConfigLease(nomadMountPath);
        }

        /// <summary>
        /// Test GetNomadCredsName
        /// </summary>
        [Fact]
        public void GetNomadCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string nomadMountPath = null;
            //instance.GetNomadCredsName(name, nomadMountPath);
        }

        /// <summary>
        /// Test GetNomadRole
        /// </summary>
        [Fact]
        public void GetNomadRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string nomadMountPath = null;
            //instance.GetNomadRole(list, nomadMountPath);
        }

        /// <summary>
        /// Test GetNomadRoleName
        /// </summary>
        [Fact]
        public void GetNomadRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string nomadMountPath = null;
            //instance.GetNomadRoleName(name, nomadMountPath);
        }

        /// <summary>
        /// Test GetOpenldapConfig
        /// </summary>
        [Fact]
        public void GetOpenldapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string openldapMountPath = null;
            //instance.GetOpenldapConfig(openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapCredsName
        /// </summary>
        [Fact]
        public void GetOpenldapCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapCredsName(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapLibrary
        /// </summary>
        [Fact]
        public void GetOpenldapLibraryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapLibrary(list, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapLibraryName
        /// </summary>
        [Fact]
        public void GetOpenldapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapLibraryName(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapLibraryNameStatus
        /// </summary>
        [Fact]
        public void GetOpenldapLibraryNameStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapLibraryNameStatus(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapRole
        /// </summary>
        [Fact]
        public void GetOpenldapRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapRole(list, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapRoleName
        /// </summary>
        [Fact]
        public void GetOpenldapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapRoleName(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapStaticCredName
        /// </summary>
        [Fact]
        public void GetOpenldapStaticCredNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapStaticCredName(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapStaticRole
        /// </summary>
        [Fact]
        public void GetOpenldapStaticRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapStaticRole(list, openldapMountPath);
        }

        /// <summary>
        /// Test GetOpenldapStaticRoleName
        /// </summary>
        [Fact]
        public void GetOpenldapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.GetOpenldapStaticRoleName(name, openldapMountPath);
        }

        /// <summary>
        /// Test GetPkiCa
        /// </summary>
        [Fact]
        public void GetPkiCaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCa(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCaChain
        /// </summary>
        [Fact]
        public void GetPkiCaChainTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCaChain(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCaPem
        /// </summary>
        [Fact]
        public void GetPkiCaPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCaPem(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCertCaChain
        /// </summary>
        [Fact]
        public void GetPkiCertCaChainTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCertCaChain(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCertSerial
        /// </summary>
        [Fact]
        public void GetPkiCertSerialTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serial = null;
            //string pkiMountPath = null;
            //instance.GetPkiCertSerial(serial, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCertSerialRaw
        /// </summary>
        [Fact]
        public void GetPkiCertSerialRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serial = null;
            //string pkiMountPath = null;
            //instance.GetPkiCertSerialRaw(serial, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCertSerialRawPem
        /// </summary>
        [Fact]
        public void GetPkiCertSerialRawPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serial = null;
            //string pkiMountPath = null;
            //instance.GetPkiCertSerialRawPem(serial, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCerts
        /// </summary>
        [Fact]
        public void GetPkiCertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string pkiMountPath = null;
            //instance.GetPkiCerts(list, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCertsRevoked
        /// </summary>
        [Fact]
        public void GetPkiCertsRevokedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string pkiMountPath = null;
            //instance.GetPkiCertsRevoked(list, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiConfigAutoTidy
        /// </summary>
        [Fact]
        public void GetPkiConfigAutoTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiConfigAutoTidy(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiConfigCrl
        /// </summary>
        [Fact]
        public void GetPkiConfigCrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiConfigCrl(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiConfigIssuers
        /// </summary>
        [Fact]
        public void GetPkiConfigIssuersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiConfigIssuers(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiConfigKeys
        /// </summary>
        [Fact]
        public void GetPkiConfigKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiConfigKeys(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiConfigUrls
        /// </summary>
        [Fact]
        public void GetPkiConfigUrlsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiConfigUrls(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCrl
        /// </summary>
        [Fact]
        public void GetPkiCrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCrl(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCrlRotate
        /// </summary>
        [Fact]
        public void GetPkiCrlRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCrlRotate(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiCrlRotateDelta
        /// </summary>
        [Fact]
        public void GetPkiCrlRotateDeltaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiCrlRotateDelta(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiDelta
        /// </summary>
        [Fact]
        public void GetPkiDeltaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiDelta(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiDeltaCrl
        /// </summary>
        [Fact]
        public void GetPkiDeltaCrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiDeltaCrl(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiDeltaPem
        /// </summary>
        [Fact]
        public void GetPkiDeltaPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiDeltaPem(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiDer
        /// </summary>
        [Fact]
        public void GetPkiDerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiDer(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiIssuerRefCrlPemDerDeltaPem
        /// </summary>
        [Fact]
        public void GetPkiIssuerRefCrlPemDerDeltaPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string pkiMountPath = null;
            //instance.GetPkiIssuerRefCrlPemDerDeltaPem(issuerRef, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiIssuerRefDerPem
        /// </summary>
        [Fact]
        public void GetPkiIssuerRefDerPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string pkiMountPath = null;
            //instance.GetPkiIssuerRefDerPem(issuerRef, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiIssuers
        /// </summary>
        [Fact]
        public void GetPkiIssuersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string pkiMountPath = null;
            //instance.GetPkiIssuers(list, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiJson
        /// </summary>
        [Fact]
        public void GetPkiJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiJson(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiKeyKeyRef
        /// </summary>
        [Fact]
        public void GetPkiKeyKeyRefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string keyRef = null;
            //string pkiMountPath = null;
            //instance.GetPkiKeyKeyRef(keyRef, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiKeys
        /// </summary>
        [Fact]
        public void GetPkiKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string pkiMountPath = null;
            //instance.GetPkiKeys(list, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiOcspReq
        /// </summary>
        [Fact]
        public void GetPkiOcspReqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string req = null;
            //string pkiMountPath = null;
            //instance.GetPkiOcspReq(req, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiPem
        /// </summary>
        [Fact]
        public void GetPkiPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiPem(pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiRoles
        /// </summary>
        [Fact]
        public void GetPkiRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string pkiMountPath = null;
            //instance.GetPkiRoles(list, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiRolesName
        /// </summary>
        [Fact]
        public void GetPkiRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string pkiMountPath = null;
            //instance.GetPkiRolesName(name, pkiMountPath);
        }

        /// <summary>
        /// Test GetPkiTidyStatus
        /// </summary>
        [Fact]
        public void GetPkiTidyStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.GetPkiTidyStatus(pkiMountPath);
        }

        /// <summary>
        /// Test GetRabbitmqConfigLease
        /// </summary>
        [Fact]
        public void GetRabbitmqConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rabbitmqMountPath = null;
            //instance.GetRabbitmqConfigLease(rabbitmqMountPath);
        }

        /// <summary>
        /// Test GetRabbitmqCredsName
        /// </summary>
        [Fact]
        public void GetRabbitmqCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string rabbitmqMountPath = null;
            //instance.GetRabbitmqCredsName(name, rabbitmqMountPath);
        }

        /// <summary>
        /// Test GetRabbitmqRoles
        /// </summary>
        [Fact]
        public void GetRabbitmqRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string rabbitmqMountPath = null;
            //instance.GetRabbitmqRoles(list, rabbitmqMountPath);
        }

        /// <summary>
        /// Test GetRabbitmqRolesName
        /// </summary>
        [Fact]
        public void GetRabbitmqRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string rabbitmqMountPath = null;
            //instance.GetRabbitmqRolesName(name, rabbitmqMountPath);
        }

        /// <summary>
        /// Test GetSecretConfig
        /// </summary>
        [Fact]
        public void GetSecretConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string secretMountPath = null;
            //instance.GetSecretConfig(secretMountPath);
        }

        /// <summary>
        /// Test GetSecretDataPath
        /// </summary>
        [Fact]
        public void GetSecretDataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.GetSecretDataPath(path, secretMountPath);
        }

        /// <summary>
        /// Test GetSecretMetadataPath
        /// </summary>
        [Fact]
        public void GetSecretMetadataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //string list = null;
            //instance.GetSecretMetadataPath(path, secretMountPath, list);
        }

        /// <summary>
        /// Test GetSecretPath
        /// </summary>
        [Fact]
        public void GetSecretPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //string list = null;
            //instance.GetSecretPath(path, secretMountPath, list);
        }

        /// <summary>
        /// Test GetSecretSubkeysPath
        /// </summary>
        [Fact]
        public void GetSecretSubkeysPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.GetSecretSubkeysPath(path, secretMountPath);
        }

        /// <summary>
        /// Test GetSshConfigCa
        /// </summary>
        [Fact]
        public void GetSshConfigCaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sshMountPath = null;
            //instance.GetSshConfigCa(sshMountPath);
        }

        /// <summary>
        /// Test GetSshConfigZeroaddress
        /// </summary>
        [Fact]
        public void GetSshConfigZeroaddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sshMountPath = null;
            //instance.GetSshConfigZeroaddress(sshMountPath);
        }

        /// <summary>
        /// Test GetSshPublicKey
        /// </summary>
        [Fact]
        public void GetSshPublicKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sshMountPath = null;
            //instance.GetSshPublicKey(sshMountPath);
        }

        /// <summary>
        /// Test GetSshRoles
        /// </summary>
        [Fact]
        public void GetSshRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string sshMountPath = null;
            //instance.GetSshRoles(list, sshMountPath);
        }

        /// <summary>
        /// Test GetSshRolesRole
        /// </summary>
        [Fact]
        public void GetSshRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //string sshMountPath = null;
            //instance.GetSshRolesRole(role, sshMountPath);
        }

        /// <summary>
        /// Test GetTerraformConfig
        /// </summary>
        [Fact]
        public void GetTerraformConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string terraformMountPath = null;
            //instance.GetTerraformConfig(terraformMountPath);
        }

        /// <summary>
        /// Test GetTerraformCredsName
        /// </summary>
        [Fact]
        public void GetTerraformCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string terraformMountPath = null;
            //instance.GetTerraformCredsName(name, terraformMountPath);
        }

        /// <summary>
        /// Test GetTerraformRole
        /// </summary>
        [Fact]
        public void GetTerraformRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string terraformMountPath = null;
            //instance.GetTerraformRole(list, terraformMountPath);
        }

        /// <summary>
        /// Test GetTerraformRoleName
        /// </summary>
        [Fact]
        public void GetTerraformRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string terraformMountPath = null;
            //instance.GetTerraformRoleName(name, terraformMountPath);
        }

        /// <summary>
        /// Test GetTotpCodeName
        /// </summary>
        [Fact]
        public void GetTotpCodeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string totpMountPath = null;
            //instance.GetTotpCodeName(name, totpMountPath);
        }

        /// <summary>
        /// Test GetTotpKeys
        /// </summary>
        [Fact]
        public void GetTotpKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string totpMountPath = null;
            //instance.GetTotpKeys(list, totpMountPath);
        }

        /// <summary>
        /// Test GetTotpKeysName
        /// </summary>
        [Fact]
        public void GetTotpKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string totpMountPath = null;
            //instance.GetTotpKeysName(name, totpMountPath);
        }

        /// <summary>
        /// Test GetTransitBackupName
        /// </summary>
        [Fact]
        public void GetTransitBackupNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string transitMountPath = null;
            //instance.GetTransitBackupName(name, transitMountPath);
        }

        /// <summary>
        /// Test GetTransitCacheConfig
        /// </summary>
        [Fact]
        public void GetTransitCacheConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string transitMountPath = null;
            //instance.GetTransitCacheConfig(transitMountPath);
        }

        /// <summary>
        /// Test GetTransitExportTypeName
        /// </summary>
        [Fact]
        public void GetTransitExportTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //string transitMountPath = null;
            //instance.GetTransitExportTypeName(name, type, transitMountPath);
        }

        /// <summary>
        /// Test GetTransitExportTypeNameVersion
        /// </summary>
        [Fact]
        public void GetTransitExportTypeNameVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //string version = null;
            //string transitMountPath = null;
            //instance.GetTransitExportTypeNameVersion(name, type, version, transitMountPath);
        }

        /// <summary>
        /// Test GetTransitKeys
        /// </summary>
        [Fact]
        public void GetTransitKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string transitMountPath = null;
            //instance.GetTransitKeys(list, transitMountPath);
        }

        /// <summary>
        /// Test GetTransitKeysName
        /// </summary>
        [Fact]
        public void GetTransitKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string transitMountPath = null;
            //instance.GetTransitKeysName(name, transitMountPath);
        }

        /// <summary>
        /// Test GetTransitWrappingKey
        /// </summary>
        [Fact]
        public void GetTransitWrappingKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string transitMountPath = null;
            //instance.GetTransitWrappingKey(transitMountPath);
        }

        /// <summary>
        /// Test PostAdConfig
        /// </summary>
        [Fact]
        public void PostAdConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AdConfigRequest adConfigRequest = null;
            //string adMountPath = null;
            //instance.PostAdConfig(adConfigRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdLibraryManageNameCheckIn
        /// </summary>
        [Fact]
        public void PostAdLibraryManageNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AdLibraryManageCheckInRequest adLibraryManageCheckInRequest = null;
            //string adMountPath = null;
            //instance.PostAdLibraryManageNameCheckIn(name, adLibraryManageCheckInRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdLibraryName
        /// </summary>
        [Fact]
        public void PostAdLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AdLibraryRequest adLibraryRequest = null;
            //string adMountPath = null;
            //instance.PostAdLibraryName(name, adLibraryRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdLibraryNameCheckIn
        /// </summary>
        [Fact]
        public void PostAdLibraryNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AdLibraryCheckInRequest adLibraryCheckInRequest = null;
            //string adMountPath = null;
            //instance.PostAdLibraryNameCheckIn(name, adLibraryCheckInRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdLibraryNameCheckOut
        /// </summary>
        [Fact]
        public void PostAdLibraryNameCheckOutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AdLibraryCheckOutRequest adLibraryCheckOutRequest = null;
            //string adMountPath = null;
            //instance.PostAdLibraryNameCheckOut(name, adLibraryCheckOutRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdRolesName
        /// </summary>
        [Fact]
        public void PostAdRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AdRolesRequest adRolesRequest = null;
            //string adMountPath = null;
            //instance.PostAdRolesName(name, adRolesRequest, adMountPath);
        }

        /// <summary>
        /// Test PostAdRotateRoleName
        /// </summary>
        [Fact]
        public void PostAdRotateRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string adMountPath = null;
            //instance.PostAdRotateRoleName(name, adMountPath);
        }

        /// <summary>
        /// Test PostAdRotateRoot
        /// </summary>
        [Fact]
        public void PostAdRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string adMountPath = null;
            //instance.PostAdRotateRoot(adMountPath);
        }

        /// <summary>
        /// Test PostAlicloudConfig
        /// </summary>
        [Fact]
        public void PostAlicloudConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlicloudConfigRequest alicloudConfigRequest = null;
            //string alicloudMountPath = null;
            //instance.PostAlicloudConfig(alicloudConfigRequest, alicloudMountPath);
        }

        /// <summary>
        /// Test PostAlicloudRoleName
        /// </summary>
        [Fact]
        public void PostAlicloudRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AlicloudRoleRequest alicloudRoleRequest = null;
            //string alicloudMountPath = null;
            //instance.PostAlicloudRoleName(name, alicloudRoleRequest, alicloudMountPath);
        }

        /// <summary>
        /// Test PostAwsConfigLease
        /// </summary>
        [Fact]
        public void PostAwsConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigLeaseRequest awsConfigLeaseRequest = null;
            //string awsMountPath = null;
            //instance.PostAwsConfigLease(awsConfigLeaseRequest, awsMountPath);
        }

        /// <summary>
        /// Test PostAwsConfigRoot
        /// </summary>
        [Fact]
        public void PostAwsConfigRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigRootRequest awsConfigRootRequest = null;
            //string awsMountPath = null;
            //instance.PostAwsConfigRoot(awsConfigRootRequest, awsMountPath);
        }

        /// <summary>
        /// Test PostAwsConfigRotateRoot
        /// </summary>
        [Fact]
        public void PostAwsConfigRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string awsMountPath = null;
            //instance.PostAwsConfigRotateRoot(awsMountPath);
        }

        /// <summary>
        /// Test PostAwsCreds
        /// </summary>
        [Fact]
        public void PostAwsCredsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsCredsRequest awsCredsRequest = null;
            //string awsMountPath = null;
            //instance.PostAwsCreds(awsCredsRequest, awsMountPath);
        }

        /// <summary>
        /// Test PostAwsRolesName
        /// </summary>
        [Fact]
        public void PostAwsRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AwsRolesRequest awsRolesRequest = null;
            //string awsMountPath = null;
            //instance.PostAwsRolesName(name, awsRolesRequest, awsMountPath);
        }

        /// <summary>
        /// Test PostAwsStsName
        /// </summary>
        [Fact]
        public void PostAwsStsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AwsStsRequest awsStsRequest = null;
            //string awsMountPath = null;
            //instance.PostAwsStsName(name, awsStsRequest, awsMountPath);
        }

        /// <summary>
        /// Test PostAzureConfig
        /// </summary>
        [Fact]
        public void PostAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AzureConfigRequest azureConfigRequest = null;
            //string azureMountPath = null;
            //instance.PostAzureConfig(azureConfigRequest, azureMountPath);
        }

        /// <summary>
        /// Test PostAzureRolesName
        /// </summary>
        [Fact]
        public void PostAzureRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AzureRolesRequest azureRolesRequest = null;
            //string azureMountPath = null;
            //instance.PostAzureRolesName(name, azureRolesRequest, azureMountPath);
        }

        /// <summary>
        /// Test PostAzureRotateRoot
        /// </summary>
        [Fact]
        public void PostAzureRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string azureMountPath = null;
            //instance.PostAzureRotateRoot(azureMountPath);
        }

        /// <summary>
        /// Test PostConsulConfigAccess
        /// </summary>
        [Fact]
        public void PostConsulConfigAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ConsulConfigAccessRequest consulConfigAccessRequest = null;
            //string consulMountPath = null;
            //instance.PostConsulConfigAccess(consulConfigAccessRequest, consulMountPath);
        }

        /// <summary>
        /// Test PostConsulRolesName
        /// </summary>
        [Fact]
        public void PostConsulRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //ConsulRolesRequest consulRolesRequest = null;
            //string consulMountPath = null;
            //instance.PostConsulRolesName(name, consulRolesRequest, consulMountPath);
        }

        /// <summary>
        /// Test PostCubbyholePath
        /// </summary>
        [Fact]
        public void PostCubbyholePathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string cubbyholeMountPath = null;
            //instance.PostCubbyholePath(path, cubbyholeMountPath);
        }

        /// <summary>
        /// Test PostGcpConfig
        /// </summary>
        [Fact]
        public void PostGcpConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GcpConfigRequest gcpConfigRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpConfig(gcpConfigRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpConfigRotateRoot
        /// </summary>
        [Fact]
        public void PostGcpConfigRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gcpMountPath = null;
            //instance.PostGcpConfigRotateRoot(gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpKeyRoleset
        /// </summary>
        [Fact]
        public void PostGcpKeyRolesetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //GcpKeyRequest gcpKeyRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpKeyRoleset(roleset, gcpKeyRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpRolesetName
        /// </summary>
        [Fact]
        public void PostGcpRolesetNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpRolesetRequest gcpRolesetRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpRolesetName(name, gcpRolesetRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpRolesetNameRotate
        /// </summary>
        [Fact]
        public void PostGcpRolesetNameRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.PostGcpRolesetNameRotate(name, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpRolesetNameRotateKey
        /// </summary>
        [Fact]
        public void PostGcpRolesetNameRotateKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.PostGcpRolesetNameRotateKey(name, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpRolesetRolesetKey
        /// </summary>
        [Fact]
        public void PostGcpRolesetRolesetKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //GcpRolesetKeyRequest gcpRolesetKeyRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpRolesetRolesetKey(roleset, gcpRolesetKeyRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpRolesetRolesetToken
        /// </summary>
        [Fact]
        public void PostGcpRolesetRolesetTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.PostGcpRolesetRolesetToken(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpStaticAccountName
        /// </summary>
        [Fact]
        public void PostGcpStaticAccountNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpStaticAccountRequest gcpStaticAccountRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpStaticAccountName(name, gcpStaticAccountRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpStaticAccountNameKey
        /// </summary>
        [Fact]
        public void PostGcpStaticAccountNameKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpStaticAccountKeyRequest gcpStaticAccountKeyRequest = null;
            //string gcpMountPath = null;
            //instance.PostGcpStaticAccountNameKey(name, gcpStaticAccountKeyRequest, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpStaticAccountNameRotateKey
        /// </summary>
        [Fact]
        public void PostGcpStaticAccountNameRotateKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.PostGcpStaticAccountNameRotateKey(name, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpStaticAccountNameToken
        /// </summary>
        [Fact]
        public void PostGcpStaticAccountNameTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string gcpMountPath = null;
            //instance.PostGcpStaticAccountNameToken(name, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpTokenRoleset
        /// </summary>
        [Fact]
        public void PostGcpTokenRolesetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleset = null;
            //string gcpMountPath = null;
            //instance.PostGcpTokenRoleset(roleset, gcpMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsConfig
        /// </summary>
        [Fact]
        public void PostGcpkmsConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GcpkmsConfigRequest gcpkmsConfigRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsConfig(gcpkmsConfigRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsDecryptKey
        /// </summary>
        [Fact]
        public void PostGcpkmsDecryptKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsDecryptRequest gcpkmsDecryptRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsDecryptKey(key, gcpkmsDecryptRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsEncryptKey
        /// </summary>
        [Fact]
        public void PostGcpkmsEncryptKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsEncryptRequest gcpkmsEncryptRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsEncryptKey(key, gcpkmsEncryptRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysConfigKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysConfigKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsKeysConfigRequest gcpkmsKeysConfigRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysConfigKey(key, gcpkmsKeysConfigRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysDeregisterKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysDeregisterKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysDeregisterKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsKeysRequest gcpkmsKeysRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysKey(key, gcpkmsKeysRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysRegisterKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysRegisterKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsKeysRegisterRequest gcpkmsKeysRegisterRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysRegisterKey(key, gcpkmsKeysRegisterRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysRotateKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysRotateKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysRotateKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsKeysTrimKey
        /// </summary>
        [Fact]
        public void PostGcpkmsKeysTrimKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsKeysTrimKey(key, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsReencryptKey
        /// </summary>
        [Fact]
        public void PostGcpkmsReencryptKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsReencryptRequest gcpkmsReencryptRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsReencryptKey(key, gcpkmsReencryptRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsSignKey
        /// </summary>
        [Fact]
        public void PostGcpkmsSignKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsSignRequest gcpkmsSignRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsSignKey(key, gcpkmsSignRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostGcpkmsVerifyKey
        /// </summary>
        [Fact]
        public void PostGcpkmsVerifyKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GcpkmsVerifyRequest gcpkmsVerifyRequest = null;
            //string gcpkmsMountPath = null;
            //instance.PostGcpkmsVerifyKey(key, gcpkmsVerifyRequest, gcpkmsMountPath);
        }

        /// <summary>
        /// Test PostKubernetesConfig
        /// </summary>
        [Fact]
        public void PostKubernetesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KubernetesConfigRequest kubernetesConfigRequest = null;
            //string kubernetesMountPath = null;
            //instance.PostKubernetesConfig(kubernetesConfigRequest, kubernetesMountPath);
        }

        /// <summary>
        /// Test PostKubernetesCredsName
        /// </summary>
        [Fact]
        public void PostKubernetesCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //KubernetesCredsRequest kubernetesCredsRequest = null;
            //string kubernetesMountPath = null;
            //instance.PostKubernetesCredsName(name, kubernetesCredsRequest, kubernetesMountPath);
        }

        /// <summary>
        /// Test PostKubernetesRolesName
        /// </summary>
        [Fact]
        public void PostKubernetesRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //KubernetesRolesRequest kubernetesRolesRequest = null;
            //string kubernetesMountPath = null;
            //instance.PostKubernetesRolesName(name, kubernetesRolesRequest, kubernetesMountPath);
        }

        /// <summary>
        /// Test PostLdapConfig
        /// </summary>
        [Fact]
        public void PostLdapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LdapConfigRequest ldapConfigRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapConfig(ldapConfigRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapLibraryManageNameCheckIn
        /// </summary>
        [Fact]
        public void PostLdapLibraryManageNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapLibraryManageCheckInRequest ldapLibraryManageCheckInRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapLibraryManageNameCheckIn(name, ldapLibraryManageCheckInRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapLibraryName
        /// </summary>
        [Fact]
        public void PostLdapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapLibraryRequest ldapLibraryRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapLibraryName(name, ldapLibraryRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapLibraryNameCheckIn
        /// </summary>
        [Fact]
        public void PostLdapLibraryNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapLibraryCheckInRequest ldapLibraryCheckInRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapLibraryNameCheckIn(name, ldapLibraryCheckInRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapLibraryNameCheckOut
        /// </summary>
        [Fact]
        public void PostLdapLibraryNameCheckOutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapLibraryCheckOutRequest ldapLibraryCheckOutRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapLibraryNameCheckOut(name, ldapLibraryCheckOutRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapRoleName
        /// </summary>
        [Fact]
        public void PostLdapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapRoleRequest ldapRoleRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapRoleName(name, ldapRoleRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapRotateRoleName
        /// </summary>
        [Fact]
        public void PostLdapRotateRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string ldapMountPath = null;
            //instance.PostLdapRotateRoleName(name, ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapRotateRoot
        /// </summary>
        [Fact]
        public void PostLdapRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ldapMountPath = null;
            //instance.PostLdapRotateRoot(ldapMountPath);
        }

        /// <summary>
        /// Test PostLdapStaticRoleName
        /// </summary>
        [Fact]
        public void PostLdapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapStaticRoleRequest ldapStaticRoleRequest = null;
            //string ldapMountPath = null;
            //instance.PostLdapStaticRoleName(name, ldapStaticRoleRequest, ldapMountPath);
        }

        /// <summary>
        /// Test PostMongodbatlasConfig
        /// </summary>
        [Fact]
        public void PostMongodbatlasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MongodbatlasConfigRequest mongodbatlasConfigRequest = null;
            //string mongodbatlasMountPath = null;
            //instance.PostMongodbatlasConfig(mongodbatlasConfigRequest, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test PostMongodbatlasCredsName
        /// </summary>
        [Fact]
        public void PostMongodbatlasCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string mongodbatlasMountPath = null;
            //instance.PostMongodbatlasCredsName(name, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test PostMongodbatlasRolesName
        /// </summary>
        [Fact]
        public void PostMongodbatlasRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //MongodbatlasRolesRequest mongodbatlasRolesRequest = null;
            //string mongodbatlasMountPath = null;
            //instance.PostMongodbatlasRolesName(name, mongodbatlasRolesRequest, mongodbatlasMountPath);
        }

        /// <summary>
        /// Test PostNomadConfigAccess
        /// </summary>
        [Fact]
        public void PostNomadConfigAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NomadConfigAccessRequest nomadConfigAccessRequest = null;
            //string nomadMountPath = null;
            //instance.PostNomadConfigAccess(nomadConfigAccessRequest, nomadMountPath);
        }

        /// <summary>
        /// Test PostNomadConfigLease
        /// </summary>
        [Fact]
        public void PostNomadConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NomadConfigLeaseRequest nomadConfigLeaseRequest = null;
            //string nomadMountPath = null;
            //instance.PostNomadConfigLease(nomadConfigLeaseRequest, nomadMountPath);
        }

        /// <summary>
        /// Test PostNomadRoleName
        /// </summary>
        [Fact]
        public void PostNomadRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //NomadRoleRequest nomadRoleRequest = null;
            //string nomadMountPath = null;
            //instance.PostNomadRoleName(name, nomadRoleRequest, nomadMountPath);
        }

        /// <summary>
        /// Test PostOpenldapConfig
        /// </summary>
        [Fact]
        public void PostOpenldapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenldapConfigRequest openldapConfigRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapConfig(openldapConfigRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapLibraryManageNameCheckIn
        /// </summary>
        [Fact]
        public void PostOpenldapLibraryManageNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapLibraryManageCheckInRequest openldapLibraryManageCheckInRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapLibraryManageNameCheckIn(name, openldapLibraryManageCheckInRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapLibraryName
        /// </summary>
        [Fact]
        public void PostOpenldapLibraryNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapLibraryRequest openldapLibraryRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapLibraryName(name, openldapLibraryRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapLibraryNameCheckIn
        /// </summary>
        [Fact]
        public void PostOpenldapLibraryNameCheckInTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapLibraryCheckInRequest openldapLibraryCheckInRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapLibraryNameCheckIn(name, openldapLibraryCheckInRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapLibraryNameCheckOut
        /// </summary>
        [Fact]
        public void PostOpenldapLibraryNameCheckOutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapLibraryCheckOutRequest openldapLibraryCheckOutRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapLibraryNameCheckOut(name, openldapLibraryCheckOutRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapRoleName
        /// </summary>
        [Fact]
        public void PostOpenldapRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapRoleRequest openldapRoleRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapRoleName(name, openldapRoleRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapRotateRoleName
        /// </summary>
        [Fact]
        public void PostOpenldapRotateRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapRotateRoleName(name, openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapRotateRoot
        /// </summary>
        [Fact]
        public void PostOpenldapRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string openldapMountPath = null;
            //instance.PostOpenldapRotateRoot(openldapMountPath);
        }

        /// <summary>
        /// Test PostOpenldapStaticRoleName
        /// </summary>
        [Fact]
        public void PostOpenldapStaticRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OpenldapStaticRoleRequest openldapStaticRoleRequest = null;
            //string openldapMountPath = null;
            //instance.PostOpenldapStaticRoleName(name, openldapStaticRoleRequest, openldapMountPath);
        }

        /// <summary>
        /// Test PostPkiBundle
        /// </summary>
        [Fact]
        public void PostPkiBundleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiBundleRequest pkiBundleRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiBundle(pkiBundleRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiCert
        /// </summary>
        [Fact]
        public void PostPkiCertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiCertRequest pkiCertRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiCert(pkiCertRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigAutoTidy
        /// </summary>
        [Fact]
        public void PostPkiConfigAutoTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigAutoTidyRequest pkiConfigAutoTidyRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigAutoTidy(pkiConfigAutoTidyRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigCa
        /// </summary>
        [Fact]
        public void PostPkiConfigCaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigCaRequest pkiConfigCaRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigCa(pkiConfigCaRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigCrl
        /// </summary>
        [Fact]
        public void PostPkiConfigCrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigCrlRequest pkiConfigCrlRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigCrl(pkiConfigCrlRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigIssuers
        /// </summary>
        [Fact]
        public void PostPkiConfigIssuersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigIssuersRequest pkiConfigIssuersRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigIssuers(pkiConfigIssuersRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigKeys
        /// </summary>
        [Fact]
        public void PostPkiConfigKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigKeysRequest pkiConfigKeysRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigKeys(pkiConfigKeysRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiConfigUrls
        /// </summary>
        [Fact]
        public void PostPkiConfigUrlsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiConfigUrlsRequest pkiConfigUrlsRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiConfigUrls(pkiConfigUrlsRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIntermediateCrossSign
        /// </summary>
        [Fact]
        public void PostPkiIntermediateCrossSignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiIntermediateCrossSignRequest pkiIntermediateCrossSignRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIntermediateCrossSign(pkiIntermediateCrossSignRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIntermediateGenerateExported
        /// </summary>
        [Fact]
        public void PostPkiIntermediateGenerateExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exported = null;
            //PkiIntermediateGenerateRequest pkiIntermediateGenerateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIntermediateGenerateExported(exported, pkiIntermediateGenerateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIntermediateSetSigned
        /// </summary>
        [Fact]
        public void PostPkiIntermediateSetSignedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiIntermediateSetSignedRequest pkiIntermediateSetSignedRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIntermediateSetSigned(pkiIntermediateSetSignedRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiInternalExported
        /// </summary>
        [Fact]
        public void PostPkiInternalExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiInternalExportedRequest pkiInternalExportedRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiInternalExported(pkiInternalExportedRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssueRole
        /// </summary>
        [Fact]
        public void PostPkiIssueRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //PkiIssueRequest pkiIssueRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssueRole(role, pkiIssueRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefIssueRole
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefIssueRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string role = null;
            //PkiIssuerIssueRequest pkiIssuerIssueRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefIssueRole(issuerRef, role, pkiIssuerIssueRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefRevoke
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefRevoke(issuerRef, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefSignIntermediate
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefSignIntermediateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //PkiIssuerSignIntermediateRequest pkiIssuerSignIntermediateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefSignIntermediate(issuerRef, pkiIssuerSignIntermediateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefSignRole
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefSignRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string role = null;
            //PkiIssuerSignRequest pkiIssuerSignRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefSignRole(issuerRef, role, pkiIssuerSignRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefSignSelfIssued
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefSignSelfIssuedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //PkiIssuerSignSelfIssuedRequest pkiIssuerSignSelfIssuedRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefSignSelfIssued(issuerRef, pkiIssuerSignSelfIssuedRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefSignVerbatim
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefSignVerbatimTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //PkiIssuerSignVerbatimRequest pkiIssuerSignVerbatimRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefSignVerbatim(issuerRef, pkiIssuerSignVerbatimRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerIssuerRefSignVerbatimRole
        /// </summary>
        [Fact]
        public void PostPkiIssuerIssuerRefSignVerbatimRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //string role = null;
            //PkiIssuerSignVerbatimRequest pkiIssuerSignVerbatimRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerIssuerRefSignVerbatimRole(issuerRef, role, pkiIssuerSignVerbatimRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuerRefDerPem
        /// </summary>
        [Fact]
        public void PostPkiIssuerRefDerPemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string issuerRef = null;
            //PkiDerPemRequest pkiDerPemRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuerRefDerPem(issuerRef, pkiDerPemRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuersGenerateIntermediateExported
        /// </summary>
        [Fact]
        public void PostPkiIssuersGenerateIntermediateExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exported = null;
            //PkiIssuersGenerateIntermediateRequest pkiIssuersGenerateIntermediateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuersGenerateIntermediateExported(exported, pkiIssuersGenerateIntermediateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiIssuersGenerateRootExported
        /// </summary>
        [Fact]
        public void PostPkiIssuersGenerateRootExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exported = null;
            //PkiIssuersGenerateRootRequest pkiIssuersGenerateRootRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiIssuersGenerateRootExported(exported, pkiIssuersGenerateRootRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiJson
        /// </summary>
        [Fact]
        public void PostPkiJsonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiJsonRequest pkiJsonRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiJson(pkiJsonRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiKeyKeyRef
        /// </summary>
        [Fact]
        public void PostPkiKeyKeyRefTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string keyRef = null;
            //PkiKeyRequest pkiKeyRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiKeyKeyRef(keyRef, pkiKeyRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiKeysImport
        /// </summary>
        [Fact]
        public void PostPkiKeysImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiKeysImportRequest pkiKeysImportRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiKeysImport(pkiKeysImportRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiKms
        /// </summary>
        [Fact]
        public void PostPkiKmsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiKmsRequest pkiKmsRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiKms(pkiKmsRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiOcsp
        /// </summary>
        [Fact]
        public void PostPkiOcspTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.PostPkiOcsp(pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRevoke
        /// </summary>
        [Fact]
        public void PostPkiRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiRevokeRequest pkiRevokeRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRevoke(pkiRevokeRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRevokeWithKey
        /// </summary>
        [Fact]
        public void PostPkiRevokeWithKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiRevokeWithKeyRequest pkiRevokeWithKeyRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRevokeWithKey(pkiRevokeWithKeyRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRolesName
        /// </summary>
        [Fact]
        public void PostPkiRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //PkiRolesRequest pkiRolesRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRolesName(name, pkiRolesRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRootGenerateExported
        /// </summary>
        [Fact]
        public void PostPkiRootGenerateExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exported = null;
            //PkiRootGenerateRequest pkiRootGenerateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRootGenerateExported(exported, pkiRootGenerateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRootReplace
        /// </summary>
        [Fact]
        public void PostPkiRootReplaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiRootReplaceRequest pkiRootReplaceRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRootReplace(pkiRootReplaceRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRootRotateExported
        /// </summary>
        [Fact]
        public void PostPkiRootRotateExportedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exported = null;
            //PkiRootRotateRequest pkiRootRotateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRootRotateExported(exported, pkiRootRotateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRootSignIntermediate
        /// </summary>
        [Fact]
        public void PostPkiRootSignIntermediateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiRootSignIntermediateRequest pkiRootSignIntermediateRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRootSignIntermediate(pkiRootSignIntermediateRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiRootSignSelfIssued
        /// </summary>
        [Fact]
        public void PostPkiRootSignSelfIssuedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiRootSignSelfIssuedRequest pkiRootSignSelfIssuedRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiRootSignSelfIssued(pkiRootSignSelfIssuedRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiSignRole
        /// </summary>
        [Fact]
        public void PostPkiSignRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //PkiSignRequest pkiSignRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiSignRole(role, pkiSignRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiSignVerbatim
        /// </summary>
        [Fact]
        public void PostPkiSignVerbatimTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiSignVerbatimRequest pkiSignVerbatimRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiSignVerbatim(pkiSignVerbatimRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiSignVerbatimRole
        /// </summary>
        [Fact]
        public void PostPkiSignVerbatimRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //PkiSignVerbatimRequest pkiSignVerbatimRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiSignVerbatimRole(role, pkiSignVerbatimRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiTidy
        /// </summary>
        [Fact]
        public void PostPkiTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PkiTidyRequest pkiTidyRequest = null;
            //string pkiMountPath = null;
            //instance.PostPkiTidy(pkiTidyRequest, pkiMountPath);
        }

        /// <summary>
        /// Test PostPkiTidyCancel
        /// </summary>
        [Fact]
        public void PostPkiTidyCancelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pkiMountPath = null;
            //instance.PostPkiTidyCancel(pkiMountPath);
        }

        /// <summary>
        /// Test PostRabbitmqConfigConnection
        /// </summary>
        [Fact]
        public void PostRabbitmqConfigConnectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RabbitmqConfigConnectionRequest rabbitmqConfigConnectionRequest = null;
            //string rabbitmqMountPath = null;
            //instance.PostRabbitmqConfigConnection(rabbitmqConfigConnectionRequest, rabbitmqMountPath);
        }

        /// <summary>
        /// Test PostRabbitmqConfigLease
        /// </summary>
        [Fact]
        public void PostRabbitmqConfigLeaseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RabbitmqConfigLeaseRequest rabbitmqConfigLeaseRequest = null;
            //string rabbitmqMountPath = null;
            //instance.PostRabbitmqConfigLease(rabbitmqConfigLeaseRequest, rabbitmqMountPath);
        }

        /// <summary>
        /// Test PostRabbitmqRolesName
        /// </summary>
        [Fact]
        public void PostRabbitmqRolesNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //RabbitmqRolesRequest rabbitmqRolesRequest = null;
            //string rabbitmqMountPath = null;
            //instance.PostRabbitmqRolesName(name, rabbitmqRolesRequest, rabbitmqMountPath);
        }

        /// <summary>
        /// Test PostSecretConfig
        /// </summary>
        [Fact]
        public void PostSecretConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KvConfigRequest kvConfigRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretConfig(kvConfigRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretDataPath
        /// </summary>
        [Fact]
        public void PostSecretDataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //KvDataRequest kvDataRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretDataPath(path, kvDataRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretDeletePath
        /// </summary>
        [Fact]
        public void PostSecretDeletePathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //KvDeleteRequest kvDeleteRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretDeletePath(path, kvDeleteRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretDestroyPath
        /// </summary>
        [Fact]
        public void PostSecretDestroyPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //KvDestroyRequest kvDestroyRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretDestroyPath(path, kvDestroyRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretMetadataPath
        /// </summary>
        [Fact]
        public void PostSecretMetadataPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //KvMetadataRequest kvMetadataRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretMetadataPath(path, kvMetadataRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretPath
        /// </summary>
        [Fact]
        public void PostSecretPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string secretMountPath = null;
            //instance.PostSecretPath(path, secretMountPath);
        }

        /// <summary>
        /// Test PostSecretUndeletePath
        /// </summary>
        [Fact]
        public void PostSecretUndeletePathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //KvUndeleteRequest kvUndeleteRequest = null;
            //string secretMountPath = null;
            //instance.PostSecretUndeletePath(path, kvUndeleteRequest, secretMountPath);
        }

        /// <summary>
        /// Test PostSshConfigCa
        /// </summary>
        [Fact]
        public void PostSshConfigCaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SshConfigCaRequest sshConfigCaRequest = null;
            //string sshMountPath = null;
            //instance.PostSshConfigCa(sshConfigCaRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshConfigZeroaddress
        /// </summary>
        [Fact]
        public void PostSshConfigZeroaddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SshConfigZeroaddressRequest sshConfigZeroaddressRequest = null;
            //string sshMountPath = null;
            //instance.PostSshConfigZeroaddress(sshConfigZeroaddressRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshCredsRole
        /// </summary>
        [Fact]
        public void PostSshCredsRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //SshCredsRequest sshCredsRequest = null;
            //string sshMountPath = null;
            //instance.PostSshCredsRole(role, sshCredsRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshIssueRole
        /// </summary>
        [Fact]
        public void PostSshIssueRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //SshIssueRequest sshIssueRequest = null;
            //string sshMountPath = null;
            //instance.PostSshIssueRole(role, sshIssueRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshKeysKeyName
        /// </summary>
        [Fact]
        public void PostSshKeysKeyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string keyName = null;
            //SshKeysRequest sshKeysRequest = null;
            //string sshMountPath = null;
            //instance.PostSshKeysKeyName(keyName, sshKeysRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshLookup
        /// </summary>
        [Fact]
        public void PostSshLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SshLookupRequest sshLookupRequest = null;
            //string sshMountPath = null;
            //instance.PostSshLookup(sshLookupRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshRolesRole
        /// </summary>
        [Fact]
        public void PostSshRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //SshRolesRequest sshRolesRequest = null;
            //string sshMountPath = null;
            //instance.PostSshRolesRole(role, sshRolesRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshSignRole
        /// </summary>
        [Fact]
        public void PostSshSignRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //SshSignRequest sshSignRequest = null;
            //string sshMountPath = null;
            //instance.PostSshSignRole(role, sshSignRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostSshVerify
        /// </summary>
        [Fact]
        public void PostSshVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SshVerifyRequest sshVerifyRequest = null;
            //string sshMountPath = null;
            //instance.PostSshVerify(sshVerifyRequest, sshMountPath);
        }

        /// <summary>
        /// Test PostTerraformConfig
        /// </summary>
        [Fact]
        public void PostTerraformConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TerraformConfigRequest terraformConfigRequest = null;
            //string terraformMountPath = null;
            //instance.PostTerraformConfig(terraformConfigRequest, terraformMountPath);
        }

        /// <summary>
        /// Test PostTerraformCredsName
        /// </summary>
        [Fact]
        public void PostTerraformCredsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string terraformMountPath = null;
            //instance.PostTerraformCredsName(name, terraformMountPath);
        }

        /// <summary>
        /// Test PostTerraformRoleName
        /// </summary>
        [Fact]
        public void PostTerraformRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TerraformRoleRequest terraformRoleRequest = null;
            //string terraformMountPath = null;
            //instance.PostTerraformRoleName(name, terraformRoleRequest, terraformMountPath);
        }

        /// <summary>
        /// Test PostTerraformRotateRoleName
        /// </summary>
        [Fact]
        public void PostTerraformRotateRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string terraformMountPath = null;
            //instance.PostTerraformRotateRoleName(name, terraformMountPath);
        }

        /// <summary>
        /// Test PostTotpCodeName
        /// </summary>
        [Fact]
        public void PostTotpCodeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TotpCodeRequest totpCodeRequest = null;
            //string totpMountPath = null;
            //instance.PostTotpCodeName(name, totpCodeRequest, totpMountPath);
        }

        /// <summary>
        /// Test PostTotpKeysName
        /// </summary>
        [Fact]
        public void PostTotpKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TotpKeysRequest totpKeysRequest = null;
            //string totpMountPath = null;
            //instance.PostTotpKeysName(name, totpKeysRequest, totpMountPath);
        }

        /// <summary>
        /// Test PostTransitCacheConfig
        /// </summary>
        [Fact]
        public void PostTransitCacheConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransitCacheConfigRequest transitCacheConfigRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitCacheConfig(transitCacheConfigRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitDatakeyPlaintextName
        /// </summary>
        [Fact]
        public void PostTransitDatakeyPlaintextNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string plaintext = null;
            //TransitDatakeyRequest transitDatakeyRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitDatakeyPlaintextName(name, plaintext, transitDatakeyRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitDecryptName
        /// </summary>
        [Fact]
        public void PostTransitDecryptNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitDecryptRequest transitDecryptRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitDecryptName(name, transitDecryptRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitEncryptName
        /// </summary>
        [Fact]
        public void PostTransitEncryptNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitEncryptRequest transitEncryptRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitEncryptName(name, transitEncryptRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitHash
        /// </summary>
        [Fact]
        public void PostTransitHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransitHashRequest transitHashRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitHash(transitHashRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitHashUrlalgorithm
        /// </summary>
        [Fact]
        public void PostTransitHashUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlalgorithm = null;
            //TransitHashRequest transitHashRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitHashUrlalgorithm(urlalgorithm, transitHashRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitHmacName
        /// </summary>
        [Fact]
        public void PostTransitHmacNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitHmacRequest transitHmacRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitHmacName(name, transitHmacRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitHmacNameUrlalgorithm
        /// </summary>
        [Fact]
        public void PostTransitHmacNameUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string urlalgorithm = null;
            //TransitHmacRequest transitHmacRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitHmacNameUrlalgorithm(name, urlalgorithm, transitHmacRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysName
        /// </summary>
        [Fact]
        public void PostTransitKeysNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitKeysRequest transitKeysRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysName(name, transitKeysRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysNameConfig
        /// </summary>
        [Fact]
        public void PostTransitKeysNameConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitKeysConfigRequest transitKeysConfigRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysNameConfig(name, transitKeysConfigRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysNameImport
        /// </summary>
        [Fact]
        public void PostTransitKeysNameImportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitKeysImportRequest transitKeysImportRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysNameImport(name, transitKeysImportRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysNameImportVersion
        /// </summary>
        [Fact]
        public void PostTransitKeysNameImportVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitKeysImportVersionRequest transitKeysImportVersionRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysNameImportVersion(name, transitKeysImportVersionRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysNameRotate
        /// </summary>
        [Fact]
        public void PostTransitKeysNameRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysNameRotate(name, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitKeysNameTrim
        /// </summary>
        [Fact]
        public void PostTransitKeysNameTrimTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitKeysTrimRequest transitKeysTrimRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitKeysNameTrim(name, transitKeysTrimRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRandom
        /// </summary>
        [Fact]
        public void PostTransitRandomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransitRandomRequest transitRandomRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRandom(transitRandomRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRandomSource
        /// </summary>
        [Fact]
        public void PostTransitRandomSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //TransitRandomRequest transitRandomRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRandomSource(source, transitRandomRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRandomSourceUrlbytes
        /// </summary>
        [Fact]
        public void PostTransitRandomSourceUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //string urlbytes = null;
            //TransitRandomRequest transitRandomRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRandomSourceUrlbytes(source, urlbytes, transitRandomRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRandomUrlbytes
        /// </summary>
        [Fact]
        public void PostTransitRandomUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlbytes = null;
            //TransitRandomRequest transitRandomRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRandomUrlbytes(urlbytes, transitRandomRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRestore
        /// </summary>
        [Fact]
        public void PostTransitRestoreTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransitRestoreRequest transitRestoreRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRestore(transitRestoreRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRestoreName
        /// </summary>
        [Fact]
        public void PostTransitRestoreNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitRestoreRequest transitRestoreRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRestoreName(name, transitRestoreRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitRewrapName
        /// </summary>
        [Fact]
        public void PostTransitRewrapNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitRewrapRequest transitRewrapRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitRewrapName(name, transitRewrapRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitSignName
        /// </summary>
        [Fact]
        public void PostTransitSignNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitSignRequest transitSignRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitSignName(name, transitSignRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitSignNameUrlalgorithm
        /// </summary>
        [Fact]
        public void PostTransitSignNameUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string urlalgorithm = null;
            //TransitSignRequest transitSignRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitSignNameUrlalgorithm(name, urlalgorithm, transitSignRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitVerifyName
        /// </summary>
        [Fact]
        public void PostTransitVerifyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //TransitVerifyRequest transitVerifyRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitVerifyName(name, transitVerifyRequest, transitMountPath);
        }

        /// <summary>
        /// Test PostTransitVerifyNameUrlalgorithm
        /// </summary>
        [Fact]
        public void PostTransitVerifyNameUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string urlalgorithm = null;
            //TransitVerifyRequest transitVerifyRequest = null;
            //string transitMountPath = null;
            //instance.PostTransitVerifyNameUrlalgorithm(name, urlalgorithm, transitVerifyRequest, transitMountPath);
        }
    }
}
