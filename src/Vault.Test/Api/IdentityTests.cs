/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.13.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Vault.Client;
using Vault.Api;
// uncomment below to import models
//using Vault.Model;

namespace Vault.Test.Api
{
    /// <summary>
    ///  Class for testing Identity
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IdentityTests : IDisposable
    {
        private Vault.Api.Identity instance;

        public IdentityTests()
        {
            // instance = new Vault.Api.Identity();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Identity
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' Identity
            //Assert.IsType<Identity>(instance);
        }

        /// <summary>
        /// Test DeleteIdentityAliasIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityAliasIdId(id);
        }

        /// <summary>
        /// Test DeleteIdentityEntityAliasIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityEntityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityEntityAliasIdId(id);
        }

        /// <summary>
        /// Test DeleteIdentityEntityIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityEntityIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityEntityIdId(id);
        }

        /// <summary>
        /// Test DeleteIdentityEntityNameName
        /// </summary>
        [Fact]
        public void DeleteIdentityEntityNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityEntityNameName(name);
        }

        /// <summary>
        /// Test DeleteIdentityGroupAliasIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityGroupAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityGroupAliasIdId(id);
        }

        /// <summary>
        /// Test DeleteIdentityGroupIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityGroupIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityGroupIdId(id);
        }

        /// <summary>
        /// Test DeleteIdentityGroupNameName
        /// </summary>
        [Fact]
        public void DeleteIdentityGroupNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityGroupNameName(name);
        }

        /// <summary>
        /// Test DeleteIdentityMfaLoginEnforcementName
        /// </summary>
        [Fact]
        public void DeleteIdentityMfaLoginEnforcementNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityMfaLoginEnforcementName(name);
        }

        /// <summary>
        /// Test DeleteIdentityMfaMethodDuoMethodId
        /// </summary>
        [Fact]
        public void DeleteIdentityMfaMethodDuoMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.DeleteIdentityMfaMethodDuoMethodId(methodId);
        }

        /// <summary>
        /// Test DeleteIdentityMfaMethodOktaMethodId
        /// </summary>
        [Fact]
        public void DeleteIdentityMfaMethodOktaMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.DeleteIdentityMfaMethodOktaMethodId(methodId);
        }

        /// <summary>
        /// Test DeleteIdentityMfaMethodPingidMethodId
        /// </summary>
        [Fact]
        public void DeleteIdentityMfaMethodPingidMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.DeleteIdentityMfaMethodPingidMethodId(methodId);
        }

        /// <summary>
        /// Test DeleteIdentityMfaMethodTotpMethodId
        /// </summary>
        [Fact]
        public void DeleteIdentityMfaMethodTotpMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.DeleteIdentityMfaMethodTotpMethodId(methodId);
        }

        /// <summary>
        /// Test DeleteIdentityOidcAssignmentName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcAssignmentNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcAssignmentName(name);
        }

        /// <summary>
        /// Test DeleteIdentityOidcClientName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcClientNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcClientName(name);
        }

        /// <summary>
        /// Test DeleteIdentityOidcKeyName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcKeyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcKeyName(name);
        }

        /// <summary>
        /// Test DeleteIdentityOidcProviderName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcProviderNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcProviderName(name);
        }

        /// <summary>
        /// Test DeleteIdentityOidcRoleName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcRoleName(name);
        }

        /// <summary>
        /// Test DeleteIdentityOidcScopeName
        /// </summary>
        [Fact]
        public void DeleteIdentityOidcScopeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteIdentityOidcScopeName(name);
        }

        /// <summary>
        /// Test DeleteIdentityPersonaIdId
        /// </summary>
        [Fact]
        public void DeleteIdentityPersonaIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteIdentityPersonaIdId(id);
        }

        /// <summary>
        /// Test ListIdentityAliasId
        /// </summary>
        [Fact]
        public void ListIdentityAliasIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityAliasId(list);
        }

        /// <summary>
        /// Test ListIdentityEntityAliasId
        /// </summary>
        [Fact]
        public void ListIdentityEntityAliasIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityEntityAliasId(list);
        }

        /// <summary>
        /// Test ListIdentityEntityId
        /// </summary>
        [Fact]
        public void ListIdentityEntityIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityEntityId(list);
        }

        /// <summary>
        /// Test ListIdentityEntityName
        /// </summary>
        [Fact]
        public void ListIdentityEntityNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityEntityName(list);
        }

        /// <summary>
        /// Test ListIdentityGroupAliasId
        /// </summary>
        [Fact]
        public void ListIdentityGroupAliasIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityGroupAliasId(list);
        }

        /// <summary>
        /// Test ListIdentityGroupId
        /// </summary>
        [Fact]
        public void ListIdentityGroupIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityGroupId(list);
        }

        /// <summary>
        /// Test ListIdentityGroupName
        /// </summary>
        [Fact]
        public void ListIdentityGroupNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityGroupName(list);
        }

        /// <summary>
        /// Test ListIdentityMfaLoginEnforcement
        /// </summary>
        [Fact]
        public void ListIdentityMfaLoginEnforcementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaLoginEnforcement(list);
        }

        /// <summary>
        /// Test ListIdentityMfaMethod
        /// </summary>
        [Fact]
        public void ListIdentityMfaMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaMethod(list);
        }

        /// <summary>
        /// Test ListIdentityMfaMethodDuo
        /// </summary>
        [Fact]
        public void ListIdentityMfaMethodDuoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaMethodDuo(list);
        }

        /// <summary>
        /// Test ListIdentityMfaMethodOkta
        /// </summary>
        [Fact]
        public void ListIdentityMfaMethodOktaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaMethodOkta(list);
        }

        /// <summary>
        /// Test ListIdentityMfaMethodPingid
        /// </summary>
        [Fact]
        public void ListIdentityMfaMethodPingidTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaMethodPingid(list);
        }

        /// <summary>
        /// Test ListIdentityMfaMethodTotp
        /// </summary>
        [Fact]
        public void ListIdentityMfaMethodTotpTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityMfaMethodTotp(list);
        }

        /// <summary>
        /// Test ListIdentityOidcAssignment
        /// </summary>
        [Fact]
        public void ListIdentityOidcAssignmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityOidcAssignment(list);
        }

        /// <summary>
        /// Test ListIdentityOidcClient
        /// </summary>
        [Fact]
        public void ListIdentityOidcClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityOidcClient(list);
        }

        /// <summary>
        /// Test ListIdentityOidcKey
        /// </summary>
        [Fact]
        public void ListIdentityOidcKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityOidcKey(list);
        }

        /// <summary>
        /// Test ListIdentityOidcProvider
        /// </summary>
        [Fact]
        public void ListIdentityOidcProviderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //string allowedClientId = null;
            //instance.ListIdentityOidcProvider(list, allowedClientId);
        }

        /// <summary>
        /// Test ListIdentityOidcRole
        /// </summary>
        [Fact]
        public void ListIdentityOidcRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityOidcRole(list);
        }

        /// <summary>
        /// Test ListIdentityOidcScope
        /// </summary>
        [Fact]
        public void ListIdentityOidcScopeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityOidcScope(list);
        }

        /// <summary>
        /// Test ListIdentityPersonaId
        /// </summary>
        [Fact]
        public void ListIdentityPersonaIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.ListIdentityPersonaId(list);
        }

        /// <summary>
        /// Test ReadIdentityAliasIdId
        /// </summary>
        [Fact]
        public void ReadIdentityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityAliasIdId(id);
        }

        /// <summary>
        /// Test ReadIdentityEntityAliasIdId
        /// </summary>
        [Fact]
        public void ReadIdentityEntityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityEntityAliasIdId(id);
        }

        /// <summary>
        /// Test ReadIdentityEntityIdId
        /// </summary>
        [Fact]
        public void ReadIdentityEntityIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityEntityIdId(id);
        }

        /// <summary>
        /// Test ReadIdentityEntityNameName
        /// </summary>
        [Fact]
        public void ReadIdentityEntityNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityEntityNameName(name);
        }

        /// <summary>
        /// Test ReadIdentityGroupAliasIdId
        /// </summary>
        [Fact]
        public void ReadIdentityGroupAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityGroupAliasIdId(id);
        }

        /// <summary>
        /// Test ReadIdentityGroupIdId
        /// </summary>
        [Fact]
        public void ReadIdentityGroupIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityGroupIdId(id);
        }

        /// <summary>
        /// Test ReadIdentityGroupNameName
        /// </summary>
        [Fact]
        public void ReadIdentityGroupNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityGroupNameName(name);
        }

        /// <summary>
        /// Test ReadIdentityMfaLoginEnforcementName
        /// </summary>
        [Fact]
        public void ReadIdentityMfaLoginEnforcementNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityMfaLoginEnforcementName(name);
        }

        /// <summary>
        /// Test ReadIdentityMfaMethodDuoMethodId
        /// </summary>
        [Fact]
        public void ReadIdentityMfaMethodDuoMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.ReadIdentityMfaMethodDuoMethodId(methodId);
        }

        /// <summary>
        /// Test ReadIdentityMfaMethodMethodId
        /// </summary>
        [Fact]
        public void ReadIdentityMfaMethodMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.ReadIdentityMfaMethodMethodId(methodId);
        }

        /// <summary>
        /// Test ReadIdentityMfaMethodOktaMethodId
        /// </summary>
        [Fact]
        public void ReadIdentityMfaMethodOktaMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.ReadIdentityMfaMethodOktaMethodId(methodId);
        }

        /// <summary>
        /// Test ReadIdentityMfaMethodPingidMethodId
        /// </summary>
        [Fact]
        public void ReadIdentityMfaMethodPingidMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.ReadIdentityMfaMethodPingidMethodId(methodId);
        }

        /// <summary>
        /// Test ReadIdentityMfaMethodTotpMethodId
        /// </summary>
        [Fact]
        public void ReadIdentityMfaMethodTotpMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //instance.ReadIdentityMfaMethodTotpMethodId(methodId);
        }

        /// <summary>
        /// Test ReadIdentityOidcAssignmentName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcAssignmentNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcAssignmentName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcClientName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcClientNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcClientName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcConfig
        /// </summary>
        [Fact]
        public void ReadIdentityOidcConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadIdentityOidcConfig();
        }

        /// <summary>
        /// Test ReadIdentityOidcKeyName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcKeyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcKeyName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcProviderName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcProviderNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcProviderName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcProviderNameAuthorize
        /// </summary>
        [Fact]
        public void ReadIdentityOidcProviderNameAuthorizeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcProviderNameAuthorize(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcProviderNameUserinfo
        /// </summary>
        [Fact]
        public void ReadIdentityOidcProviderNameUserinfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcProviderNameUserinfo(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcProviderNameWellKnownKeys
        /// </summary>
        [Fact]
        public void ReadIdentityOidcProviderNameWellKnownKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcProviderNameWellKnownKeys(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcProviderNameWellKnownOpenidConfiguration
        /// </summary>
        [Fact]
        public void ReadIdentityOidcProviderNameWellKnownOpenidConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcProviderNameWellKnownOpenidConfiguration(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcRoleName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcRoleName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcScopeName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcScopeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcScopeName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcTokenName
        /// </summary>
        [Fact]
        public void ReadIdentityOidcTokenNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.ReadIdentityOidcTokenName(name);
        }

        /// <summary>
        /// Test ReadIdentityOidcWellKnownKeys
        /// </summary>
        [Fact]
        public void ReadIdentityOidcWellKnownKeysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadIdentityOidcWellKnownKeys();
        }

        /// <summary>
        /// Test ReadIdentityOidcWellKnownOpenidConfiguration
        /// </summary>
        [Fact]
        public void ReadIdentityOidcWellKnownOpenidConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ReadIdentityOidcWellKnownOpenidConfiguration();
        }

        /// <summary>
        /// Test ReadIdentityPersonaIdId
        /// </summary>
        [Fact]
        public void ReadIdentityPersonaIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ReadIdentityPersonaIdId(id);
        }

        /// <summary>
        /// Test UpdateIdentityAlias
        /// </summary>
        [Fact]
        public void UpdateIdentityAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityAliasRequest identityAliasRequest = null;
            //instance.UpdateIdentityAlias(identityAliasRequest);
        }

        /// <summary>
        /// Test UpdateIdentityAliasIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityAliasIdRequest identityAliasIdRequest = null;
            //instance.UpdateIdentityAliasIdId(id, identityAliasIdRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntity
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityEntityRequest identityEntityRequest = null;
            //instance.UpdateIdentityEntity(identityEntityRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityAlias
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityEntityAliasRequest identityEntityAliasRequest = null;
            //instance.UpdateIdentityEntityAlias(identityEntityAliasRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityAliasIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityEntityAliasIdRequest identityEntityAliasIdRequest = null;
            //instance.UpdateIdentityEntityAliasIdId(id, identityEntityAliasIdRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityBatchDelete
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityBatchDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityEntityBatchDeleteRequest identityEntityBatchDeleteRequest = null;
            //instance.UpdateIdentityEntityBatchDelete(identityEntityBatchDeleteRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityEntityIdRequest identityEntityIdRequest = null;
            //instance.UpdateIdentityEntityIdId(id, identityEntityIdRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityMerge
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityMergeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityEntityMergeRequest identityEntityMergeRequest = null;
            //instance.UpdateIdentityEntityMerge(identityEntityMergeRequest);
        }

        /// <summary>
        /// Test UpdateIdentityEntityNameName
        /// </summary>
        [Fact]
        public void UpdateIdentityEntityNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityEntityNameRequest identityEntityNameRequest = null;
            //instance.UpdateIdentityEntityNameName(name, identityEntityNameRequest);
        }

        /// <summary>
        /// Test UpdateIdentityGroup
        /// </summary>
        [Fact]
        public void UpdateIdentityGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityGroupRequest identityGroupRequest = null;
            //instance.UpdateIdentityGroup(identityGroupRequest);
        }

        /// <summary>
        /// Test UpdateIdentityGroupAlias
        /// </summary>
        [Fact]
        public void UpdateIdentityGroupAliasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityGroupAliasRequest identityGroupAliasRequest = null;
            //instance.UpdateIdentityGroupAlias(identityGroupAliasRequest);
        }

        /// <summary>
        /// Test UpdateIdentityGroupAliasIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityGroupAliasIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityGroupAliasIdRequest identityGroupAliasIdRequest = null;
            //instance.UpdateIdentityGroupAliasIdId(id, identityGroupAliasIdRequest);
        }

        /// <summary>
        /// Test UpdateIdentityGroupIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityGroupIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityGroupIdRequest identityGroupIdRequest = null;
            //instance.UpdateIdentityGroupIdId(id, identityGroupIdRequest);
        }

        /// <summary>
        /// Test UpdateIdentityGroupNameName
        /// </summary>
        [Fact]
        public void UpdateIdentityGroupNameNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityGroupNameRequest identityGroupNameRequest = null;
            //instance.UpdateIdentityGroupNameName(name, identityGroupNameRequest);
        }

        /// <summary>
        /// Test UpdateIdentityLookupEntity
        /// </summary>
        [Fact]
        public void UpdateIdentityLookupEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityLookupEntityRequest identityLookupEntityRequest = null;
            //instance.UpdateIdentityLookupEntity(identityLookupEntityRequest);
        }

        /// <summary>
        /// Test UpdateIdentityLookupGroup
        /// </summary>
        [Fact]
        public void UpdateIdentityLookupGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityLookupGroupRequest identityLookupGroupRequest = null;
            //instance.UpdateIdentityLookupGroup(identityLookupGroupRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaLoginEnforcementName
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaLoginEnforcementNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityMfaLoginEnforcementRequest identityMfaLoginEnforcementRequest = null;
            //instance.UpdateIdentityMfaLoginEnforcementName(name, identityMfaLoginEnforcementRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodDuoMethodId
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodDuoMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //IdentityMfaMethodDuoRequest identityMfaMethodDuoRequest = null;
            //instance.UpdateIdentityMfaMethodDuoMethodId(methodId, identityMfaMethodDuoRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodOktaMethodId
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodOktaMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //IdentityMfaMethodOktaRequest identityMfaMethodOktaRequest = null;
            //instance.UpdateIdentityMfaMethodOktaMethodId(methodId, identityMfaMethodOktaRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodPingidMethodId
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodPingidMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //IdentityMfaMethodPingidRequest identityMfaMethodPingidRequest = null;
            //instance.UpdateIdentityMfaMethodPingidMethodId(methodId, identityMfaMethodPingidRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodTotpAdminDestroy
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodTotpAdminDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityMfaMethodTotpAdminDestroyRequest identityMfaMethodTotpAdminDestroyRequest = null;
            //instance.UpdateIdentityMfaMethodTotpAdminDestroy(identityMfaMethodTotpAdminDestroyRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodTotpAdminGenerate
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodTotpAdminGenerateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityMfaMethodTotpAdminGenerateRequest identityMfaMethodTotpAdminGenerateRequest = null;
            //instance.UpdateIdentityMfaMethodTotpAdminGenerate(identityMfaMethodTotpAdminGenerateRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodTotpGenerate
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodTotpGenerateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityMfaMethodTotpGenerateRequest identityMfaMethodTotpGenerateRequest = null;
            //instance.UpdateIdentityMfaMethodTotpGenerate(identityMfaMethodTotpGenerateRequest);
        }

        /// <summary>
        /// Test UpdateIdentityMfaMethodTotpMethodId
        /// </summary>
        [Fact]
        public void UpdateIdentityMfaMethodTotpMethodIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string methodId = null;
            //IdentityMfaMethodTotpRequest identityMfaMethodTotpRequest = null;
            //instance.UpdateIdentityMfaMethodTotpMethodId(methodId, identityMfaMethodTotpRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcAssignmentName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcAssignmentNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcAssignmentRequest identityOidcAssignmentRequest = null;
            //instance.UpdateIdentityOidcAssignmentName(name, identityOidcAssignmentRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcClientName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcClientNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcClientRequest identityOidcClientRequest = null;
            //instance.UpdateIdentityOidcClientName(name, identityOidcClientRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcConfig
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityOidcConfigRequest identityOidcConfigRequest = null;
            //instance.UpdateIdentityOidcConfig(identityOidcConfigRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcIntrospect
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcIntrospectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityOidcIntrospectRequest identityOidcIntrospectRequest = null;
            //instance.UpdateIdentityOidcIntrospect(identityOidcIntrospectRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcKeyName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcKeyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcKeyRequest identityOidcKeyRequest = null;
            //instance.UpdateIdentityOidcKeyName(name, identityOidcKeyRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcKeyNameRotate
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcKeyNameRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcKeyRotateRequest identityOidcKeyRotateRequest = null;
            //instance.UpdateIdentityOidcKeyNameRotate(name, identityOidcKeyRotateRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcProviderName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcProviderNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcProviderRequest identityOidcProviderRequest = null;
            //instance.UpdateIdentityOidcProviderName(name, identityOidcProviderRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcProviderNameAuthorize
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcProviderNameAuthorizeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcProviderAuthorizeRequest identityOidcProviderAuthorizeRequest = null;
            //instance.UpdateIdentityOidcProviderNameAuthorize(name, identityOidcProviderAuthorizeRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcProviderNameToken
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcProviderNameTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcProviderTokenRequest identityOidcProviderTokenRequest = null;
            //instance.UpdateIdentityOidcProviderNameToken(name, identityOidcProviderTokenRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcProviderNameUserinfo
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcProviderNameUserinfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.UpdateIdentityOidcProviderNameUserinfo(name);
        }

        /// <summary>
        /// Test UpdateIdentityOidcRoleName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcRoleRequest identityOidcRoleRequest = null;
            //instance.UpdateIdentityOidcRoleName(name, identityOidcRoleRequest);
        }

        /// <summary>
        /// Test UpdateIdentityOidcScopeName
        /// </summary>
        [Fact]
        public void UpdateIdentityOidcScopeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //IdentityOidcScopeRequest identityOidcScopeRequest = null;
            //instance.UpdateIdentityOidcScopeName(name, identityOidcScopeRequest);
        }

        /// <summary>
        /// Test UpdateIdentityPersona
        /// </summary>
        [Fact]
        public void UpdateIdentityPersonaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //IdentityPersonaRequest identityPersonaRequest = null;
            //instance.UpdateIdentityPersona(identityPersonaRequest);
        }

        /// <summary>
        /// Test UpdateIdentityPersonaIdId
        /// </summary>
        [Fact]
        public void UpdateIdentityPersonaIdIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IdentityPersonaIdRequest identityPersonaIdRequest = null;
            //instance.UpdateIdentityPersonaIdId(id, identityPersonaIdRequest);
        }
    }
}
