// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;



namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing GenerateRandomWithSourceAndBytesRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GenerateRandomWithSourceAndBytesRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GenerateRandomWithSourceAndBytesRequest
        //private GenerateRandomWithSourceAndBytesRequest instance;

        public GenerateRandomWithSourceAndBytesRequestTests()
        {
            // TODO uncomment below to create an instance of GenerateRandomWithSourceAndBytesRequest
            //instance = new GenerateRandomWithSourceAndBytesRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GenerateRandomWithSourceAndBytesRequest
        /// </summary>
        [Fact]
        public void GenerateRandomWithSourceAndBytesRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" GenerateRandomWithSourceAndBytesRequest
            //Assert.IsType<GenerateRandomWithSourceAndBytesRequest>(instance);
        }




        /// <summary>
        /// Test the property 'Bytes'
        /// </summary>
        [Fact]
        public void BytesTest()
        {
            // TODO unit test for the property 'Bytes'
        }

        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Fact]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }


    }

}


