// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.13.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing KubernetesWriteRoleRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KubernetesWriteRoleRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KubernetesWriteRoleRequest
        //private KubernetesWriteRoleRequest instance;

        public KubernetesWriteRoleRequestTests()
        {
            // TODO uncomment below to create an instance of KubernetesWriteRoleRequest
            //instance = new KubernetesWriteRoleRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KubernetesWriteRoleRequest
        /// </summary>
        [Fact]
        public void KubernetesWriteRoleRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" KubernetesWriteRoleRequest
            //Assert.IsType<KubernetesWriteRoleRequest>(instance);
        }


        /// <summary>
        /// Test the property 'AllowedKubernetesNamespaceSelector'
        /// </summary>
        [Fact]
        public void AllowedKubernetesNamespaceSelectorTest()
        {
            // TODO unit test for the property 'AllowedKubernetesNamespaceSelector'
        }
        /// <summary>
        /// Test the property 'AllowedKubernetesNamespaces'
        /// </summary>
        [Fact]
        public void AllowedKubernetesNamespacesTest()
        {
            // TODO unit test for the property 'AllowedKubernetesNamespaces'
        }
        /// <summary>
        /// Test the property 'ExtraAnnotations'
        /// </summary>
        [Fact]
        public void ExtraAnnotationsTest()
        {
            // TODO unit test for the property 'ExtraAnnotations'
        }
        /// <summary>
        /// Test the property 'ExtraLabels'
        /// </summary>
        [Fact]
        public void ExtraLabelsTest()
        {
            // TODO unit test for the property 'ExtraLabels'
        }
        /// <summary>
        /// Test the property 'GeneratedRoleRules'
        /// </summary>
        [Fact]
        public void GeneratedRoleRulesTest()
        {
            // TODO unit test for the property 'GeneratedRoleRules'
        }
        /// <summary>
        /// Test the property 'KubernetesRoleName'
        /// </summary>
        [Fact]
        public void KubernetesRoleNameTest()
        {
            // TODO unit test for the property 'KubernetesRoleName'
        }
        /// <summary>
        /// Test the property 'KubernetesRoleType'
        /// </summary>
        [Fact]
        public void KubernetesRoleTypeTest()
        {
            // TODO unit test for the property 'KubernetesRoleType'
        }
        /// <summary>
        /// Test the property 'NameTemplate'
        /// </summary>
        [Fact]
        public void NameTemplateTest()
        {
            // TODO unit test for the property 'NameTemplate'
        }
        /// <summary>
        /// Test the property 'ServiceAccountName'
        /// </summary>
        [Fact]
        public void ServiceAccountNameTest()
        {
            // TODO unit test for the property 'ServiceAccountName'
        }
        /// <summary>
        /// Test the property 'TokenDefaultTtl'
        /// </summary>
        [Fact]
        public void TokenDefaultTtlTest()
        {
            // TODO unit test for the property 'TokenDefaultTtl'
        }
        /// <summary>
        /// Test the property 'TokenMaxTtl'
        /// </summary>
        [Fact]
        public void TokenMaxTtlTest()
        {
            // TODO unit test for the property 'TokenMaxTtl'
        }

    }

}
