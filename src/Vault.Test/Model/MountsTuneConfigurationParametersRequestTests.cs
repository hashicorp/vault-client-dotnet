// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;



namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing MountsTuneConfigurationParametersRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MountsTuneConfigurationParametersRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MountsTuneConfigurationParametersRequest
        //private MountsTuneConfigurationParametersRequest instance;

        public MountsTuneConfigurationParametersRequestTests()
        {
            // TODO uncomment below to create an instance of MountsTuneConfigurationParametersRequest
            //instance = new MountsTuneConfigurationParametersRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MountsTuneConfigurationParametersRequest
        /// </summary>
        [Fact]
        public void MountsTuneConfigurationParametersRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" MountsTuneConfigurationParametersRequest
            //Assert.IsType<MountsTuneConfigurationParametersRequest>(instance);
        }




        /// <summary>
        /// Test the property 'AllowedManagedKeys'
        /// </summary>
        [Fact]
        public void AllowedManagedKeysTest()
        {
            // TODO unit test for the property 'AllowedManagedKeys'
        }

        /// <summary>
        /// Test the property 'AllowedResponseHeaders'
        /// </summary>
        [Fact]
        public void AllowedResponseHeadersTest()
        {
            // TODO unit test for the property 'AllowedResponseHeaders'
        }

        /// <summary>
        /// Test the property 'AuditNonHmacRequestKeys'
        /// </summary>
        [Fact]
        public void AuditNonHmacRequestKeysTest()
        {
            // TODO unit test for the property 'AuditNonHmacRequestKeys'
        }

        /// <summary>
        /// Test the property 'AuditNonHmacResponseKeys'
        /// </summary>
        [Fact]
        public void AuditNonHmacResponseKeysTest()
        {
            // TODO unit test for the property 'AuditNonHmacResponseKeys'
        }

        /// <summary>
        /// Test the property 'DefaultLeaseTtl'
        /// </summary>
        [Fact]
        public void DefaultLeaseTtlTest()
        {
            // TODO unit test for the property 'DefaultLeaseTtl'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'ListingVisibility'
        /// </summary>
        [Fact]
        public void ListingVisibilityTest()
        {
            // TODO unit test for the property 'ListingVisibility'
        }

        /// <summary>
        /// Test the property 'MaxLeaseTtl'
        /// </summary>
        [Fact]
        public void MaxLeaseTtlTest()
        {
            // TODO unit test for the property 'MaxLeaseTtl'
        }

        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Fact]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }

        /// <summary>
        /// Test the property 'PassthroughRequestHeaders'
        /// </summary>
        [Fact]
        public void PassthroughRequestHeadersTest()
        {
            // TODO unit test for the property 'PassthroughRequestHeaders'
        }

        /// <summary>
        /// Test the property 'PluginVersion'
        /// </summary>
        [Fact]
        public void PluginVersionTest()
        {
            // TODO unit test for the property 'PluginVersion'
        }

        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }

        /// <summary>
        /// Test the property 'UserLockoutConfig'
        /// </summary>
        [Fact]
        public void UserLockoutConfigTest()
        {
            // TODO unit test for the property 'UserLockoutConfig'
        }


    }

}


