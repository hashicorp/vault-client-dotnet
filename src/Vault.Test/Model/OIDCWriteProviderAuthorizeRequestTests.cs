// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing OIDCWriteProviderAuthorizeRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OIDCWriteProviderAuthorizeRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for OIDCWriteProviderAuthorizeRequest
        //private OIDCWriteProviderAuthorizeRequest instance;

        public OIDCWriteProviderAuthorizeRequestTests()
        {
            // TODO uncomment below to create an instance of OIDCWriteProviderAuthorizeRequest
            //instance = new OIDCWriteProviderAuthorizeRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OIDCWriteProviderAuthorizeRequest
        /// </summary>
        [Fact]
        public void OIDCWriteProviderAuthorizeRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" OIDCWriteProviderAuthorizeRequest
            //Assert.IsType<OIDCWriteProviderAuthorizeRequest>(instance);
        }


        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }
        /// <summary>
        /// Test the property 'CodeChallenge'
        /// </summary>
        [Fact]
        public void CodeChallengeTest()
        {
            // TODO unit test for the property 'CodeChallenge'
        }
        /// <summary>
        /// Test the property 'CodeChallengeMethod'
        /// </summary>
        [Fact]
        public void CodeChallengeMethodTest()
        {
            // TODO unit test for the property 'CodeChallengeMethod'
        }
        /// <summary>
        /// Test the property 'MaxAge'
        /// </summary>
        [Fact]
        public void MaxAgeTest()
        {
            // TODO unit test for the property 'MaxAge'
        }
        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }
        /// <summary>
        /// Test the property 'RedirectUri'
        /// </summary>
        [Fact]
        public void RedirectUriTest()
        {
            // TODO unit test for the property 'RedirectUri'
        }
        /// <summary>
        /// Test the property 'ResponseType'
        /// </summary>
        [Fact]
        public void ResponseTypeTest()
        {
            // TODO unit test for the property 'ResponseType'
        }
        /// <summary>
        /// Test the property 'Scope'
        /// </summary>
        [Fact]
        public void ScopeTest()
        {
            // TODO unit test for the property 'Scope'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

    }

}
