// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;



namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing MountsReadConfigurationResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MountsReadConfigurationResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MountsReadConfigurationResponse
        //private MountsReadConfigurationResponse instance;

        public MountsReadConfigurationResponseTests()
        {
            // TODO uncomment below to create an instance of MountsReadConfigurationResponse
            //instance = new MountsReadConfigurationResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MountsReadConfigurationResponse
        /// </summary>
        [Fact]
        public void MountsReadConfigurationResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" MountsReadConfigurationResponse
            //Assert.IsType<MountsReadConfigurationResponse>(instance);
        }




        /// <summary>
        /// Test the property 'Accessor'
        /// </summary>
        [Fact]
        public void AccessorTest()
        {
            // TODO unit test for the property 'Accessor'
        }

        /// <summary>
        /// Test the property 'Config'
        /// </summary>
        [Fact]
        public void ConfigTest()
        {
            // TODO unit test for the property 'Config'
        }

        /// <summary>
        /// Test the property 'DeprecationStatus'
        /// </summary>
        [Fact]
        public void DeprecationStatusTest()
        {
            // TODO unit test for the property 'DeprecationStatus'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'ExternalEntropyAccess'
        /// </summary>
        [Fact]
        public void ExternalEntropyAccessTest()
        {
            // TODO unit test for the property 'ExternalEntropyAccess'
        }

        /// <summary>
        /// Test the property 'Local'
        /// </summary>
        [Fact]
        public void LocalTest()
        {
            // TODO unit test for the property 'Local'
        }

        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Fact]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }

        /// <summary>
        /// Test the property 'PluginVersion'
        /// </summary>
        [Fact]
        public void PluginVersionTest()
        {
            // TODO unit test for the property 'PluginVersion'
        }

        /// <summary>
        /// Test the property 'RunningPluginVersion'
        /// </summary>
        [Fact]
        public void RunningPluginVersionTest()
        {
            // TODO unit test for the property 'RunningPluginVersion'
        }

        /// <summary>
        /// Test the property 'RunningSha256'
        /// </summary>
        [Fact]
        public void RunningSha256Test()
        {
            // TODO unit test for the property 'RunningSha256'
        }

        /// <summary>
        /// Test the property 'SealWrap'
        /// </summary>
        [Fact]
        public void SealWrapTest()
        {
            // TODO unit test for the property 'SealWrap'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Uuid'
        /// </summary>
        [Fact]
        public void UuidTest()
        {
            // TODO unit test for the property 'Uuid'
        }


    }

}


