// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing EntityWriteAliasRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EntityWriteAliasRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EntityWriteAliasRequest
        //private EntityWriteAliasRequest instance;

        public EntityWriteAliasRequestTests()
        {
            // TODO uncomment below to create an instance of EntityWriteAliasRequest
            //instance = new EntityWriteAliasRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EntityWriteAliasRequest
        /// </summary>
        [Fact]
        public void EntityWriteAliasRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" EntityWriteAliasRequest
            //Assert.IsType<EntityWriteAliasRequest>(instance);
        }


        /// <summary>
        /// Test the property 'CanonicalId'
        /// </summary>
        [Fact]
        public void CanonicalIdTest()
        {
            // TODO unit test for the property 'CanonicalId'
        }
        /// <summary>
        /// Test the property 'CustomMetadata'
        /// </summary>
        [Fact]
        public void CustomMetadataTest()
        {
            // TODO unit test for the property 'CustomMetadata'
        }
        /// <summary>
        /// Test the property 'EntityId'
        /// </summary>
        [Fact]
        public void EntityIdTest()
        {
            // TODO unit test for the property 'EntityId'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'MountAccessor'
        /// </summary>
        [Fact]
        public void MountAccessorTest()
        {
            // TODO unit test for the property 'MountAccessor'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
