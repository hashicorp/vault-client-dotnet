// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
//
// Code generated with OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Vault.Api;
using Vault.Model;
using Vault.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Vault.Test.Model
{
    /// <summary>
    ///  Class for testing CloudFoundryWriteRoleRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CloudFoundryWriteRoleRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CloudFoundryWriteRoleRequest
        //private CloudFoundryWriteRoleRequest instance;

        public CloudFoundryWriteRoleRequestTests()
        {
            // TODO uncomment below to create an instance of CloudFoundryWriteRoleRequest
            //instance = new CloudFoundryWriteRoleRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CloudFoundryWriteRoleRequest
        /// </summary>
        [Fact]
        public void CloudFoundryWriteRoleRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" CloudFoundryWriteRoleRequest
            //Assert.IsType<CloudFoundryWriteRoleRequest>(instance);
        }


        /// <summary>
        /// Test the property 'BoundApplicationIds'
        /// </summary>
        [Fact]
        public void BoundApplicationIdsTest()
        {
            // TODO unit test for the property 'BoundApplicationIds'
        }
        /// <summary>
        /// Test the property 'BoundCidrs'
        /// </summary>
        [Fact]
        public void BoundCidrsTest()
        {
            // TODO unit test for the property 'BoundCidrs'
        }
        /// <summary>
        /// Test the property 'BoundInstanceIds'
        /// </summary>
        [Fact]
        public void BoundInstanceIdsTest()
        {
            // TODO unit test for the property 'BoundInstanceIds'
        }
        /// <summary>
        /// Test the property 'BoundOrganizationIds'
        /// </summary>
        [Fact]
        public void BoundOrganizationIdsTest()
        {
            // TODO unit test for the property 'BoundOrganizationIds'
        }
        /// <summary>
        /// Test the property 'BoundSpaceIds'
        /// </summary>
        [Fact]
        public void BoundSpaceIdsTest()
        {
            // TODO unit test for the property 'BoundSpaceIds'
        }
        /// <summary>
        /// Test the property 'DisableIpMatching'
        /// </summary>
        [Fact]
        public void DisableIpMatchingTest()
        {
            // TODO unit test for the property 'DisableIpMatching'
        }
        /// <summary>
        /// Test the property 'MaxTtl'
        /// </summary>
        [Fact]
        public void MaxTtlTest()
        {
            // TODO unit test for the property 'MaxTtl'
        }
        /// <summary>
        /// Test the property 'Period'
        /// </summary>
        [Fact]
        public void PeriodTest()
        {
            // TODO unit test for the property 'Period'
        }
        /// <summary>
        /// Test the property 'Policies'
        /// </summary>
        [Fact]
        public void PoliciesTest()
        {
            // TODO unit test for the property 'Policies'
        }
        /// <summary>
        /// Test the property 'TokenBoundCidrs'
        /// </summary>
        [Fact]
        public void TokenBoundCidrsTest()
        {
            // TODO unit test for the property 'TokenBoundCidrs'
        }
        /// <summary>
        /// Test the property 'TokenExplicitMaxTtl'
        /// </summary>
        [Fact]
        public void TokenExplicitMaxTtlTest()
        {
            // TODO unit test for the property 'TokenExplicitMaxTtl'
        }
        /// <summary>
        /// Test the property 'TokenMaxTtl'
        /// </summary>
        [Fact]
        public void TokenMaxTtlTest()
        {
            // TODO unit test for the property 'TokenMaxTtl'
        }
        /// <summary>
        /// Test the property 'TokenNoDefaultPolicy'
        /// </summary>
        [Fact]
        public void TokenNoDefaultPolicyTest()
        {
            // TODO unit test for the property 'TokenNoDefaultPolicy'
        }
        /// <summary>
        /// Test the property 'TokenNumUses'
        /// </summary>
        [Fact]
        public void TokenNumUsesTest()
        {
            // TODO unit test for the property 'TokenNumUses'
        }
        /// <summary>
        /// Test the property 'TokenPeriod'
        /// </summary>
        [Fact]
        public void TokenPeriodTest()
        {
            // TODO unit test for the property 'TokenPeriod'
        }
        /// <summary>
        /// Test the property 'TokenPolicies'
        /// </summary>
        [Fact]
        public void TokenPoliciesTest()
        {
            // TODO unit test for the property 'TokenPolicies'
        }
        /// <summary>
        /// Test the property 'TokenTtl'
        /// </summary>
        [Fact]
        public void TokenTtlTest()
        {
            // TODO unit test for the property 'TokenTtl'
        }
        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }
        /// <summary>
        /// Test the property 'Ttl'
        /// </summary>
        [Fact]
        public void TtlTest()
        {
            // TODO unit test for the property 'Ttl'
        }

    }

}
