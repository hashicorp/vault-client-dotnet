/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.11.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using VaultClient.Client;
using VaultClient.Api;
// uncomment below to import models
//using VaultClient.Model;

namespace VaultClient.Test.Api
{
    /// <summary>
    ///  Class for testing AuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthApiTests : IDisposable
    {
        private AuthApi instance;

        public AuthApiTests()
        {
            instance = new AuthApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthApi
            //Assert.IsType<AuthApi>(instance);
        }

        /// <summary>
        /// Test DeleteAuthAlicloudRoleRole
        /// </summary>
        [Fact]
        public void DeleteAuthAlicloudRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.DeleteAuthAlicloudRoleRole(role);
        }

        /// <summary>
        /// Test DeleteAuthAppIdMapAppIdKey
        /// </summary>
        [Fact]
        public void DeleteAuthAppIdMapAppIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.DeleteAuthAppIdMapAppIdKey(key);
        }

        /// <summary>
        /// Test DeleteAuthAppIdMapUserIdKey
        /// </summary>
        [Fact]
        public void DeleteAuthAppIdMapUserIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.DeleteAuthAppIdMapUserIdKey(key);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleName(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameBindSecretId
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameBindSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameBindSecretId(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameBoundCidrList
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameBoundCidrListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameBoundCidrList(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNamePeriod
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNamePeriodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNamePeriod(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNamePolicies
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNamePoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNamePolicies(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameSecretIdAccessorDestroy
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameSecretIdAccessorDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameSecretIdAccessorDestroy(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameSecretIdBoundCidrs
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameSecretIdBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameSecretIdBoundCidrs(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameSecretIdDestroy
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameSecretIdDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameSecretIdDestroy(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameSecretIdNumUses
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameSecretIdNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameSecretIdNumUses(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameSecretIdTtl
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameSecretIdTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameSecretIdTtl(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameTokenBoundCidrs
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameTokenBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameTokenBoundCidrs(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameTokenMaxTtl
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameTokenMaxTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameTokenMaxTtl(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameTokenNumUses
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameTokenNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameTokenNumUses(roleName);
        }

        /// <summary>
        /// Test DeleteAuthApproleRoleRoleNameTokenTtl
        /// </summary>
        [Fact]
        public void DeleteAuthApproleRoleRoleNameTokenTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthApproleRoleRoleNameTokenTtl(roleName);
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigCertificateCertName
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigCertificateCertNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string certName = null;
            //instance.DeleteAuthAwsConfigCertificateCertName(certName);
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigClient
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAwsConfigClient();
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigStsAccountId
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigStsAccountIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //instance.DeleteAuthAwsConfigStsAccountId(accountId);
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigTidyIdentityAccesslist
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigTidyIdentityAccesslistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAwsConfigTidyIdentityAccesslist();
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigTidyIdentityWhitelist
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigTidyIdentityWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAwsConfigTidyIdentityWhitelist();
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigTidyRoletagBlacklist
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigTidyRoletagBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAwsConfigTidyRoletagBlacklist();
        }

        /// <summary>
        /// Test DeleteAuthAwsConfigTidyRoletagDenylist
        /// </summary>
        [Fact]
        public void DeleteAuthAwsConfigTidyRoletagDenylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAwsConfigTidyRoletagDenylist();
        }

        /// <summary>
        /// Test DeleteAuthAwsIdentityAccesslistInstanceId
        /// </summary>
        [Fact]
        public void DeleteAuthAwsIdentityAccesslistInstanceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceId = null;
            //instance.DeleteAuthAwsIdentityAccesslistInstanceId(instanceId);
        }

        /// <summary>
        /// Test DeleteAuthAwsIdentityWhitelistInstanceId
        /// </summary>
        [Fact]
        public void DeleteAuthAwsIdentityWhitelistInstanceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceId = null;
            //instance.DeleteAuthAwsIdentityWhitelistInstanceId(instanceId);
        }

        /// <summary>
        /// Test DeleteAuthAwsRoleRole
        /// </summary>
        [Fact]
        public void DeleteAuthAwsRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.DeleteAuthAwsRoleRole(role);
        }

        /// <summary>
        /// Test DeleteAuthAwsRoletagBlacklistRoleTag
        /// </summary>
        [Fact]
        public void DeleteAuthAwsRoletagBlacklistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.DeleteAuthAwsRoletagBlacklistRoleTag(roleTag);
        }

        /// <summary>
        /// Test DeleteAuthAwsRoletagDenylistRoleTag
        /// </summary>
        [Fact]
        public void DeleteAuthAwsRoletagDenylistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.DeleteAuthAwsRoletagDenylistRoleTag(roleTag);
        }

        /// <summary>
        /// Test DeleteAuthAzureConfig
        /// </summary>
        [Fact]
        public void DeleteAuthAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthAzureConfig();
        }

        /// <summary>
        /// Test DeleteAuthAzureRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthAzureRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthAzureRoleName(name);
        }

        /// <summary>
        /// Test DeleteAuthCertCertsName
        /// </summary>
        [Fact]
        public void DeleteAuthCertCertsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthCertCertsName(name);
        }

        /// <summary>
        /// Test DeleteAuthCertCrlsName
        /// </summary>
        [Fact]
        public void DeleteAuthCertCrlsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthCertCrlsName(name);
        }

        /// <summary>
        /// Test DeleteAuthCfConfig
        /// </summary>
        [Fact]
        public void DeleteAuthCfConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthCfConfig();
        }

        /// <summary>
        /// Test DeleteAuthCfRolesRole
        /// </summary>
        [Fact]
        public void DeleteAuthCfRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.DeleteAuthCfRolesRole(role);
        }

        /// <summary>
        /// Test DeleteAuthGcpRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthGcpRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthGcpRoleName(name);
        }

        /// <summary>
        /// Test DeleteAuthGithubMapTeamsKey
        /// </summary>
        [Fact]
        public void DeleteAuthGithubMapTeamsKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.DeleteAuthGithubMapTeamsKey(key);
        }

        /// <summary>
        /// Test DeleteAuthGithubMapUsersKey
        /// </summary>
        [Fact]
        public void DeleteAuthGithubMapUsersKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.DeleteAuthGithubMapUsersKey(key);
        }

        /// <summary>
        /// Test DeleteAuthJwtRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthJwtRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthJwtRoleName(name);
        }

        /// <summary>
        /// Test DeleteAuthKerberosGroupsName
        /// </summary>
        [Fact]
        public void DeleteAuthKerberosGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthKerberosGroupsName(name);
        }

        /// <summary>
        /// Test DeleteAuthKubernetesRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthKubernetesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthKubernetesRoleName(name);
        }

        /// <summary>
        /// Test DeleteAuthLdapGroupsName
        /// </summary>
        [Fact]
        public void DeleteAuthLdapGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthLdapGroupsName(name);
        }

        /// <summary>
        /// Test DeleteAuthLdapUsersName
        /// </summary>
        [Fact]
        public void DeleteAuthLdapUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthLdapUsersName(name);
        }

        /// <summary>
        /// Test DeleteAuthOciConfig
        /// </summary>
        [Fact]
        public void DeleteAuthOciConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteAuthOciConfig();
        }

        /// <summary>
        /// Test DeleteAuthOciRoleRole
        /// </summary>
        [Fact]
        public void DeleteAuthOciRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.DeleteAuthOciRoleRole(role);
        }

        /// <summary>
        /// Test DeleteAuthOidcRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthOidcRoleName(name);
        }

        /// <summary>
        /// Test DeleteAuthOktaGroupsName
        /// </summary>
        [Fact]
        public void DeleteAuthOktaGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthOktaGroupsName(name);
        }

        /// <summary>
        /// Test DeleteAuthOktaUsersName
        /// </summary>
        [Fact]
        public void DeleteAuthOktaUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthOktaUsersName(name);
        }

        /// <summary>
        /// Test DeleteAuthRadiusUsersName
        /// </summary>
        [Fact]
        public void DeleteAuthRadiusUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteAuthRadiusUsersName(name);
        }

        /// <summary>
        /// Test DeleteAuthTokenRolesRoleName
        /// </summary>
        [Fact]
        public void DeleteAuthTokenRolesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.DeleteAuthTokenRolesRoleName(roleName);
        }

        /// <summary>
        /// Test DeleteAuthUserpassUsersUsername
        /// </summary>
        [Fact]
        public void DeleteAuthUserpassUsersUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.DeleteAuthUserpassUsersUsername(username);
        }

        /// <summary>
        /// Test GetAuthAlicloudRole
        /// </summary>
        [Fact]
        public void GetAuthAlicloudRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAlicloudRole(list);
        }

        /// <summary>
        /// Test GetAuthAlicloudRoleRole
        /// </summary>
        [Fact]
        public void GetAuthAlicloudRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.GetAuthAlicloudRoleRole(role);
        }

        /// <summary>
        /// Test GetAuthAlicloudRoles
        /// </summary>
        [Fact]
        public void GetAuthAlicloudRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAlicloudRoles(list);
        }

        /// <summary>
        /// Test GetAuthAppIdMapAppId
        /// </summary>
        [Fact]
        public void GetAuthAppIdMapAppIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAppIdMapAppId(list);
        }

        /// <summary>
        /// Test GetAuthAppIdMapAppIdKey
        /// </summary>
        [Fact]
        public void GetAuthAppIdMapAppIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.GetAuthAppIdMapAppIdKey(key);
        }

        /// <summary>
        /// Test GetAuthAppIdMapUserId
        /// </summary>
        [Fact]
        public void GetAuthAppIdMapUserIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAppIdMapUserId(list);
        }

        /// <summary>
        /// Test GetAuthAppIdMapUserIdKey
        /// </summary>
        [Fact]
        public void GetAuthAppIdMapUserIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.GetAuthAppIdMapUserIdKey(key);
        }

        /// <summary>
        /// Test GetAuthApproleRole
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthApproleRole(list);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleName
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleName(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameBindSecretId
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameBindSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameBindSecretId(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameBoundCidrList
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameBoundCidrListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameBoundCidrList(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameLocalSecretIds
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameLocalSecretIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameLocalSecretIds(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNamePeriod
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNamePeriodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNamePeriod(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNamePolicies
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNamePoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNamePolicies(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameRoleId
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameRoleIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameRoleId(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameSecretId
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //string list = null;
            //instance.GetAuthApproleRoleRoleNameSecretId(roleName, list);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameSecretIdBoundCidrs
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameSecretIdBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameSecretIdBoundCidrs(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameSecretIdNumUses
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameSecretIdNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameSecretIdNumUses(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameSecretIdTtl
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameSecretIdTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameSecretIdTtl(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameTokenBoundCidrs
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameTokenBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameTokenBoundCidrs(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameTokenMaxTtl
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameTokenMaxTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameTokenMaxTtl(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameTokenNumUses
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameTokenNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameTokenNumUses(roleName);
        }

        /// <summary>
        /// Test GetAuthApproleRoleRoleNameTokenTtl
        /// </summary>
        [Fact]
        public void GetAuthApproleRoleRoleNameTokenTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthApproleRoleRoleNameTokenTtl(roleName);
        }

        /// <summary>
        /// Test GetAuthAwsConfigCertificateCertName
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigCertificateCertNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string certName = null;
            //instance.GetAuthAwsConfigCertificateCertName(certName);
        }

        /// <summary>
        /// Test GetAuthAwsConfigCertificates
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigCertificatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsConfigCertificates(list);
        }

        /// <summary>
        /// Test GetAuthAwsConfigClient
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigClient();
        }

        /// <summary>
        /// Test GetAuthAwsConfigIdentity
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigIdentity();
        }

        /// <summary>
        /// Test GetAuthAwsConfigSts
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigStsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsConfigSts(list);
        }

        /// <summary>
        /// Test GetAuthAwsConfigStsAccountId
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigStsAccountIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //instance.GetAuthAwsConfigStsAccountId(accountId);
        }

        /// <summary>
        /// Test GetAuthAwsConfigTidyIdentityAccesslist
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigTidyIdentityAccesslistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigTidyIdentityAccesslist();
        }

        /// <summary>
        /// Test GetAuthAwsConfigTidyIdentityWhitelist
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigTidyIdentityWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigTidyIdentityWhitelist();
        }

        /// <summary>
        /// Test GetAuthAwsConfigTidyRoletagBlacklist
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigTidyRoletagBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigTidyRoletagBlacklist();
        }

        /// <summary>
        /// Test GetAuthAwsConfigTidyRoletagDenylist
        /// </summary>
        [Fact]
        public void GetAuthAwsConfigTidyRoletagDenylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAwsConfigTidyRoletagDenylist();
        }

        /// <summary>
        /// Test GetAuthAwsIdentityAccesslist
        /// </summary>
        [Fact]
        public void GetAuthAwsIdentityAccesslistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsIdentityAccesslist(list);
        }

        /// <summary>
        /// Test GetAuthAwsIdentityAccesslistInstanceId
        /// </summary>
        [Fact]
        public void GetAuthAwsIdentityAccesslistInstanceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceId = null;
            //instance.GetAuthAwsIdentityAccesslistInstanceId(instanceId);
        }

        /// <summary>
        /// Test GetAuthAwsIdentityWhitelist
        /// </summary>
        [Fact]
        public void GetAuthAwsIdentityWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsIdentityWhitelist(list);
        }

        /// <summary>
        /// Test GetAuthAwsIdentityWhitelistInstanceId
        /// </summary>
        [Fact]
        public void GetAuthAwsIdentityWhitelistInstanceIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceId = null;
            //instance.GetAuthAwsIdentityWhitelistInstanceId(instanceId);
        }

        /// <summary>
        /// Test GetAuthAwsRole
        /// </summary>
        [Fact]
        public void GetAuthAwsRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsRole(list);
        }

        /// <summary>
        /// Test GetAuthAwsRoleRole
        /// </summary>
        [Fact]
        public void GetAuthAwsRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.GetAuthAwsRoleRole(role);
        }

        /// <summary>
        /// Test GetAuthAwsRoles
        /// </summary>
        [Fact]
        public void GetAuthAwsRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsRoles(list);
        }

        /// <summary>
        /// Test GetAuthAwsRoletagBlacklist
        /// </summary>
        [Fact]
        public void GetAuthAwsRoletagBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsRoletagBlacklist(list);
        }

        /// <summary>
        /// Test GetAuthAwsRoletagBlacklistRoleTag
        /// </summary>
        [Fact]
        public void GetAuthAwsRoletagBlacklistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.GetAuthAwsRoletagBlacklistRoleTag(roleTag);
        }

        /// <summary>
        /// Test GetAuthAwsRoletagDenylist
        /// </summary>
        [Fact]
        public void GetAuthAwsRoletagDenylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAwsRoletagDenylist(list);
        }

        /// <summary>
        /// Test GetAuthAwsRoletagDenylistRoleTag
        /// </summary>
        [Fact]
        public void GetAuthAwsRoletagDenylistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.GetAuthAwsRoletagDenylistRoleTag(roleTag);
        }

        /// <summary>
        /// Test GetAuthAzureConfig
        /// </summary>
        [Fact]
        public void GetAuthAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthAzureConfig();
        }

        /// <summary>
        /// Test GetAuthAzureRole
        /// </summary>
        [Fact]
        public void GetAuthAzureRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthAzureRole(list);
        }

        /// <summary>
        /// Test GetAuthAzureRoleName
        /// </summary>
        [Fact]
        public void GetAuthAzureRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthAzureRoleName(name);
        }

        /// <summary>
        /// Test GetAuthCentrifyConfig
        /// </summary>
        [Fact]
        public void GetAuthCentrifyConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthCentrifyConfig();
        }

        /// <summary>
        /// Test GetAuthCertCerts
        /// </summary>
        [Fact]
        public void GetAuthCertCertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthCertCerts(list);
        }

        /// <summary>
        /// Test GetAuthCertCertsName
        /// </summary>
        [Fact]
        public void GetAuthCertCertsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthCertCertsName(name);
        }

        /// <summary>
        /// Test GetAuthCertCrlsName
        /// </summary>
        [Fact]
        public void GetAuthCertCrlsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthCertCrlsName(name);
        }

        /// <summary>
        /// Test GetAuthCfConfig
        /// </summary>
        [Fact]
        public void GetAuthCfConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthCfConfig();
        }

        /// <summary>
        /// Test GetAuthCfRoles
        /// </summary>
        [Fact]
        public void GetAuthCfRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthCfRoles(list);
        }

        /// <summary>
        /// Test GetAuthCfRolesRole
        /// </summary>
        [Fact]
        public void GetAuthCfRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.GetAuthCfRolesRole(role);
        }

        /// <summary>
        /// Test GetAuthGcpConfig
        /// </summary>
        [Fact]
        public void GetAuthGcpConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthGcpConfig();
        }

        /// <summary>
        /// Test GetAuthGcpRole
        /// </summary>
        [Fact]
        public void GetAuthGcpRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthGcpRole(list);
        }

        /// <summary>
        /// Test GetAuthGcpRoleName
        /// </summary>
        [Fact]
        public void GetAuthGcpRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthGcpRoleName(name);
        }

        /// <summary>
        /// Test GetAuthGcpRoles
        /// </summary>
        [Fact]
        public void GetAuthGcpRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthGcpRoles(list);
        }

        /// <summary>
        /// Test GetAuthGithubConfig
        /// </summary>
        [Fact]
        public void GetAuthGithubConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthGithubConfig();
        }

        /// <summary>
        /// Test GetAuthGithubMapTeams
        /// </summary>
        [Fact]
        public void GetAuthGithubMapTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthGithubMapTeams(list);
        }

        /// <summary>
        /// Test GetAuthGithubMapTeamsKey
        /// </summary>
        [Fact]
        public void GetAuthGithubMapTeamsKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.GetAuthGithubMapTeamsKey(key);
        }

        /// <summary>
        /// Test GetAuthGithubMapUsers
        /// </summary>
        [Fact]
        public void GetAuthGithubMapUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthGithubMapUsers(list);
        }

        /// <summary>
        /// Test GetAuthGithubMapUsersKey
        /// </summary>
        [Fact]
        public void GetAuthGithubMapUsersKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //instance.GetAuthGithubMapUsersKey(key);
        }

        /// <summary>
        /// Test GetAuthJwtConfig
        /// </summary>
        [Fact]
        public void GetAuthJwtConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthJwtConfig();
        }

        /// <summary>
        /// Test GetAuthJwtOidcCallback
        /// </summary>
        [Fact]
        public void GetAuthJwtOidcCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthJwtOidcCallback();
        }

        /// <summary>
        /// Test GetAuthJwtRole
        /// </summary>
        [Fact]
        public void GetAuthJwtRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthJwtRole(list);
        }

        /// <summary>
        /// Test GetAuthJwtRoleName
        /// </summary>
        [Fact]
        public void GetAuthJwtRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthJwtRoleName(name);
        }

        /// <summary>
        /// Test GetAuthKerberosConfig
        /// </summary>
        [Fact]
        public void GetAuthKerberosConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthKerberosConfig();
        }

        /// <summary>
        /// Test GetAuthKerberosConfigLdap
        /// </summary>
        [Fact]
        public void GetAuthKerberosConfigLdapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthKerberosConfigLdap();
        }

        /// <summary>
        /// Test GetAuthKerberosGroups
        /// </summary>
        [Fact]
        public void GetAuthKerberosGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthKerberosGroups(list);
        }

        /// <summary>
        /// Test GetAuthKerberosGroupsName
        /// </summary>
        [Fact]
        public void GetAuthKerberosGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthKerberosGroupsName(name);
        }

        /// <summary>
        /// Test GetAuthKerberosLogin
        /// </summary>
        [Fact]
        public void GetAuthKerberosLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthKerberosLogin();
        }

        /// <summary>
        /// Test GetAuthKubernetesConfig
        /// </summary>
        [Fact]
        public void GetAuthKubernetesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthKubernetesConfig();
        }

        /// <summary>
        /// Test GetAuthKubernetesRole
        /// </summary>
        [Fact]
        public void GetAuthKubernetesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthKubernetesRole(list);
        }

        /// <summary>
        /// Test GetAuthKubernetesRoleName
        /// </summary>
        [Fact]
        public void GetAuthKubernetesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthKubernetesRoleName(name);
        }

        /// <summary>
        /// Test GetAuthLdapConfig
        /// </summary>
        [Fact]
        public void GetAuthLdapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthLdapConfig();
        }

        /// <summary>
        /// Test GetAuthLdapGroups
        /// </summary>
        [Fact]
        public void GetAuthLdapGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthLdapGroups(list);
        }

        /// <summary>
        /// Test GetAuthLdapGroupsName
        /// </summary>
        [Fact]
        public void GetAuthLdapGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthLdapGroupsName(name);
        }

        /// <summary>
        /// Test GetAuthLdapUsers
        /// </summary>
        [Fact]
        public void GetAuthLdapUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthLdapUsers(list);
        }

        /// <summary>
        /// Test GetAuthLdapUsersName
        /// </summary>
        [Fact]
        public void GetAuthLdapUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthLdapUsersName(name);
        }

        /// <summary>
        /// Test GetAuthOciConfig
        /// </summary>
        [Fact]
        public void GetAuthOciConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthOciConfig();
        }

        /// <summary>
        /// Test GetAuthOciRole
        /// </summary>
        [Fact]
        public void GetAuthOciRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthOciRole(list);
        }

        /// <summary>
        /// Test GetAuthOciRoleRole
        /// </summary>
        [Fact]
        public void GetAuthOciRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //instance.GetAuthOciRoleRole(role);
        }

        /// <summary>
        /// Test GetAuthOidcConfig
        /// </summary>
        [Fact]
        public void GetAuthOidcConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthOidcConfig();
        }

        /// <summary>
        /// Test GetAuthOidcOidcCallback
        /// </summary>
        [Fact]
        public void GetAuthOidcOidcCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthOidcOidcCallback();
        }

        /// <summary>
        /// Test GetAuthOidcRole
        /// </summary>
        [Fact]
        public void GetAuthOidcRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthOidcRole(list);
        }

        /// <summary>
        /// Test GetAuthOidcRoleName
        /// </summary>
        [Fact]
        public void GetAuthOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthOidcRoleName(name);
        }

        /// <summary>
        /// Test GetAuthOktaConfig
        /// </summary>
        [Fact]
        public void GetAuthOktaConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthOktaConfig();
        }

        /// <summary>
        /// Test GetAuthOktaGroups
        /// </summary>
        [Fact]
        public void GetAuthOktaGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthOktaGroups(list);
        }

        /// <summary>
        /// Test GetAuthOktaGroupsName
        /// </summary>
        [Fact]
        public void GetAuthOktaGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthOktaGroupsName(name);
        }

        /// <summary>
        /// Test GetAuthOktaUsers
        /// </summary>
        [Fact]
        public void GetAuthOktaUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthOktaUsers(list);
        }

        /// <summary>
        /// Test GetAuthOktaUsersName
        /// </summary>
        [Fact]
        public void GetAuthOktaUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthOktaUsersName(name);
        }

        /// <summary>
        /// Test GetAuthOktaVerifyNonce
        /// </summary>
        [Fact]
        public void GetAuthOktaVerifyNonceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nonce = null;
            //instance.GetAuthOktaVerifyNonce(nonce);
        }

        /// <summary>
        /// Test GetAuthRadiusConfig
        /// </summary>
        [Fact]
        public void GetAuthRadiusConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthRadiusConfig();
        }

        /// <summary>
        /// Test GetAuthRadiusUsers
        /// </summary>
        [Fact]
        public void GetAuthRadiusUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthRadiusUsers(list);
        }

        /// <summary>
        /// Test GetAuthRadiusUsersName
        /// </summary>
        [Fact]
        public void GetAuthRadiusUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetAuthRadiusUsersName(name);
        }

        /// <summary>
        /// Test GetAuthTokenAccessors
        /// </summary>
        [Fact]
        public void GetAuthTokenAccessorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthTokenAccessors(list);
        }

        /// <summary>
        /// Test GetAuthTokenLookup
        /// </summary>
        [Fact]
        public void GetAuthTokenLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthTokenLookup();
        }

        /// <summary>
        /// Test GetAuthTokenLookupSelf
        /// </summary>
        [Fact]
        public void GetAuthTokenLookupSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetAuthTokenLookupSelf();
        }

        /// <summary>
        /// Test GetAuthTokenRoles
        /// </summary>
        [Fact]
        public void GetAuthTokenRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthTokenRoles(list);
        }

        /// <summary>
        /// Test GetAuthTokenRolesRoleName
        /// </summary>
        [Fact]
        public void GetAuthTokenRolesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.GetAuthTokenRolesRoleName(roleName);
        }

        /// <summary>
        /// Test GetAuthUserpassUsers
        /// </summary>
        [Fact]
        public void GetAuthUserpassUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetAuthUserpassUsers(list);
        }

        /// <summary>
        /// Test GetAuthUserpassUsersUsername
        /// </summary>
        [Fact]
        public void GetAuthUserpassUsersUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //instance.GetAuthUserpassUsersUsername(username);
        }

        /// <summary>
        /// Test PostAuthAlicloudLogin
        /// </summary>
        [Fact]
        public void PostAuthAlicloudLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlicloudLoginRequest alicloudLoginRequest = null;
            //instance.PostAuthAlicloudLogin(alicloudLoginRequest);
        }

        /// <summary>
        /// Test PostAuthAlicloudRoleRole
        /// </summary>
        [Fact]
        public void PostAuthAlicloudRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //AlicloudRoleRequest alicloudRoleRequest = null;
            //instance.PostAuthAlicloudRoleRole(role, alicloudRoleRequest);
        }

        /// <summary>
        /// Test PostAuthAppIdLogin
        /// </summary>
        [Fact]
        public void PostAuthAppIdLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppIdLoginRequest appIdLoginRequest = null;
            //instance.PostAuthAppIdLogin(appIdLoginRequest);
        }

        /// <summary>
        /// Test PostAuthAppIdLoginAppId
        /// </summary>
        [Fact]
        public void PostAuthAppIdLoginAppIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string appId = null;
            //AppIdLoginRequest appIdLoginRequest = null;
            //instance.PostAuthAppIdLoginAppId(appId, appIdLoginRequest);
        }

        /// <summary>
        /// Test PostAuthAppIdMapAppIdKey
        /// </summary>
        [Fact]
        public void PostAuthAppIdMapAppIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //AppIdMapAppIdRequest appIdMapAppIdRequest = null;
            //instance.PostAuthAppIdMapAppIdKey(key, appIdMapAppIdRequest);
        }

        /// <summary>
        /// Test PostAuthAppIdMapUserIdKey
        /// </summary>
        [Fact]
        public void PostAuthAppIdMapUserIdKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //AppIdMapUserIdRequest appIdMapUserIdRequest = null;
            //instance.PostAuthAppIdMapUserIdKey(key, appIdMapUserIdRequest);
        }

        /// <summary>
        /// Test PostAuthApproleLogin
        /// </summary>
        [Fact]
        public void PostAuthApproleLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApproleLoginRequest approleLoginRequest = null;
            //instance.PostAuthApproleLogin(approleLoginRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleName
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleRequest approleRoleRequest = null;
            //instance.PostAuthApproleRoleRoleName(roleName, approleRoleRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameBindSecretId
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameBindSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleBindSecretIdRequest approleRoleBindSecretIdRequest = null;
            //instance.PostAuthApproleRoleRoleNameBindSecretId(roleName, approleRoleBindSecretIdRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameBoundCidrList
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameBoundCidrListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleBoundCidrListRequest approleRoleBoundCidrListRequest = null;
            //instance.PostAuthApproleRoleRoleNameBoundCidrList(roleName, approleRoleBoundCidrListRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameCustomSecretId
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameCustomSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleCustomSecretIdRequest approleRoleCustomSecretIdRequest = null;
            //instance.PostAuthApproleRoleRoleNameCustomSecretId(roleName, approleRoleCustomSecretIdRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNamePeriod
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNamePeriodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRolePeriodRequest approleRolePeriodRequest = null;
            //instance.PostAuthApproleRoleRoleNamePeriod(roleName, approleRolePeriodRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNamePolicies
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNamePoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRolePoliciesRequest approleRolePoliciesRequest = null;
            //instance.PostAuthApproleRoleRoleNamePolicies(roleName, approleRolePoliciesRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameRoleId
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameRoleIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleRoleIdRequest approleRoleRoleIdRequest = null;
            //instance.PostAuthApproleRoleRoleNameRoleId(roleName, approleRoleRoleIdRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretId
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdRequest approleRoleSecretIdRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretId(roleName, approleRoleSecretIdRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdAccessorDestroy
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdAccessorDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdAccessorDestroyRequest approleRoleSecretIdAccessorDestroyRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdAccessorDestroy(roleName, approleRoleSecretIdAccessorDestroyRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdAccessorLookup
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdAccessorLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdAccessorLookupRequest approleRoleSecretIdAccessorLookupRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdAccessorLookup(roleName, approleRoleSecretIdAccessorLookupRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdBoundCidrs
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdBoundCidrsRequest approleRoleSecretIdBoundCidrsRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdBoundCidrs(roleName, approleRoleSecretIdBoundCidrsRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdDestroy
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdDestroyRequest approleRoleSecretIdDestroyRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdDestroy(roleName, approleRoleSecretIdDestroyRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdLookup
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdLookupRequest approleRoleSecretIdLookupRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdLookup(roleName, approleRoleSecretIdLookupRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdNumUses
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdNumUsesRequest approleRoleSecretIdNumUsesRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdNumUses(roleName, approleRoleSecretIdNumUsesRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameSecretIdTtl
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameSecretIdTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleSecretIdTtlRequest approleRoleSecretIdTtlRequest = null;
            //instance.PostAuthApproleRoleRoleNameSecretIdTtl(roleName, approleRoleSecretIdTtlRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameTokenBoundCidrs
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameTokenBoundCidrsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleTokenBoundCidrsRequest approleRoleTokenBoundCidrsRequest = null;
            //instance.PostAuthApproleRoleRoleNameTokenBoundCidrs(roleName, approleRoleTokenBoundCidrsRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameTokenMaxTtl
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameTokenMaxTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleTokenMaxTtlRequest approleRoleTokenMaxTtlRequest = null;
            //instance.PostAuthApproleRoleRoleNameTokenMaxTtl(roleName, approleRoleTokenMaxTtlRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameTokenNumUses
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameTokenNumUsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleTokenNumUsesRequest approleRoleTokenNumUsesRequest = null;
            //instance.PostAuthApproleRoleRoleNameTokenNumUses(roleName, approleRoleTokenNumUsesRequest);
        }

        /// <summary>
        /// Test PostAuthApproleRoleRoleNameTokenTtl
        /// </summary>
        [Fact]
        public void PostAuthApproleRoleRoleNameTokenTtlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //ApproleRoleTokenTtlRequest approleRoleTokenTtlRequest = null;
            //instance.PostAuthApproleRoleRoleNameTokenTtl(roleName, approleRoleTokenTtlRequest);
        }

        /// <summary>
        /// Test PostAuthApproleTidySecretId
        /// </summary>
        [Fact]
        public void PostAuthApproleTidySecretIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthApproleTidySecretId();
        }

        /// <summary>
        /// Test PostAuthAwsConfigCertificateCertName
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigCertificateCertNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string certName = null;
            //AwsConfigCertificateRequest awsConfigCertificateRequest = null;
            //instance.PostAuthAwsConfigCertificateCertName(certName, awsConfigCertificateRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigClient
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigClientRequest awsConfigClientRequest = null;
            //instance.PostAuthAwsConfigClient(awsConfigClientRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigIdentity
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigIdentityRequest awsConfigIdentityRequest = null;
            //instance.PostAuthAwsConfigIdentity(awsConfigIdentityRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigRotateRoot
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigRotateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthAwsConfigRotateRoot();
        }

        /// <summary>
        /// Test PostAuthAwsConfigStsAccountId
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigStsAccountIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accountId = null;
            //AwsConfigStsRequest awsConfigStsRequest = null;
            //instance.PostAuthAwsConfigStsAccountId(accountId, awsConfigStsRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigTidyIdentityAccesslist
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigTidyIdentityAccesslistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigTidyIdentityAccesslistRequest awsConfigTidyIdentityAccesslistRequest = null;
            //instance.PostAuthAwsConfigTidyIdentityAccesslist(awsConfigTidyIdentityAccesslistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigTidyIdentityWhitelist
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigTidyIdentityWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigTidyIdentityWhitelistRequest awsConfigTidyIdentityWhitelistRequest = null;
            //instance.PostAuthAwsConfigTidyIdentityWhitelist(awsConfigTidyIdentityWhitelistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigTidyRoletagBlacklist
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigTidyRoletagBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigTidyRoletagBlacklistRequest awsConfigTidyRoletagBlacklistRequest = null;
            //instance.PostAuthAwsConfigTidyRoletagBlacklist(awsConfigTidyRoletagBlacklistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsConfigTidyRoletagDenylist
        /// </summary>
        [Fact]
        public void PostAuthAwsConfigTidyRoletagDenylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsConfigTidyRoletagDenylistRequest awsConfigTidyRoletagDenylistRequest = null;
            //instance.PostAuthAwsConfigTidyRoletagDenylist(awsConfigTidyRoletagDenylistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsLogin
        /// </summary>
        [Fact]
        public void PostAuthAwsLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsLoginRequest awsLoginRequest = null;
            //instance.PostAuthAwsLogin(awsLoginRequest);
        }

        /// <summary>
        /// Test PostAuthAwsRoleRole
        /// </summary>
        [Fact]
        public void PostAuthAwsRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //AwsRoleRequest awsRoleRequest = null;
            //instance.PostAuthAwsRoleRole(role, awsRoleRequest);
        }

        /// <summary>
        /// Test PostAuthAwsRoleRoleTag
        /// </summary>
        [Fact]
        public void PostAuthAwsRoleRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //AwsRoleTagRequest awsRoleTagRequest = null;
            //instance.PostAuthAwsRoleRoleTag(role, awsRoleTagRequest);
        }

        /// <summary>
        /// Test PostAuthAwsRoletagBlacklistRoleTag
        /// </summary>
        [Fact]
        public void PostAuthAwsRoletagBlacklistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.PostAuthAwsRoletagBlacklistRoleTag(roleTag);
        }

        /// <summary>
        /// Test PostAuthAwsRoletagDenylistRoleTag
        /// </summary>
        [Fact]
        public void PostAuthAwsRoletagDenylistRoleTagTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleTag = null;
            //instance.PostAuthAwsRoletagDenylistRoleTag(roleTag);
        }

        /// <summary>
        /// Test PostAuthAwsTidyIdentityAccesslist
        /// </summary>
        [Fact]
        public void PostAuthAwsTidyIdentityAccesslistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsTidyIdentityAccesslistRequest awsTidyIdentityAccesslistRequest = null;
            //instance.PostAuthAwsTidyIdentityAccesslist(awsTidyIdentityAccesslistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsTidyIdentityWhitelist
        /// </summary>
        [Fact]
        public void PostAuthAwsTidyIdentityWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsTidyIdentityWhitelistRequest awsTidyIdentityWhitelistRequest = null;
            //instance.PostAuthAwsTidyIdentityWhitelist(awsTidyIdentityWhitelistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsTidyRoletagBlacklist
        /// </summary>
        [Fact]
        public void PostAuthAwsTidyRoletagBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsTidyRoletagBlacklistRequest awsTidyRoletagBlacklistRequest = null;
            //instance.PostAuthAwsTidyRoletagBlacklist(awsTidyRoletagBlacklistRequest);
        }

        /// <summary>
        /// Test PostAuthAwsTidyRoletagDenylist
        /// </summary>
        [Fact]
        public void PostAuthAwsTidyRoletagDenylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AwsTidyRoletagDenylistRequest awsTidyRoletagDenylistRequest = null;
            //instance.PostAuthAwsTidyRoletagDenylist(awsTidyRoletagDenylistRequest);
        }

        /// <summary>
        /// Test PostAuthAzureConfig
        /// </summary>
        [Fact]
        public void PostAuthAzureConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AzureConfigRequest azureConfigRequest = null;
            //instance.PostAuthAzureConfig(azureConfigRequest);
        }

        /// <summary>
        /// Test PostAuthAzureLogin
        /// </summary>
        [Fact]
        public void PostAuthAzureLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AzureLoginRequest azureLoginRequest = null;
            //instance.PostAuthAzureLogin(azureLoginRequest);
        }

        /// <summary>
        /// Test PostAuthAzureRoleName
        /// </summary>
        [Fact]
        public void PostAuthAzureRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //AzureRoleRequest azureRoleRequest = null;
            //instance.PostAuthAzureRoleName(name, azureRoleRequest);
        }

        /// <summary>
        /// Test PostAuthCentrifyConfig
        /// </summary>
        [Fact]
        public void PostAuthCentrifyConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CentrifyConfigRequest centrifyConfigRequest = null;
            //instance.PostAuthCentrifyConfig(centrifyConfigRequest);
        }

        /// <summary>
        /// Test PostAuthCentrifyLogin
        /// </summary>
        [Fact]
        public void PostAuthCentrifyLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CentrifyLoginRequest centrifyLoginRequest = null;
            //instance.PostAuthCentrifyLogin(centrifyLoginRequest);
        }

        /// <summary>
        /// Test PostAuthCertCertsName
        /// </summary>
        [Fact]
        public void PostAuthCertCertsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //CertCertsRequest certCertsRequest = null;
            //instance.PostAuthCertCertsName(name, certCertsRequest);
        }

        /// <summary>
        /// Test PostAuthCertConfig
        /// </summary>
        [Fact]
        public void PostAuthCertConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CertConfigRequest certConfigRequest = null;
            //instance.PostAuthCertConfig(certConfigRequest);
        }

        /// <summary>
        /// Test PostAuthCertCrlsName
        /// </summary>
        [Fact]
        public void PostAuthCertCrlsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //CertCrlsRequest certCrlsRequest = null;
            //instance.PostAuthCertCrlsName(name, certCrlsRequest);
        }

        /// <summary>
        /// Test PostAuthCertLogin
        /// </summary>
        [Fact]
        public void PostAuthCertLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CertLoginRequest certLoginRequest = null;
            //instance.PostAuthCertLogin(certLoginRequest);
        }

        /// <summary>
        /// Test PostAuthCfConfig
        /// </summary>
        [Fact]
        public void PostAuthCfConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CfConfigRequest cfConfigRequest = null;
            //instance.PostAuthCfConfig(cfConfigRequest);
        }

        /// <summary>
        /// Test PostAuthCfLogin
        /// </summary>
        [Fact]
        public void PostAuthCfLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CfLoginRequest cfLoginRequest = null;
            //instance.PostAuthCfLogin(cfLoginRequest);
        }

        /// <summary>
        /// Test PostAuthCfRolesRole
        /// </summary>
        [Fact]
        public void PostAuthCfRolesRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //CfRolesRequest cfRolesRequest = null;
            //instance.PostAuthCfRolesRole(role, cfRolesRequest);
        }

        /// <summary>
        /// Test PostAuthGcpConfig
        /// </summary>
        [Fact]
        public void PostAuthGcpConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GcpConfigRequest gcpConfigRequest = null;
            //instance.PostAuthGcpConfig(gcpConfigRequest);
        }

        /// <summary>
        /// Test PostAuthGcpLogin
        /// </summary>
        [Fact]
        public void PostAuthGcpLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GcpLoginRequest gcpLoginRequest = null;
            //instance.PostAuthGcpLogin(gcpLoginRequest);
        }

        /// <summary>
        /// Test PostAuthGcpRoleName
        /// </summary>
        [Fact]
        public void PostAuthGcpRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpRoleRequest gcpRoleRequest = null;
            //instance.PostAuthGcpRoleName(name, gcpRoleRequest);
        }

        /// <summary>
        /// Test PostAuthGcpRoleNameLabels
        /// </summary>
        [Fact]
        public void PostAuthGcpRoleNameLabelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpRoleLabelsRequest gcpRoleLabelsRequest = null;
            //instance.PostAuthGcpRoleNameLabels(name, gcpRoleLabelsRequest);
        }

        /// <summary>
        /// Test PostAuthGcpRoleNameServiceAccounts
        /// </summary>
        [Fact]
        public void PostAuthGcpRoleNameServiceAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //GcpRoleServiceAccountsRequest gcpRoleServiceAccountsRequest = null;
            //instance.PostAuthGcpRoleNameServiceAccounts(name, gcpRoleServiceAccountsRequest);
        }

        /// <summary>
        /// Test PostAuthGithubConfig
        /// </summary>
        [Fact]
        public void PostAuthGithubConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GithubConfigRequest githubConfigRequest = null;
            //instance.PostAuthGithubConfig(githubConfigRequest);
        }

        /// <summary>
        /// Test PostAuthGithubLogin
        /// </summary>
        [Fact]
        public void PostAuthGithubLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GithubLoginRequest githubLoginRequest = null;
            //instance.PostAuthGithubLogin(githubLoginRequest);
        }

        /// <summary>
        /// Test PostAuthGithubMapTeamsKey
        /// </summary>
        [Fact]
        public void PostAuthGithubMapTeamsKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GithubMapTeamsRequest githubMapTeamsRequest = null;
            //instance.PostAuthGithubMapTeamsKey(key, githubMapTeamsRequest);
        }

        /// <summary>
        /// Test PostAuthGithubMapUsersKey
        /// </summary>
        [Fact]
        public void PostAuthGithubMapUsersKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //GithubMapUsersRequest githubMapUsersRequest = null;
            //instance.PostAuthGithubMapUsersKey(key, githubMapUsersRequest);
        }

        /// <summary>
        /// Test PostAuthJwtConfig
        /// </summary>
        [Fact]
        public void PostAuthJwtConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JwtConfigRequest jwtConfigRequest = null;
            //instance.PostAuthJwtConfig(jwtConfigRequest);
        }

        /// <summary>
        /// Test PostAuthJwtLogin
        /// </summary>
        [Fact]
        public void PostAuthJwtLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JwtLoginRequest jwtLoginRequest = null;
            //instance.PostAuthJwtLogin(jwtLoginRequest);
        }

        /// <summary>
        /// Test PostAuthJwtOidcAuthUrl
        /// </summary>
        [Fact]
        public void PostAuthJwtOidcAuthUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JwtOidcAuthUrlRequest jwtOidcAuthUrlRequest = null;
            //instance.PostAuthJwtOidcAuthUrl(jwtOidcAuthUrlRequest);
        }

        /// <summary>
        /// Test PostAuthJwtOidcCallback
        /// </summary>
        [Fact]
        public void PostAuthJwtOidcCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //JwtOidcCallbackRequest jwtOidcCallbackRequest = null;
            //instance.PostAuthJwtOidcCallback(jwtOidcCallbackRequest);
        }

        /// <summary>
        /// Test PostAuthJwtRoleName
        /// </summary>
        [Fact]
        public void PostAuthJwtRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //JwtRoleRequest jwtRoleRequest = null;
            //instance.PostAuthJwtRoleName(name, jwtRoleRequest);
        }

        /// <summary>
        /// Test PostAuthKerberosConfig
        /// </summary>
        [Fact]
        public void PostAuthKerberosConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KerberosConfigRequest kerberosConfigRequest = null;
            //instance.PostAuthKerberosConfig(kerberosConfigRequest);
        }

        /// <summary>
        /// Test PostAuthKerberosConfigLdap
        /// </summary>
        [Fact]
        public void PostAuthKerberosConfigLdapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KerberosConfigLdapRequest kerberosConfigLdapRequest = null;
            //instance.PostAuthKerberosConfigLdap(kerberosConfigLdapRequest);
        }

        /// <summary>
        /// Test PostAuthKerberosGroupsName
        /// </summary>
        [Fact]
        public void PostAuthKerberosGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //KerberosGroupsRequest kerberosGroupsRequest = null;
            //instance.PostAuthKerberosGroupsName(name, kerberosGroupsRequest);
        }

        /// <summary>
        /// Test PostAuthKerberosLogin
        /// </summary>
        [Fact]
        public void PostAuthKerberosLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KerberosLoginRequest kerberosLoginRequest = null;
            //instance.PostAuthKerberosLogin(kerberosLoginRequest);
        }

        /// <summary>
        /// Test PostAuthKubernetesConfig
        /// </summary>
        [Fact]
        public void PostAuthKubernetesConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KubernetesConfigRequest kubernetesConfigRequest = null;
            //instance.PostAuthKubernetesConfig(kubernetesConfigRequest);
        }

        /// <summary>
        /// Test PostAuthKubernetesLogin
        /// </summary>
        [Fact]
        public void PostAuthKubernetesLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //KubernetesLoginRequest kubernetesLoginRequest = null;
            //instance.PostAuthKubernetesLogin(kubernetesLoginRequest);
        }

        /// <summary>
        /// Test PostAuthKubernetesRoleName
        /// </summary>
        [Fact]
        public void PostAuthKubernetesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //KubernetesRoleRequest kubernetesRoleRequest = null;
            //instance.PostAuthKubernetesRoleName(name, kubernetesRoleRequest);
        }

        /// <summary>
        /// Test PostAuthLdapConfig
        /// </summary>
        [Fact]
        public void PostAuthLdapConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LdapConfigRequest ldapConfigRequest = null;
            //instance.PostAuthLdapConfig(ldapConfigRequest);
        }

        /// <summary>
        /// Test PostAuthLdapGroupsName
        /// </summary>
        [Fact]
        public void PostAuthLdapGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapGroupsRequest ldapGroupsRequest = null;
            //instance.PostAuthLdapGroupsName(name, ldapGroupsRequest);
        }

        /// <summary>
        /// Test PostAuthLdapLoginUsername
        /// </summary>
        [Fact]
        public void PostAuthLdapLoginUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //LdapLoginRequest ldapLoginRequest = null;
            //instance.PostAuthLdapLoginUsername(username, ldapLoginRequest);
        }

        /// <summary>
        /// Test PostAuthLdapUsersName
        /// </summary>
        [Fact]
        public void PostAuthLdapUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //LdapUsersRequest ldapUsersRequest = null;
            //instance.PostAuthLdapUsersName(name, ldapUsersRequest);
        }

        /// <summary>
        /// Test PostAuthOciConfig
        /// </summary>
        [Fact]
        public void PostAuthOciConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OciConfigRequest ociConfigRequest = null;
            //instance.PostAuthOciConfig(ociConfigRequest);
        }

        /// <summary>
        /// Test PostAuthOciLoginRole
        /// </summary>
        [Fact]
        public void PostAuthOciLoginRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //OciLoginRequest ociLoginRequest = null;
            //instance.PostAuthOciLoginRole(role, ociLoginRequest);
        }

        /// <summary>
        /// Test PostAuthOciRoleRole
        /// </summary>
        [Fact]
        public void PostAuthOciRoleRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string role = null;
            //OciRoleRequest ociRoleRequest = null;
            //instance.PostAuthOciRoleRole(role, ociRoleRequest);
        }

        /// <summary>
        /// Test PostAuthOidcConfig
        /// </summary>
        [Fact]
        public void PostAuthOidcConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OidcConfigRequest oidcConfigRequest = null;
            //instance.PostAuthOidcConfig(oidcConfigRequest);
        }

        /// <summary>
        /// Test PostAuthOidcLogin
        /// </summary>
        [Fact]
        public void PostAuthOidcLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OidcLoginRequest oidcLoginRequest = null;
            //instance.PostAuthOidcLogin(oidcLoginRequest);
        }

        /// <summary>
        /// Test PostAuthOidcOidcAuthUrl
        /// </summary>
        [Fact]
        public void PostAuthOidcOidcAuthUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OidcOidcAuthUrlRequest oidcOidcAuthUrlRequest = null;
            //instance.PostAuthOidcOidcAuthUrl(oidcOidcAuthUrlRequest);
        }

        /// <summary>
        /// Test PostAuthOidcOidcCallback
        /// </summary>
        [Fact]
        public void PostAuthOidcOidcCallbackTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OidcOidcCallbackRequest oidcOidcCallbackRequest = null;
            //instance.PostAuthOidcOidcCallback(oidcOidcCallbackRequest);
        }

        /// <summary>
        /// Test PostAuthOidcRoleName
        /// </summary>
        [Fact]
        public void PostAuthOidcRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OidcRoleRequest oidcRoleRequest = null;
            //instance.PostAuthOidcRoleName(name, oidcRoleRequest);
        }

        /// <summary>
        /// Test PostAuthOktaConfig
        /// </summary>
        [Fact]
        public void PostAuthOktaConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OktaConfigRequest oktaConfigRequest = null;
            //instance.PostAuthOktaConfig(oktaConfigRequest);
        }

        /// <summary>
        /// Test PostAuthOktaGroupsName
        /// </summary>
        [Fact]
        public void PostAuthOktaGroupsNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OktaGroupsRequest oktaGroupsRequest = null;
            //instance.PostAuthOktaGroupsName(name, oktaGroupsRequest);
        }

        /// <summary>
        /// Test PostAuthOktaLoginUsername
        /// </summary>
        [Fact]
        public void PostAuthOktaLoginUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //OktaLoginRequest oktaLoginRequest = null;
            //instance.PostAuthOktaLoginUsername(username, oktaLoginRequest);
        }

        /// <summary>
        /// Test PostAuthOktaUsersName
        /// </summary>
        [Fact]
        public void PostAuthOktaUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //OktaUsersRequest oktaUsersRequest = null;
            //instance.PostAuthOktaUsersName(name, oktaUsersRequest);
        }

        /// <summary>
        /// Test PostAuthRadiusConfig
        /// </summary>
        [Fact]
        public void PostAuthRadiusConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RadiusConfigRequest radiusConfigRequest = null;
            //instance.PostAuthRadiusConfig(radiusConfigRequest);
        }

        /// <summary>
        /// Test PostAuthRadiusLogin
        /// </summary>
        [Fact]
        public void PostAuthRadiusLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RadiusLoginRequest radiusLoginRequest = null;
            //instance.PostAuthRadiusLogin(radiusLoginRequest);
        }

        /// <summary>
        /// Test PostAuthRadiusLoginUrlusername
        /// </summary>
        [Fact]
        public void PostAuthRadiusLoginUrlusernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlusername = null;
            //RadiusLoginRequest radiusLoginRequest = null;
            //instance.PostAuthRadiusLoginUrlusername(urlusername, radiusLoginRequest);
        }

        /// <summary>
        /// Test PostAuthRadiusUsersName
        /// </summary>
        [Fact]
        public void PostAuthRadiusUsersNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //RadiusUsersRequest radiusUsersRequest = null;
            //instance.PostAuthRadiusUsersName(name, radiusUsersRequest);
        }

        /// <summary>
        /// Test PostAuthTokenCreate
        /// </summary>
        [Fact]
        public void PostAuthTokenCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthTokenCreate();
        }

        /// <summary>
        /// Test PostAuthTokenCreateOrphan
        /// </summary>
        [Fact]
        public void PostAuthTokenCreateOrphanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthTokenCreateOrphan();
        }

        /// <summary>
        /// Test PostAuthTokenCreateRoleName
        /// </summary>
        [Fact]
        public void PostAuthTokenCreateRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //instance.PostAuthTokenCreateRoleName(roleName);
        }

        /// <summary>
        /// Test PostAuthTokenLookup
        /// </summary>
        [Fact]
        public void PostAuthTokenLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenLookupRequest tokenLookupRequest = null;
            //instance.PostAuthTokenLookup(tokenLookupRequest);
        }

        /// <summary>
        /// Test PostAuthTokenLookupAccessor
        /// </summary>
        [Fact]
        public void PostAuthTokenLookupAccessorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenLookupAccessorRequest tokenLookupAccessorRequest = null;
            //instance.PostAuthTokenLookupAccessor(tokenLookupAccessorRequest);
        }

        /// <summary>
        /// Test PostAuthTokenLookupSelf
        /// </summary>
        [Fact]
        public void PostAuthTokenLookupSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenLookupSelfRequest tokenLookupSelfRequest = null;
            //instance.PostAuthTokenLookupSelf(tokenLookupSelfRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRenew
        /// </summary>
        [Fact]
        public void PostAuthTokenRenewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRenewRequest tokenRenewRequest = null;
            //instance.PostAuthTokenRenew(tokenRenewRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRenewAccessor
        /// </summary>
        [Fact]
        public void PostAuthTokenRenewAccessorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRenewAccessorRequest tokenRenewAccessorRequest = null;
            //instance.PostAuthTokenRenewAccessor(tokenRenewAccessorRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRenewSelf
        /// </summary>
        [Fact]
        public void PostAuthTokenRenewSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRenewSelfRequest tokenRenewSelfRequest = null;
            //instance.PostAuthTokenRenewSelf(tokenRenewSelfRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRevoke
        /// </summary>
        [Fact]
        public void PostAuthTokenRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRevokeRequest tokenRevokeRequest = null;
            //instance.PostAuthTokenRevoke(tokenRevokeRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRevokeAccessor
        /// </summary>
        [Fact]
        public void PostAuthTokenRevokeAccessorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRevokeAccessorRequest tokenRevokeAccessorRequest = null;
            //instance.PostAuthTokenRevokeAccessor(tokenRevokeAccessorRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRevokeOrphan
        /// </summary>
        [Fact]
        public void PostAuthTokenRevokeOrphanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRevokeOrphanRequest tokenRevokeOrphanRequest = null;
            //instance.PostAuthTokenRevokeOrphan(tokenRevokeOrphanRequest);
        }

        /// <summary>
        /// Test PostAuthTokenRevokeSelf
        /// </summary>
        [Fact]
        public void PostAuthTokenRevokeSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthTokenRevokeSelf();
        }

        /// <summary>
        /// Test PostAuthTokenRolesRoleName
        /// </summary>
        [Fact]
        public void PostAuthTokenRolesRoleNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string roleName = null;
            //TokenRolesRequest tokenRolesRequest = null;
            //instance.PostAuthTokenRolesRoleName(roleName, tokenRolesRequest);
        }

        /// <summary>
        /// Test PostAuthTokenTidy
        /// </summary>
        [Fact]
        public void PostAuthTokenTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostAuthTokenTidy();
        }

        /// <summary>
        /// Test PostAuthUserpassLoginUsername
        /// </summary>
        [Fact]
        public void PostAuthUserpassLoginUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //UserpassLoginRequest userpassLoginRequest = null;
            //instance.PostAuthUserpassLoginUsername(username, userpassLoginRequest);
        }

        /// <summary>
        /// Test PostAuthUserpassUsersUsername
        /// </summary>
        [Fact]
        public void PostAuthUserpassUsersUsernameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //UserpassUsersRequest userpassUsersRequest = null;
            //instance.PostAuthUserpassUsersUsername(username, userpassUsersRequest);
        }

        /// <summary>
        /// Test PostAuthUserpassUsersUsernamePassword
        /// </summary>
        [Fact]
        public void PostAuthUserpassUsersUsernamePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //UserpassUsersPasswordRequest userpassUsersPasswordRequest = null;
            //instance.PostAuthUserpassUsersUsernamePassword(username, userpassUsersPasswordRequest);
        }

        /// <summary>
        /// Test PostAuthUserpassUsersUsernamePolicies
        /// </summary>
        [Fact]
        public void PostAuthUserpassUsersUsernamePoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string username = null;
            //UserpassUsersPoliciesRequest userpassUsersPoliciesRequest = null;
            //instance.PostAuthUserpassUsersUsernamePolicies(username, userpassUsersPoliciesRequest);
        }
    }
}
