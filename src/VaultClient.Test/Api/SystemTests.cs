/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.12.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using VaultClient.Client;
using VaultClient.Api;
// uncomment below to import models
//using VaultClient.Model;

namespace VaultClient.Test.Api
{
    /// <summary>
    ///  Class for testing System
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SystemTests : IDisposable
    {
        private VaultClient.Api.System instance;

        public SystemTests()
        {
            instance = new VaultClient.Api.System();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of System
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' System
            //Assert.IsType<System>(instance);
        }

        /// <summary>
        /// Test DeleteSysAuditPath
        /// </summary>
        [Fact]
        public void DeleteSysAuditPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSysAuditPath(path);
        }

        /// <summary>
        /// Test DeleteSysAuthPath
        /// </summary>
        [Fact]
        public void DeleteSysAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSysAuthPath(path);
        }

        /// <summary>
        /// Test DeleteSysConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void DeleteSysConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.DeleteSysConfigAuditingRequestHeadersHeader(header);
        }

        /// <summary>
        /// Test DeleteSysConfigCors
        /// </summary>
        [Fact]
        public void DeleteSysConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysConfigCors();
        }

        /// <summary>
        /// Test DeleteSysConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void DeleteSysConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.DeleteSysConfigUiHeadersHeader(header);
        }

        /// <summary>
        /// Test DeleteSysGenerateRoot
        /// </summary>
        [Fact]
        public void DeleteSysGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysGenerateRoot();
        }

        /// <summary>
        /// Test DeleteSysGenerateRootAttempt
        /// </summary>
        [Fact]
        public void DeleteSysGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysGenerateRootAttempt();
        }

        /// <summary>
        /// Test DeleteSysMountsPath
        /// </summary>
        [Fact]
        public void DeleteSysMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSysMountsPath(path);
        }

        /// <summary>
        /// Test DeleteSysPluginsCatalogName
        /// </summary>
        [Fact]
        public void DeleteSysPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSysPluginsCatalogName(name);
        }

        /// <summary>
        /// Test DeleteSysPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void DeleteSysPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //instance.DeleteSysPluginsCatalogTypeName(name, type);
        }

        /// <summary>
        /// Test DeleteSysPoliciesAclName
        /// </summary>
        [Fact]
        public void DeleteSysPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSysPoliciesAclName(name);
        }

        /// <summary>
        /// Test DeleteSysPoliciesPasswordName
        /// </summary>
        [Fact]
        public void DeleteSysPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSysPoliciesPasswordName(name);
        }

        /// <summary>
        /// Test DeleteSysPolicyName
        /// </summary>
        [Fact]
        public void DeleteSysPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSysPolicyName(name);
        }

        /// <summary>
        /// Test DeleteSysQuotasRateLimitName
        /// </summary>
        [Fact]
        public void DeleteSysQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.DeleteSysQuotasRateLimitName(name);
        }

        /// <summary>
        /// Test DeleteSysRaw
        /// </summary>
        [Fact]
        public void DeleteSysRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysRaw();
        }

        /// <summary>
        /// Test DeleteSysRawPath
        /// </summary>
        [Fact]
        public void DeleteSysRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.DeleteSysRawPath(path);
        }

        /// <summary>
        /// Test DeleteSysRekeyBackup
        /// </summary>
        [Fact]
        public void DeleteSysRekeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysRekeyBackup();
        }

        /// <summary>
        /// Test DeleteSysRekeyInit
        /// </summary>
        [Fact]
        public void DeleteSysRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysRekeyInit();
        }

        /// <summary>
        /// Test DeleteSysRekeyRecoveryKeyBackup
        /// </summary>
        [Fact]
        public void DeleteSysRekeyRecoveryKeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysRekeyRecoveryKeyBackup();
        }

        /// <summary>
        /// Test DeleteSysRekeyVerify
        /// </summary>
        [Fact]
        public void DeleteSysRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteSysRekeyVerify();
        }

        /// <summary>
        /// Test GetSysAudit
        /// </summary>
        [Fact]
        public void GetSysAuditTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysAudit();
        }

        /// <summary>
        /// Test GetSysAuth
        /// </summary>
        [Fact]
        public void GetSysAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysAuth();
        }

        /// <summary>
        /// Test GetSysAuthPath
        /// </summary>
        [Fact]
        public void GetSysAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.GetSysAuthPath(path);
        }

        /// <summary>
        /// Test GetSysAuthPathTune
        /// </summary>
        [Fact]
        public void GetSysAuthPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.GetSysAuthPathTune(path);
        }

        /// <summary>
        /// Test GetSysConfigAuditingRequestHeaders
        /// </summary>
        [Fact]
        public void GetSysConfigAuditingRequestHeadersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysConfigAuditingRequestHeaders();
        }

        /// <summary>
        /// Test GetSysConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void GetSysConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.GetSysConfigAuditingRequestHeadersHeader(header);
        }

        /// <summary>
        /// Test GetSysConfigCors
        /// </summary>
        [Fact]
        public void GetSysConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysConfigCors();
        }

        /// <summary>
        /// Test GetSysConfigStateSanitized
        /// </summary>
        [Fact]
        public void GetSysConfigStateSanitizedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysConfigStateSanitized();
        }

        /// <summary>
        /// Test GetSysConfigUiHeaders
        /// </summary>
        [Fact]
        public void GetSysConfigUiHeadersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysConfigUiHeaders(list);
        }

        /// <summary>
        /// Test GetSysConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void GetSysConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //instance.GetSysConfigUiHeadersHeader(header);
        }

        /// <summary>
        /// Test GetSysGenerateRoot
        /// </summary>
        [Fact]
        public void GetSysGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysGenerateRoot();
        }

        /// <summary>
        /// Test GetSysGenerateRootAttempt
        /// </summary>
        [Fact]
        public void GetSysGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysGenerateRootAttempt();
        }

        /// <summary>
        /// Test GetSysHaStatus
        /// </summary>
        [Fact]
        public void GetSysHaStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysHaStatus();
        }

        /// <summary>
        /// Test GetSysHealth
        /// </summary>
        [Fact]
        public void GetSysHealthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysHealth();
        }

        /// <summary>
        /// Test GetSysHostInfo
        /// </summary>
        [Fact]
        public void GetSysHostInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysHostInfo();
        }

        /// <summary>
        /// Test GetSysInFlightReq
        /// </summary>
        [Fact]
        public void GetSysInFlightReqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInFlightReq();
        }

        /// <summary>
        /// Test GetSysInit
        /// </summary>
        [Fact]
        public void GetSysInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInit();
        }

        /// <summary>
        /// Test GetSysInternalCountersActivity
        /// </summary>
        [Fact]
        public void GetSysInternalCountersActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersActivity();
        }

        /// <summary>
        /// Test GetSysInternalCountersActivityExport
        /// </summary>
        [Fact]
        public void GetSysInternalCountersActivityExportTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersActivityExport();
        }

        /// <summary>
        /// Test GetSysInternalCountersActivityMonthly
        /// </summary>
        [Fact]
        public void GetSysInternalCountersActivityMonthlyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersActivityMonthly();
        }

        /// <summary>
        /// Test GetSysInternalCountersConfig
        /// </summary>
        [Fact]
        public void GetSysInternalCountersConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersConfig();
        }

        /// <summary>
        /// Test GetSysInternalCountersEntities
        /// </summary>
        [Fact]
        public void GetSysInternalCountersEntitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersEntities();
        }

        /// <summary>
        /// Test GetSysInternalCountersRequests
        /// </summary>
        [Fact]
        public void GetSysInternalCountersRequestsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersRequests();
        }

        /// <summary>
        /// Test GetSysInternalCountersTokens
        /// </summary>
        [Fact]
        public void GetSysInternalCountersTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalCountersTokens();
        }

        /// <summary>
        /// Test GetSysInternalSpecsOpenapi
        /// </summary>
        [Fact]
        public void GetSysInternalSpecsOpenapiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalSpecsOpenapi();
        }

        /// <summary>
        /// Test GetSysInternalUiFeatureFlags
        /// </summary>
        [Fact]
        public void GetSysInternalUiFeatureFlagsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalUiFeatureFlags();
        }

        /// <summary>
        /// Test GetSysInternalUiMounts
        /// </summary>
        [Fact]
        public void GetSysInternalUiMountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalUiMounts();
        }

        /// <summary>
        /// Test GetSysInternalUiMountsPath
        /// </summary>
        [Fact]
        public void GetSysInternalUiMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.GetSysInternalUiMountsPath(path);
        }

        /// <summary>
        /// Test GetSysInternalUiNamespaces
        /// </summary>
        [Fact]
        public void GetSysInternalUiNamespacesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalUiNamespaces();
        }

        /// <summary>
        /// Test GetSysInternalUiResultantAcl
        /// </summary>
        [Fact]
        public void GetSysInternalUiResultantAclTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysInternalUiResultantAcl();
        }

        /// <summary>
        /// Test GetSysKeyStatus
        /// </summary>
        [Fact]
        public void GetSysKeyStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysKeyStatus();
        }

        /// <summary>
        /// Test GetSysLeader
        /// </summary>
        [Fact]
        public void GetSysLeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysLeader();
        }

        /// <summary>
        /// Test GetSysLeases
        /// </summary>
        [Fact]
        public void GetSysLeasesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysLeases();
        }

        /// <summary>
        /// Test GetSysLeasesCount
        /// </summary>
        [Fact]
        public void GetSysLeasesCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysLeasesCount();
        }

        /// <summary>
        /// Test GetSysLeasesLookup
        /// </summary>
        [Fact]
        public void GetSysLeasesLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysLeasesLookup(list);
        }

        /// <summary>
        /// Test GetSysLeasesLookupPrefix
        /// </summary>
        [Fact]
        public void GetSysLeasesLookupPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //string list = null;
            //instance.GetSysLeasesLookupPrefix(prefix, list);
        }

        /// <summary>
        /// Test GetSysMetrics
        /// </summary>
        [Fact]
        public void GetSysMetricsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string format = null;
            //instance.GetSysMetrics(format);
        }

        /// <summary>
        /// Test GetSysMonitor
        /// </summary>
        [Fact]
        public void GetSysMonitorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string logFormat = null;
            //string logLevel = null;
            //instance.GetSysMonitor(logFormat, logLevel);
        }

        /// <summary>
        /// Test GetSysMounts
        /// </summary>
        [Fact]
        public void GetSysMountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysMounts();
        }

        /// <summary>
        /// Test GetSysMountsPath
        /// </summary>
        [Fact]
        public void GetSysMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.GetSysMountsPath(path);
        }

        /// <summary>
        /// Test GetSysMountsPathTune
        /// </summary>
        [Fact]
        public void GetSysMountsPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //instance.GetSysMountsPathTune(path);
        }

        /// <summary>
        /// Test GetSysPluginsCatalog
        /// </summary>
        [Fact]
        public void GetSysPluginsCatalogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPluginsCatalog();
        }

        /// <summary>
        /// Test GetSysPluginsCatalogName
        /// </summary>
        [Fact]
        public void GetSysPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysPluginsCatalogName(name);
        }

        /// <summary>
        /// Test GetSysPluginsCatalogType
        /// </summary>
        [Fact]
        public void GetSysPluginsCatalogTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //string list = null;
            //instance.GetSysPluginsCatalogType(type, list);
        }

        /// <summary>
        /// Test GetSysPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void GetSysPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //instance.GetSysPluginsCatalogTypeName(name, type);
        }

        /// <summary>
        /// Test GetSysPoliciesAcl
        /// </summary>
        [Fact]
        public void GetSysPoliciesAclTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysPoliciesAcl(list);
        }

        /// <summary>
        /// Test GetSysPoliciesAclName
        /// </summary>
        [Fact]
        public void GetSysPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysPoliciesAclName(name);
        }

        /// <summary>
        /// Test GetSysPoliciesPassword
        /// </summary>
        [Fact]
        public void GetSysPoliciesPasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysPoliciesPassword(list);
        }

        /// <summary>
        /// Test GetSysPoliciesPasswordName
        /// </summary>
        [Fact]
        public void GetSysPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysPoliciesPasswordName(name);
        }

        /// <summary>
        /// Test GetSysPoliciesPasswordNameGenerate
        /// </summary>
        [Fact]
        public void GetSysPoliciesPasswordNameGenerateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysPoliciesPasswordNameGenerate(name);
        }

        /// <summary>
        /// Test GetSysPolicy
        /// </summary>
        [Fact]
        public void GetSysPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysPolicy(list);
        }

        /// <summary>
        /// Test GetSysPolicyName
        /// </summary>
        [Fact]
        public void GetSysPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysPolicyName(name);
        }

        /// <summary>
        /// Test GetSysPprof
        /// </summary>
        [Fact]
        public void GetSysPprofTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprof();
        }

        /// <summary>
        /// Test GetSysPprofAllocs
        /// </summary>
        [Fact]
        public void GetSysPprofAllocsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofAllocs();
        }

        /// <summary>
        /// Test GetSysPprofBlock
        /// </summary>
        [Fact]
        public void GetSysPprofBlockTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofBlock();
        }

        /// <summary>
        /// Test GetSysPprofCmdline
        /// </summary>
        [Fact]
        public void GetSysPprofCmdlineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofCmdline();
        }

        /// <summary>
        /// Test GetSysPprofGoroutine
        /// </summary>
        [Fact]
        public void GetSysPprofGoroutineTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofGoroutine();
        }

        /// <summary>
        /// Test GetSysPprofHeap
        /// </summary>
        [Fact]
        public void GetSysPprofHeapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofHeap();
        }

        /// <summary>
        /// Test GetSysPprofMutex
        /// </summary>
        [Fact]
        public void GetSysPprofMutexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofMutex();
        }

        /// <summary>
        /// Test GetSysPprofProfile
        /// </summary>
        [Fact]
        public void GetSysPprofProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofProfile();
        }

        /// <summary>
        /// Test GetSysPprofSymbol
        /// </summary>
        [Fact]
        public void GetSysPprofSymbolTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofSymbol();
        }

        /// <summary>
        /// Test GetSysPprofThreadcreate
        /// </summary>
        [Fact]
        public void GetSysPprofThreadcreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofThreadcreate();
        }

        /// <summary>
        /// Test GetSysPprofTrace
        /// </summary>
        [Fact]
        public void GetSysPprofTraceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysPprofTrace();
        }

        /// <summary>
        /// Test GetSysQuotasConfig
        /// </summary>
        [Fact]
        public void GetSysQuotasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysQuotasConfig();
        }

        /// <summary>
        /// Test GetSysQuotasRateLimit
        /// </summary>
        [Fact]
        public void GetSysQuotasRateLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysQuotasRateLimit(list);
        }

        /// <summary>
        /// Test GetSysQuotasRateLimitName
        /// </summary>
        [Fact]
        public void GetSysQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //instance.GetSysQuotasRateLimitName(name);
        }

        /// <summary>
        /// Test GetSysRaw
        /// </summary>
        [Fact]
        public void GetSysRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysRaw(list);
        }

        /// <summary>
        /// Test GetSysRawPath
        /// </summary>
        [Fact]
        public void GetSysRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //string list = null;
            //instance.GetSysRawPath(path, list);
        }

        /// <summary>
        /// Test GetSysRekeyBackup
        /// </summary>
        [Fact]
        public void GetSysRekeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysRekeyBackup();
        }

        /// <summary>
        /// Test GetSysRekeyInit
        /// </summary>
        [Fact]
        public void GetSysRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysRekeyInit();
        }

        /// <summary>
        /// Test GetSysRekeyRecoveryKeyBackup
        /// </summary>
        [Fact]
        public void GetSysRekeyRecoveryKeyBackupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysRekeyRecoveryKeyBackup();
        }

        /// <summary>
        /// Test GetSysRekeyVerify
        /// </summary>
        [Fact]
        public void GetSysRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysRekeyVerify();
        }

        /// <summary>
        /// Test GetSysRemountStatusMigrationId
        /// </summary>
        [Fact]
        public void GetSysRemountStatusMigrationIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string migrationId = null;
            //instance.GetSysRemountStatusMigrationId(migrationId);
        }

        /// <summary>
        /// Test GetSysReplicationStatus
        /// </summary>
        [Fact]
        public void GetSysReplicationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysReplicationStatus();
        }

        /// <summary>
        /// Test GetSysRotateConfig
        /// </summary>
        [Fact]
        public void GetSysRotateConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysRotateConfig();
        }

        /// <summary>
        /// Test GetSysSealStatus
        /// </summary>
        [Fact]
        public void GetSysSealStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysSealStatus();
        }

        /// <summary>
        /// Test GetSysVersionHistory
        /// </summary>
        [Fact]
        public void GetSysVersionHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string list = null;
            //instance.GetSysVersionHistory(list);
        }

        /// <summary>
        /// Test GetSysWrappingLookup
        /// </summary>
        [Fact]
        public void GetSysWrappingLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSysWrappingLookup();
        }

        /// <summary>
        /// Test PostSysAuditHashPath
        /// </summary>
        [Fact]
        public void PostSysAuditHashPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuditHashRequest systemAuditHashRequest = null;
            //instance.PostSysAuditHashPath(path, systemAuditHashRequest);
        }

        /// <summary>
        /// Test PostSysAuditPath
        /// </summary>
        [Fact]
        public void PostSysAuditPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuditRequest systemAuditRequest = null;
            //instance.PostSysAuditPath(path, systemAuditRequest);
        }

        /// <summary>
        /// Test PostSysAuthPath
        /// </summary>
        [Fact]
        public void PostSysAuthPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuthRequest systemAuthRequest = null;
            //instance.PostSysAuthPath(path, systemAuthRequest);
        }

        /// <summary>
        /// Test PostSysAuthPathTune
        /// </summary>
        [Fact]
        public void PostSysAuthPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemAuthTuneRequest systemAuthTuneRequest = null;
            //instance.PostSysAuthPathTune(path, systemAuthTuneRequest);
        }

        /// <summary>
        /// Test PostSysCapabilities
        /// </summary>
        [Fact]
        public void PostSysCapabilitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesRequest systemCapabilitiesRequest = null;
            //instance.PostSysCapabilities(systemCapabilitiesRequest);
        }

        /// <summary>
        /// Test PostSysCapabilitiesAccessor
        /// </summary>
        [Fact]
        public void PostSysCapabilitiesAccessorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesAccessorRequest systemCapabilitiesAccessorRequest = null;
            //instance.PostSysCapabilitiesAccessor(systemCapabilitiesAccessorRequest);
        }

        /// <summary>
        /// Test PostSysCapabilitiesSelf
        /// </summary>
        [Fact]
        public void PostSysCapabilitiesSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemCapabilitiesSelfRequest systemCapabilitiesSelfRequest = null;
            //instance.PostSysCapabilitiesSelf(systemCapabilitiesSelfRequest);
        }

        /// <summary>
        /// Test PostSysConfigAuditingRequestHeadersHeader
        /// </summary>
        [Fact]
        public void PostSysConfigAuditingRequestHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //SystemConfigAuditingRequestHeadersRequest systemConfigAuditingRequestHeadersRequest = null;
            //instance.PostSysConfigAuditingRequestHeadersHeader(header, systemConfigAuditingRequestHeadersRequest);
        }

        /// <summary>
        /// Test PostSysConfigCors
        /// </summary>
        [Fact]
        public void PostSysConfigCorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemConfigCorsRequest systemConfigCorsRequest = null;
            //instance.PostSysConfigCors(systemConfigCorsRequest);
        }

        /// <summary>
        /// Test PostSysConfigReloadSubsystem
        /// </summary>
        [Fact]
        public void PostSysConfigReloadSubsystemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string subsystem = null;
            //instance.PostSysConfigReloadSubsystem(subsystem);
        }

        /// <summary>
        /// Test PostSysConfigUiHeadersHeader
        /// </summary>
        [Fact]
        public void PostSysConfigUiHeadersHeaderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string header = null;
            //SystemConfigUiHeadersRequest systemConfigUiHeadersRequest = null;
            //instance.PostSysConfigUiHeadersHeader(header, systemConfigUiHeadersRequest);
        }

        /// <summary>
        /// Test PostSysGenerateRoot
        /// </summary>
        [Fact]
        public void PostSysGenerateRootTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootRequest systemGenerateRootRequest = null;
            //instance.PostSysGenerateRoot(systemGenerateRootRequest);
        }

        /// <summary>
        /// Test PostSysGenerateRootAttempt
        /// </summary>
        [Fact]
        public void PostSysGenerateRootAttemptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootAttemptRequest systemGenerateRootAttemptRequest = null;
            //instance.PostSysGenerateRootAttempt(systemGenerateRootAttemptRequest);
        }

        /// <summary>
        /// Test PostSysGenerateRootUpdate
        /// </summary>
        [Fact]
        public void PostSysGenerateRootUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemGenerateRootUpdateRequest systemGenerateRootUpdateRequest = null;
            //instance.PostSysGenerateRootUpdate(systemGenerateRootUpdateRequest);
        }

        /// <summary>
        /// Test PostSysInit
        /// </summary>
        [Fact]
        public void PostSysInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemInitRequest systemInitRequest = null;
            //instance.PostSysInit(systemInitRequest);
        }

        /// <summary>
        /// Test PostSysInternalCountersConfig
        /// </summary>
        [Fact]
        public void PostSysInternalCountersConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemInternalCountersConfigRequest systemInternalCountersConfigRequest = null;
            //instance.PostSysInternalCountersConfig(systemInternalCountersConfigRequest);
        }

        /// <summary>
        /// Test PostSysLeasesLookup
        /// </summary>
        [Fact]
        public void PostSysLeasesLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesLookupRequest systemLeasesLookupRequest = null;
            //instance.PostSysLeasesLookup(systemLeasesLookupRequest);
        }

        /// <summary>
        /// Test PostSysLeasesRenew
        /// </summary>
        [Fact]
        public void PostSysLeasesRenewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesRenewRequest systemLeasesRenewRequest = null;
            //instance.PostSysLeasesRenew(systemLeasesRenewRequest);
        }

        /// <summary>
        /// Test PostSysLeasesRenewUrlLeaseId
        /// </summary>
        [Fact]
        public void PostSysLeasesRenewUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemLeasesRenewLeaseRequest systemLeasesRenewLeaseRequest = null;
            //instance.PostSysLeasesRenewUrlLeaseId(urlLeaseId, systemLeasesRenewLeaseRequest);
        }

        /// <summary>
        /// Test PostSysLeasesRevoke
        /// </summary>
        [Fact]
        public void PostSysLeasesRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemLeasesRevokeRequest systemLeasesRevokeRequest = null;
            //instance.PostSysLeasesRevoke(systemLeasesRevokeRequest);
        }

        /// <summary>
        /// Test PostSysLeasesRevokeForcePrefix
        /// </summary>
        [Fact]
        public void PostSysLeasesRevokeForcePrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //instance.PostSysLeasesRevokeForcePrefix(prefix);
        }

        /// <summary>
        /// Test PostSysLeasesRevokePrefixPrefix
        /// </summary>
        [Fact]
        public void PostSysLeasesRevokePrefixPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //SystemLeasesRevokePrefixRequest systemLeasesRevokePrefixRequest = null;
            //instance.PostSysLeasesRevokePrefixPrefix(prefix, systemLeasesRevokePrefixRequest);
        }

        /// <summary>
        /// Test PostSysLeasesRevokeUrlLeaseId
        /// </summary>
        [Fact]
        public void PostSysLeasesRevokeUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemLeasesRevokeLeaseRequest systemLeasesRevokeLeaseRequest = null;
            //instance.PostSysLeasesRevokeUrlLeaseId(urlLeaseId, systemLeasesRevokeLeaseRequest);
        }

        /// <summary>
        /// Test PostSysLeasesTidy
        /// </summary>
        [Fact]
        public void PostSysLeasesTidyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostSysLeasesTidy();
        }

        /// <summary>
        /// Test PostSysMfaValidate
        /// </summary>
        [Fact]
        public void PostSysMfaValidateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemMfaValidateRequest systemMfaValidateRequest = null;
            //instance.PostSysMfaValidate(systemMfaValidateRequest);
        }

        /// <summary>
        /// Test PostSysMountsPath
        /// </summary>
        [Fact]
        public void PostSysMountsPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemMountsRequest systemMountsRequest = null;
            //instance.PostSysMountsPath(path, systemMountsRequest);
        }

        /// <summary>
        /// Test PostSysMountsPathTune
        /// </summary>
        [Fact]
        public void PostSysMountsPathTuneTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemMountsTuneRequest systemMountsTuneRequest = null;
            //instance.PostSysMountsPathTune(path, systemMountsTuneRequest);
        }

        /// <summary>
        /// Test PostSysPluginsCatalogName
        /// </summary>
        [Fact]
        public void PostSysPluginsCatalogNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPluginsCatalogRequest systemPluginsCatalogRequest = null;
            //instance.PostSysPluginsCatalogName(name, systemPluginsCatalogRequest);
        }

        /// <summary>
        /// Test PostSysPluginsCatalogTypeName
        /// </summary>
        [Fact]
        public void PostSysPluginsCatalogTypeNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //SystemPluginsCatalogRequest systemPluginsCatalogRequest = null;
            //instance.PostSysPluginsCatalogTypeName(name, type, systemPluginsCatalogRequest);
        }

        /// <summary>
        /// Test PostSysPluginsReloadBackend
        /// </summary>
        [Fact]
        public void PostSysPluginsReloadBackendTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemPluginsReloadBackendRequest systemPluginsReloadBackendRequest = null;
            //instance.PostSysPluginsReloadBackend(systemPluginsReloadBackendRequest);
        }

        /// <summary>
        /// Test PostSysPoliciesAclName
        /// </summary>
        [Fact]
        public void PostSysPoliciesAclNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPoliciesAclRequest systemPoliciesAclRequest = null;
            //instance.PostSysPoliciesAclName(name, systemPoliciesAclRequest);
        }

        /// <summary>
        /// Test PostSysPoliciesPasswordName
        /// </summary>
        [Fact]
        public void PostSysPoliciesPasswordNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPoliciesPasswordRequest systemPoliciesPasswordRequest = null;
            //instance.PostSysPoliciesPasswordName(name, systemPoliciesPasswordRequest);
        }

        /// <summary>
        /// Test PostSysPolicyName
        /// </summary>
        [Fact]
        public void PostSysPolicyNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemPolicyRequest systemPolicyRequest = null;
            //instance.PostSysPolicyName(name, systemPolicyRequest);
        }

        /// <summary>
        /// Test PostSysQuotasConfig
        /// </summary>
        [Fact]
        public void PostSysQuotasConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemQuotasConfigRequest systemQuotasConfigRequest = null;
            //instance.PostSysQuotasConfig(systemQuotasConfigRequest);
        }

        /// <summary>
        /// Test PostSysQuotasRateLimitName
        /// </summary>
        [Fact]
        public void PostSysQuotasRateLimitNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //SystemQuotasRateLimitRequest systemQuotasRateLimitRequest = null;
            //instance.PostSysQuotasRateLimitName(name, systemQuotasRateLimitRequest);
        }

        /// <summary>
        /// Test PostSysRaw
        /// </summary>
        [Fact]
        public void PostSysRawTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRawRequest systemRawRequest = null;
            //instance.PostSysRaw(systemRawRequest);
        }

        /// <summary>
        /// Test PostSysRawPath
        /// </summary>
        [Fact]
        public void PostSysRawPathTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string path = null;
            //SystemRawRequest systemRawRequest = null;
            //instance.PostSysRawPath(path, systemRawRequest);
        }

        /// <summary>
        /// Test PostSysRekeyInit
        /// </summary>
        [Fact]
        public void PostSysRekeyInitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyInitRequest systemRekeyInitRequest = null;
            //instance.PostSysRekeyInit(systemRekeyInitRequest);
        }

        /// <summary>
        /// Test PostSysRekeyUpdate
        /// </summary>
        [Fact]
        public void PostSysRekeyUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyUpdateRequest systemRekeyUpdateRequest = null;
            //instance.PostSysRekeyUpdate(systemRekeyUpdateRequest);
        }

        /// <summary>
        /// Test PostSysRekeyVerify
        /// </summary>
        [Fact]
        public void PostSysRekeyVerifyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRekeyVerifyRequest systemRekeyVerifyRequest = null;
            //instance.PostSysRekeyVerify(systemRekeyVerifyRequest);
        }

        /// <summary>
        /// Test PostSysRemount
        /// </summary>
        [Fact]
        public void PostSysRemountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRemountRequest systemRemountRequest = null;
            //instance.PostSysRemount(systemRemountRequest);
        }

        /// <summary>
        /// Test PostSysRenew
        /// </summary>
        [Fact]
        public void PostSysRenewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRenewRequest systemRenewRequest = null;
            //instance.PostSysRenew(systemRenewRequest);
        }

        /// <summary>
        /// Test PostSysRenewUrlLeaseId
        /// </summary>
        [Fact]
        public void PostSysRenewUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemRenewLeaseRequest systemRenewLeaseRequest = null;
            //instance.PostSysRenewUrlLeaseId(urlLeaseId, systemRenewLeaseRequest);
        }

        /// <summary>
        /// Test PostSysRevoke
        /// </summary>
        [Fact]
        public void PostSysRevokeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRevokeRequest systemRevokeRequest = null;
            //instance.PostSysRevoke(systemRevokeRequest);
        }

        /// <summary>
        /// Test PostSysRevokeForcePrefix
        /// </summary>
        [Fact]
        public void PostSysRevokeForcePrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //instance.PostSysRevokeForcePrefix(prefix);
        }

        /// <summary>
        /// Test PostSysRevokePrefixPrefix
        /// </summary>
        [Fact]
        public void PostSysRevokePrefixPrefixTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string prefix = null;
            //SystemRevokePrefixRequest systemRevokePrefixRequest = null;
            //instance.PostSysRevokePrefixPrefix(prefix, systemRevokePrefixRequest);
        }

        /// <summary>
        /// Test PostSysRevokeUrlLeaseId
        /// </summary>
        [Fact]
        public void PostSysRevokeUrlLeaseIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlLeaseId = null;
            //SystemRevokeLeaseRequest systemRevokeLeaseRequest = null;
            //instance.PostSysRevokeUrlLeaseId(urlLeaseId, systemRevokeLeaseRequest);
        }

        /// <summary>
        /// Test PostSysRotate
        /// </summary>
        [Fact]
        public void PostSysRotateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostSysRotate();
        }

        /// <summary>
        /// Test PostSysRotateConfig
        /// </summary>
        [Fact]
        public void PostSysRotateConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemRotateConfigRequest systemRotateConfigRequest = null;
            //instance.PostSysRotateConfig(systemRotateConfigRequest);
        }

        /// <summary>
        /// Test PostSysSeal
        /// </summary>
        [Fact]
        public void PostSysSealTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostSysSeal();
        }

        /// <summary>
        /// Test PostSysStepDown
        /// </summary>
        [Fact]
        public void PostSysStepDownTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostSysStepDown();
        }

        /// <summary>
        /// Test PostSysToolsHash
        /// </summary>
        [Fact]
        public void PostSysToolsHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemToolsHashRequest systemToolsHashRequest = null;
            //instance.PostSysToolsHash(systemToolsHashRequest);
        }

        /// <summary>
        /// Test PostSysToolsHashUrlalgorithm
        /// </summary>
        [Fact]
        public void PostSysToolsHashUrlalgorithmTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlalgorithm = null;
            //SystemToolsHashRequest systemToolsHashRequest = null;
            //instance.PostSysToolsHashUrlalgorithm(urlalgorithm, systemToolsHashRequest);
        }

        /// <summary>
        /// Test PostSysToolsRandom
        /// </summary>
        [Fact]
        public void PostSysToolsRandomTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.PostSysToolsRandom(systemToolsRandomRequest);
        }

        /// <summary>
        /// Test PostSysToolsRandomSource
        /// </summary>
        [Fact]
        public void PostSysToolsRandomSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.PostSysToolsRandomSource(source, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test PostSysToolsRandomSourceUrlbytes
        /// </summary>
        [Fact]
        public void PostSysToolsRandomSourceUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //string urlbytes = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.PostSysToolsRandomSourceUrlbytes(source, urlbytes, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test PostSysToolsRandomUrlbytes
        /// </summary>
        [Fact]
        public void PostSysToolsRandomUrlbytesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string urlbytes = null;
            //SystemToolsRandomRequest systemToolsRandomRequest = null;
            //instance.PostSysToolsRandomUrlbytes(urlbytes, systemToolsRandomRequest);
        }

        /// <summary>
        /// Test PostSysUnseal
        /// </summary>
        [Fact]
        public void PostSysUnsealTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemUnsealRequest systemUnsealRequest = null;
            //instance.PostSysUnseal(systemUnsealRequest);
        }

        /// <summary>
        /// Test PostSysWrappingLookup
        /// </summary>
        [Fact]
        public void PostSysWrappingLookupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingLookupRequest systemWrappingLookupRequest = null;
            //instance.PostSysWrappingLookup(systemWrappingLookupRequest);
        }

        /// <summary>
        /// Test PostSysWrappingRewrap
        /// </summary>
        [Fact]
        public void PostSysWrappingRewrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingRewrapRequest systemWrappingRewrapRequest = null;
            //instance.PostSysWrappingRewrap(systemWrappingRewrapRequest);
        }

        /// <summary>
        /// Test PostSysWrappingUnwrap
        /// </summary>
        [Fact]
        public void PostSysWrappingUnwrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemWrappingUnwrapRequest systemWrappingUnwrapRequest = null;
            //instance.PostSysWrappingUnwrap(systemWrappingUnwrapRequest);
        }

        /// <summary>
        /// Test PostSysWrappingWrap
        /// </summary>
        [Fact]
        public void PostSysWrappingWrapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.PostSysWrappingWrap();
        }
    }
}
