/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.11.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VaultClient.Api;
using VaultClient.Model;
using VaultClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VaultClient.Test.Model
{
    /// <summary>
    ///  Class for testing IdentityOidcProviderAuthorizeRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IdentityOidcProviderAuthorizeRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IdentityOidcProviderAuthorizeRequest
        //private IdentityOidcProviderAuthorizeRequest instance;

        public IdentityOidcProviderAuthorizeRequestTests()
        {
            // TODO uncomment below to create an instance of IdentityOidcProviderAuthorizeRequest
            //instance = new IdentityOidcProviderAuthorizeRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IdentityOidcProviderAuthorizeRequest
        /// </summary>
        [Fact]
        public void IdentityOidcProviderAuthorizeRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" IdentityOidcProviderAuthorizeRequest
            //Assert.IsType<IdentityOidcProviderAuthorizeRequest>(instance);
        }


        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }
        /// <summary>
        /// Test the property 'CodeChallenge'
        /// </summary>
        [Fact]
        public void CodeChallengeTest()
        {
            // TODO unit test for the property 'CodeChallenge'
        }
        /// <summary>
        /// Test the property 'CodeChallengeMethod'
        /// </summary>
        [Fact]
        public void CodeChallengeMethodTest()
        {
            // TODO unit test for the property 'CodeChallengeMethod'
        }
        /// <summary>
        /// Test the property 'MaxAge'
        /// </summary>
        [Fact]
        public void MaxAgeTest()
        {
            // TODO unit test for the property 'MaxAge'
        }
        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }
        /// <summary>
        /// Test the property 'RedirectUri'
        /// </summary>
        [Fact]
        public void RedirectUriTest()
        {
            // TODO unit test for the property 'RedirectUri'
        }
        /// <summary>
        /// Test the property 'ResponseType'
        /// </summary>
        [Fact]
        public void ResponseTypeTest()
        {
            // TODO unit test for the property 'ResponseType'
        }
        /// <summary>
        /// Test the property 'Scope'
        /// </summary>
        [Fact]
        public void ScopeTest()
        {
            // TODO unit test for the property 'Scope'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

    }

}
