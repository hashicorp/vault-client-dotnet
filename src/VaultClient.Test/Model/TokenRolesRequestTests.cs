/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.11.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VaultClient.Api;
using VaultClient.Model;
using VaultClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VaultClient.Test.Model
{
    /// <summary>
    ///  Class for testing TokenRolesRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TokenRolesRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TokenRolesRequest
        //private TokenRolesRequest instance;

        public TokenRolesRequestTests()
        {
            // TODO uncomment below to create an instance of TokenRolesRequest
            //instance = new TokenRolesRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TokenRolesRequest
        /// </summary>
        [Fact]
        public void TokenRolesRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" TokenRolesRequest
            //Assert.IsType<TokenRolesRequest>(instance);
        }


        /// <summary>
        /// Test the property 'AllowedEntityAliases'
        /// </summary>
        [Fact]
        public void AllowedEntityAliasesTest()
        {
            // TODO unit test for the property 'AllowedEntityAliases'
        }
        /// <summary>
        /// Test the property 'AllowedPolicies'
        /// </summary>
        [Fact]
        public void AllowedPoliciesTest()
        {
            // TODO unit test for the property 'AllowedPolicies'
        }
        /// <summary>
        /// Test the property 'AllowedPoliciesGlob'
        /// </summary>
        [Fact]
        public void AllowedPoliciesGlobTest()
        {
            // TODO unit test for the property 'AllowedPoliciesGlob'
        }
        /// <summary>
        /// Test the property 'BoundCidrs'
        /// </summary>
        [Fact]
        public void BoundCidrsTest()
        {
            // TODO unit test for the property 'BoundCidrs'
        }
        /// <summary>
        /// Test the property 'DisallowedPolicies'
        /// </summary>
        [Fact]
        public void DisallowedPoliciesTest()
        {
            // TODO unit test for the property 'DisallowedPolicies'
        }
        /// <summary>
        /// Test the property 'DisallowedPoliciesGlob'
        /// </summary>
        [Fact]
        public void DisallowedPoliciesGlobTest()
        {
            // TODO unit test for the property 'DisallowedPoliciesGlob'
        }
        /// <summary>
        /// Test the property 'ExplicitMaxTtl'
        /// </summary>
        [Fact]
        public void ExplicitMaxTtlTest()
        {
            // TODO unit test for the property 'ExplicitMaxTtl'
        }
        /// <summary>
        /// Test the property 'Orphan'
        /// </summary>
        [Fact]
        public void OrphanTest()
        {
            // TODO unit test for the property 'Orphan'
        }
        /// <summary>
        /// Test the property 'PathSuffix'
        /// </summary>
        [Fact]
        public void PathSuffixTest()
        {
            // TODO unit test for the property 'PathSuffix'
        }
        /// <summary>
        /// Test the property 'Period'
        /// </summary>
        [Fact]
        public void PeriodTest()
        {
            // TODO unit test for the property 'Period'
        }
        /// <summary>
        /// Test the property 'Renewable'
        /// </summary>
        [Fact]
        public void RenewableTest()
        {
            // TODO unit test for the property 'Renewable'
        }
        /// <summary>
        /// Test the property 'TokenBoundCidrs'
        /// </summary>
        [Fact]
        public void TokenBoundCidrsTest()
        {
            // TODO unit test for the property 'TokenBoundCidrs'
        }
        /// <summary>
        /// Test the property 'TokenExplicitMaxTtl'
        /// </summary>
        [Fact]
        public void TokenExplicitMaxTtlTest()
        {
            // TODO unit test for the property 'TokenExplicitMaxTtl'
        }
        /// <summary>
        /// Test the property 'TokenNoDefaultPolicy'
        /// </summary>
        [Fact]
        public void TokenNoDefaultPolicyTest()
        {
            // TODO unit test for the property 'TokenNoDefaultPolicy'
        }
        /// <summary>
        /// Test the property 'TokenNumUses'
        /// </summary>
        [Fact]
        public void TokenNumUsesTest()
        {
            // TODO unit test for the property 'TokenNumUses'
        }
        /// <summary>
        /// Test the property 'TokenPeriod'
        /// </summary>
        [Fact]
        public void TokenPeriodTest()
        {
            // TODO unit test for the property 'TokenPeriod'
        }
        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }

    }

}
