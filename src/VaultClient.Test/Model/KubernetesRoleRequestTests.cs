/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.12.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VaultClient.Api;
using VaultClient.Model;
using VaultClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VaultClient.Test.Model
{
    /// <summary>
    ///  Class for testing KubernetesRoleRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class KubernetesRoleRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for KubernetesRoleRequest
        //private KubernetesRoleRequest instance;

        public KubernetesRoleRequestTests()
        {
            // TODO uncomment below to create an instance of KubernetesRoleRequest
            //instance = new KubernetesRoleRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of KubernetesRoleRequest
        /// </summary>
        [Fact]
        public void KubernetesRoleRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" KubernetesRoleRequest
            //Assert.IsType<KubernetesRoleRequest>(instance);
        }


        /// <summary>
        /// Test the property 'AliasNameSource'
        /// </summary>
        [Fact]
        public void AliasNameSourceTest()
        {
            // TODO unit test for the property 'AliasNameSource'
        }
        /// <summary>
        /// Test the property 'Audience'
        /// </summary>
        [Fact]
        public void AudienceTest()
        {
            // TODO unit test for the property 'Audience'
        }
        /// <summary>
        /// Test the property 'BoundCidrs'
        /// </summary>
        [Fact]
        public void BoundCidrsTest()
        {
            // TODO unit test for the property 'BoundCidrs'
        }
        /// <summary>
        /// Test the property 'BoundServiceAccountNames'
        /// </summary>
        [Fact]
        public void BoundServiceAccountNamesTest()
        {
            // TODO unit test for the property 'BoundServiceAccountNames'
        }
        /// <summary>
        /// Test the property 'BoundServiceAccountNamespaces'
        /// </summary>
        [Fact]
        public void BoundServiceAccountNamespacesTest()
        {
            // TODO unit test for the property 'BoundServiceAccountNamespaces'
        }
        /// <summary>
        /// Test the property 'MaxTtl'
        /// </summary>
        [Fact]
        public void MaxTtlTest()
        {
            // TODO unit test for the property 'MaxTtl'
        }
        /// <summary>
        /// Test the property 'NumUses'
        /// </summary>
        [Fact]
        public void NumUsesTest()
        {
            // TODO unit test for the property 'NumUses'
        }
        /// <summary>
        /// Test the property 'Period'
        /// </summary>
        [Fact]
        public void PeriodTest()
        {
            // TODO unit test for the property 'Period'
        }
        /// <summary>
        /// Test the property 'Policies'
        /// </summary>
        [Fact]
        public void PoliciesTest()
        {
            // TODO unit test for the property 'Policies'
        }
        /// <summary>
        /// Test the property 'TokenBoundCidrs'
        /// </summary>
        [Fact]
        public void TokenBoundCidrsTest()
        {
            // TODO unit test for the property 'TokenBoundCidrs'
        }
        /// <summary>
        /// Test the property 'TokenExplicitMaxTtl'
        /// </summary>
        [Fact]
        public void TokenExplicitMaxTtlTest()
        {
            // TODO unit test for the property 'TokenExplicitMaxTtl'
        }
        /// <summary>
        /// Test the property 'TokenMaxTtl'
        /// </summary>
        [Fact]
        public void TokenMaxTtlTest()
        {
            // TODO unit test for the property 'TokenMaxTtl'
        }
        /// <summary>
        /// Test the property 'TokenNoDefaultPolicy'
        /// </summary>
        [Fact]
        public void TokenNoDefaultPolicyTest()
        {
            // TODO unit test for the property 'TokenNoDefaultPolicy'
        }
        /// <summary>
        /// Test the property 'TokenNumUses'
        /// </summary>
        [Fact]
        public void TokenNumUsesTest()
        {
            // TODO unit test for the property 'TokenNumUses'
        }
        /// <summary>
        /// Test the property 'TokenPeriod'
        /// </summary>
        [Fact]
        public void TokenPeriodTest()
        {
            // TODO unit test for the property 'TokenPeriod'
        }
        /// <summary>
        /// Test the property 'TokenPolicies'
        /// </summary>
        [Fact]
        public void TokenPoliciesTest()
        {
            // TODO unit test for the property 'TokenPolicies'
        }
        /// <summary>
        /// Test the property 'TokenTtl'
        /// </summary>
        [Fact]
        public void TokenTtlTest()
        {
            // TODO unit test for the property 'TokenTtl'
        }
        /// <summary>
        /// Test the property 'TokenType'
        /// </summary>
        [Fact]
        public void TokenTypeTest()
        {
            // TODO unit test for the property 'TokenType'
        }
        /// <summary>
        /// Test the property 'Ttl'
        /// </summary>
        [Fact]
        public void TtlTest()
        {
            // TODO unit test for the property 'Ttl'
        }

    }

}
