/*
 * HashiCorp Vault API
 *
 * HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.
 *
 * The version of the OpenAPI document: 1.11.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = VaultClient.Client.FileParameter;
using OpenAPIDateConverter = VaultClient.Client.OpenAPIDateConverter;

namespace VaultClient.Model
{
    /// <summary>
    /// KubernetesRolesRequest
    /// </summary>
    [DataContract(Name = "KubernetesRolesRequest")]
    public partial class KubernetesRolesRequest : IEquatable<KubernetesRolesRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KubernetesRolesRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KubernetesRolesRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KubernetesRolesRequest" /> class.
        /// </summary>
        /// <param name="additionalMetadata">Additional labels and annotations to apply to all generated object in Kubernetes..</param>
        /// <param name="allowedKubernetesNamespaces">A list of the valid Kubernetes namespaces in which this role can be used for creating service accounts. If set to \&quot;*\&quot; all namespaces are allowed. (required).</param>
        /// <param name="generatedRoleRules">The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated..</param>
        /// <param name="kubernetesRoleName">The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created..</param>
        /// <param name="kubernetesRoleType">Specifies whether the Kubernetes role is a Role or ClusterRole. (default to &quot;Role&quot;).</param>
        /// <param name="nameTemplate">The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used..</param>
        /// <param name="serviceAccountName">The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes token will be created..</param>
        /// <param name="tokenDefaultTtl">The default ttl for generated Kubernetes service accounts. If not set or set to 0, will use system default..</param>
        /// <param name="tokenMaxTtl">The maximum valid ttl for generated Kubernetes tokens. If not set or set to 0, will use system default..</param>
        public KubernetesRolesRequest(Object additionalMetadata = default(Object), List<string> allowedKubernetesNamespaces = default(List<string>), string generatedRoleRules = default(string), string kubernetesRoleName = default(string), string kubernetesRoleType = "Role", string nameTemplate = default(string), string serviceAccountName = default(string), int tokenDefaultTtl = default(int), int tokenMaxTtl = default(int))
        {
            // to ensure "allowedKubernetesNamespaces" is required (not null)
            if (allowedKubernetesNamespaces == null) {
                throw new ArgumentNullException("allowedKubernetesNamespaces is a required property for KubernetesRolesRequest and cannot be null");
            }
            this.AllowedKubernetesNamespaces = allowedKubernetesNamespaces;
            this.AdditionalMetadata = additionalMetadata;
            this.GeneratedRoleRules = generatedRoleRules;
            this.KubernetesRoleName = kubernetesRoleName;
            // use default value if no "kubernetesRoleType" provided
            this.KubernetesRoleType = kubernetesRoleType ?? "Role";
            this.NameTemplate = nameTemplate;
            this.ServiceAccountName = serviceAccountName;
            this.TokenDefaultTtl = tokenDefaultTtl;
            this.TokenMaxTtl = tokenMaxTtl;
        }

        /// <summary>
        /// Additional labels and annotations to apply to all generated object in Kubernetes.
        /// </summary>
        /// <value>Additional labels and annotations to apply to all generated object in Kubernetes.</value>
        [DataMember(Name = "additional_metadata", EmitDefaultValue = false)]
        public Object AdditionalMetadata { get; set; }

        /// <summary>
        /// A list of the valid Kubernetes namespaces in which this role can be used for creating service accounts. If set to \&quot;*\&quot; all namespaces are allowed.
        /// </summary>
        /// <value>A list of the valid Kubernetes namespaces in which this role can be used for creating service accounts. If set to \&quot;*\&quot; all namespaces are allowed.</value>
        [DataMember(Name = "allowed_kubernetes_namespaces", IsRequired = true, EmitDefaultValue = false)]
        public List<string> AllowedKubernetesNamespaces { get; set; }

        /// <summary>
        /// The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated.
        /// </summary>
        /// <value>The Role or ClusterRole rules to use when generating a role. Accepts either a JSON or YAML object. If set, the entire chain of Kubernetes objects will be generated.</value>
        [DataMember(Name = "generated_role_rules", EmitDefaultValue = false)]
        public string GeneratedRoleRules { get; set; }

        /// <summary>
        /// The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created.
        /// </summary>
        /// <value>The pre-existing Role or ClusterRole to bind a generated service account to. If set, Kubernetes token, service account, and role binding objects will be created.</value>
        [DataMember(Name = "kubernetes_role_name", EmitDefaultValue = false)]
        public string KubernetesRoleName { get; set; }

        /// <summary>
        /// Specifies whether the Kubernetes role is a Role or ClusterRole.
        /// </summary>
        /// <value>Specifies whether the Kubernetes role is a Role or ClusterRole.</value>
        [DataMember(Name = "kubernetes_role_type", EmitDefaultValue = false)]
        public string KubernetesRoleType { get; set; }

        /// <summary>
        /// The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.
        /// </summary>
        /// <value>The name template to use when generating service accounts, roles and role bindings. If unset, a default template is used.</value>
        [DataMember(Name = "name_template", EmitDefaultValue = false)]
        public string NameTemplate { get; set; }

        /// <summary>
        /// The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes token will be created.
        /// </summary>
        /// <value>The pre-existing service account to generate tokens for. Mutually exclusive with all role parameters. If set, only a Kubernetes token will be created.</value>
        [DataMember(Name = "service_account_name", EmitDefaultValue = false)]
        public string ServiceAccountName { get; set; }

        /// <summary>
        /// The default ttl for generated Kubernetes service accounts. If not set or set to 0, will use system default.
        /// </summary>
        /// <value>The default ttl for generated Kubernetes service accounts. If not set or set to 0, will use system default.</value>
        [DataMember(Name = "token_default_ttl", EmitDefaultValue = false)]
        public int TokenDefaultTtl { get; set; }

        /// <summary>
        /// The maximum valid ttl for generated Kubernetes tokens. If not set or set to 0, will use system default.
        /// </summary>
        /// <value>The maximum valid ttl for generated Kubernetes tokens. If not set or set to 0, will use system default.</value>
        [DataMember(Name = "token_max_ttl", EmitDefaultValue = false)]
        public int TokenMaxTtl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KubernetesRolesRequest {\n");
            sb.Append("  AdditionalMetadata: ").Append(AdditionalMetadata).Append("\n");
            sb.Append("  AllowedKubernetesNamespaces: ").Append(AllowedKubernetesNamespaces).Append("\n");
            sb.Append("  GeneratedRoleRules: ").Append(GeneratedRoleRules).Append("\n");
            sb.Append("  KubernetesRoleName: ").Append(KubernetesRoleName).Append("\n");
            sb.Append("  KubernetesRoleType: ").Append(KubernetesRoleType).Append("\n");
            sb.Append("  NameTemplate: ").Append(NameTemplate).Append("\n");
            sb.Append("  ServiceAccountName: ").Append(ServiceAccountName).Append("\n");
            sb.Append("  TokenDefaultTtl: ").Append(TokenDefaultTtl).Append("\n");
            sb.Append("  TokenMaxTtl: ").Append(TokenMaxTtl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KubernetesRolesRequest);
        }

        /// <summary>
        /// Returns true if KubernetesRolesRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of KubernetesRolesRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KubernetesRolesRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AdditionalMetadata == input.AdditionalMetadata ||
                    (this.AdditionalMetadata != null &&
                    this.AdditionalMetadata.Equals(input.AdditionalMetadata))
                ) && 
                (
                    this.AllowedKubernetesNamespaces == input.AllowedKubernetesNamespaces ||
                    this.AllowedKubernetesNamespaces != null &&
                    input.AllowedKubernetesNamespaces != null &&
                    this.AllowedKubernetesNamespaces.SequenceEqual(input.AllowedKubernetesNamespaces)
                ) && 
                (
                    this.GeneratedRoleRules == input.GeneratedRoleRules ||
                    (this.GeneratedRoleRules != null &&
                    this.GeneratedRoleRules.Equals(input.GeneratedRoleRules))
                ) && 
                (
                    this.KubernetesRoleName == input.KubernetesRoleName ||
                    (this.KubernetesRoleName != null &&
                    this.KubernetesRoleName.Equals(input.KubernetesRoleName))
                ) && 
                (
                    this.KubernetesRoleType == input.KubernetesRoleType ||
                    (this.KubernetesRoleType != null &&
                    this.KubernetesRoleType.Equals(input.KubernetesRoleType))
                ) && 
                (
                    this.NameTemplate == input.NameTemplate ||
                    (this.NameTemplate != null &&
                    this.NameTemplate.Equals(input.NameTemplate))
                ) && 
                (
                    this.ServiceAccountName == input.ServiceAccountName ||
                    (this.ServiceAccountName != null &&
                    this.ServiceAccountName.Equals(input.ServiceAccountName))
                ) && 
                (
                    this.TokenDefaultTtl == input.TokenDefaultTtl ||
                    this.TokenDefaultTtl.Equals(input.TokenDefaultTtl)
                ) && 
                (
                    this.TokenMaxTtl == input.TokenMaxTtl ||
                    this.TokenMaxTtl.Equals(input.TokenMaxTtl)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AdditionalMetadata != null)
                {
                    hashCode = (hashCode * 59) + this.AdditionalMetadata.GetHashCode();
                }
                if (this.AllowedKubernetesNamespaces != null)
                {
                    hashCode = (hashCode * 59) + this.AllowedKubernetesNamespaces.GetHashCode();
                }
                if (this.GeneratedRoleRules != null)
                {
                    hashCode = (hashCode * 59) + this.GeneratedRoleRules.GetHashCode();
                }
                if (this.KubernetesRoleName != null)
                {
                    hashCode = (hashCode * 59) + this.KubernetesRoleName.GetHashCode();
                }
                if (this.KubernetesRoleType != null)
                {
                    hashCode = (hashCode * 59) + this.KubernetesRoleType.GetHashCode();
                }
                if (this.NameTemplate != null)
                {
                    hashCode = (hashCode * 59) + this.NameTemplate.GetHashCode();
                }
                if (this.ServiceAccountName != null)
                {
                    hashCode = (hashCode * 59) + this.ServiceAccountName.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.TokenDefaultTtl.GetHashCode();
                hashCode = (hashCode * 59) + this.TokenMaxTtl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
